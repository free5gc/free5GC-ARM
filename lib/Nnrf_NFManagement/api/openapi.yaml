openapi: 3.0.0
info:
  description: NRF NFManagement Service
  title: NRF NFManagement Service
  version: 1.0.0
externalDocs:
  description: 3GPP TS 29.510 V15.2.0; 5G System; Network Function Repository Services; Stage 3
  url: http://www.3gpp.org/ftp/Specs/archive/29_series/29.510/
servers:
- url: '{apiRoot}/nnrf-nfm/v1'
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in subclause subclause 4.4 of 3GPP TS 29.501
security:
- {}
- oAuth2ClientCredentials:
  - nnrf-nfm
paths:
  /nf-instances:
    get:
      operationId: GetNFInstances
      parameters:
      - description: Type of NF
        explode: true
        in: query
        name: nf-type
        required: false
        schema:
          $ref: '#/components/schemas/NFType'
        style: form
      - description: How many items to return at one time
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        200:
          content:
            application/3gppHal+json:
              schema:
                minProperties: 1
                properties:
                  _links:
                    additionalProperties:
                      $ref: '#/components/schemas/LinksValueSchema'
                    description: List of the URI of NF instances. It has two members whose names are item and self. The item one contains an array of URIs.
                    type: object
                type: object
          description: Expected response to a valid request
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        501:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Retrieves a collection of NF Instances
      tags:
      - NF Instances (Store)
  /nf-instances/{nfInstanceID}:
    delete:
      operationId: DeregisterNFInstance
      parameters:
      - description: Unique ID of the NF Instance to deregister
        explode: false
        in: path
        name: nfInstanceID
        required: true
        schema:
          $ref: '#/components/schemas/NfInstanceId'
        style: simple
      responses:
        204:
          description: Expected response to a successful deregistration
      summary: Deregisters a given NF Instance
      tags:
      - NF Instance ID (Document)
    get:
      operationId: GetNFInstance
      parameters:
      - description: Unique ID of the NF Instance
        explode: false
        in: path
        name: nfInstanceID
        required: true
        schema:
          $ref: '#/components/schemas/NfInstanceId'
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFProfile'
          description: Expected response to a valid request
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        501:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Read the profile of a given NF Instance
      tags:
      - NF Instance ID (Document)
    patch:
      operationId: UpdateNFInstance
      parameters:
      - description: Unique ID of the NF Instance to update
        explode: false
        in: path
        name: nfInstanceID
        required: true
        schema:
          $ref: '#/components/schemas/NfInstanceId'
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              minItems: 1
              type: array
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFProfile'
          description: Expected response to a valid request
        204:
          description: Expected response with empty body
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        501:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Update NF Instance profile
      tags:
      - NF Instance ID (Document)
    put:
      operationId: RegisterNFInstance
      parameters:
      - description: Unique ID of the NF Instance to register
        explode: false
        in: path
        name: nfInstanceID
        required: true
        schema:
          $ref: '#/components/schemas/NfInstanceId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NFProfile'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFProfile'
          description: OK (Profile Replacement)
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFProfile'
          description: Expected response to a valid request
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/nnrf-nfm/v1/nf-instances/{nfInstanceId}'
              explode: false
              required: true
              schema:
                type: string
              style: simple
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        501:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Register a new NF Instance
      tags:
      - NF Instance ID (Document)
  /subscriptions:
    post:
      callbacks:
        onNFStatusEvent:
          '{$request.body#/nfStatusNotificationUri}':
            post:
              operationId: onNFStatusEvent_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/NotificationData'
                description: Notification Payload
              responses:
                204:
                  description: Expected response to a successful callback processing
                400:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                403:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                404:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                411:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                413:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                415:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                500:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                501:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Implemented
                503:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      operationId: CreateSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionData'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionData'
          description: Expected response to a valid request
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/nnrf-nfm/v1/subscriptions/{subscriptionId}'
              explode: false
              required: true
              schema:
                type: string
              style: simple
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        501:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Create a new subscription
      tags:
      - Subscriptions (Collection)
  /subscriptions/{subscriptionID}:
    delete:
      operationId: RemoveSubscription
      parameters:
      - description: Unique ID of the subscription to remove
        explode: false
        in: path
        name: subscriptionID
        required: true
        schema:
          pattern: ^([0-9]{5,6}-)?[^-]+$
          type: string
        style: simple
      responses:
        204:
          description: Expected response to a successful subscription removal
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        501:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Deletes a subscription
      tags:
      - Subscription ID (Document)
    patch:
      operationId: UpdateSubscription
      parameters:
      - description: Unique ID of the subscription to update
        explode: false
        in: path
        name: subscriptionID
        required: true
        schema:
          pattern: ^([0-9]{5,6}-)?[^-]+$
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionData'
          description: Expected response to a valid request
        204:
          description: No Content
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        501:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Updates a subscription
      tags:
      - Subscription ID (Document)
components:
  schemas:
    NFProfile:
      anyOf:
      - required:
        - fqdn
      - required:
        - ipv4Addresses
      - required:
        - ipv6Addresses
      example:
        sNssais:
        - sd: sd
          sst: 153
        - sd: sd
          sst: 153
        nrfInfo:
          servedUdrInfo:
            key:
              supportedDataSets:
              - null
              - null
              groupId: groupId
              externalGroupIdentifiersRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              supiRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              gpsiRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
          servedUdmInfo:
            key:
              routingIndicators:
              - routingIndicators
              - routingIndicators
              groupId: groupId
              externalGroupIdentifiersRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              supiRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              gpsiRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
          servedPcfInfo:
            key:
              rxDiamHost: rxDiamHost
              dnnList:
              - null
              - null
              rxDiamRealm: rxDiamRealm
              supiRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
          servedChfInfo:
            key:
              gpsiRangeList:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              plmnRangeList:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              supiRangeList:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
          servedAusfInfo:
            key:
              routingIndicators:
              - routingIndicators
              - routingIndicators
              groupId: groupId
              supiRanges:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
          servedSmfInfo:
            key:
              accessType:
              - null
              - null
              sNssaiSmfInfoList:
              - dnnSmfInfoList:
                - dnn: dnn
                - dnn: dnn
                sNssai:
                  sd: sd
                  sst: 153
              - dnnSmfInfoList:
                - dnn: dnn
                - dnn: dnn
                sNssai:
                  sd: sd
                  sst: 153
              taiRangeList:
              - tacRangeList:
                - start: start
                  pattern: pattern
                  end: end
                - start: start
                  pattern: pattern
                  end: end
                plmnId:
                  mnc: mnc
                  mcc: mcc
              - tacRangeList:
                - start: start
                  pattern: pattern
                  end: end
                - start: start
                  pattern: pattern
                  end: end
                plmnId:
                  mnc: mnc
                  mcc: mcc
              taiList:
              - tac: tac
                plmnId:
                  mnc: mnc
                  mcc: mcc
              - tac: tac
                plmnId:
                  mnc: mnc
                  mcc: mcc
              pgwFqdn: pgwFqdn
          servedBsfInfo:
            key:
              dnnList:
              - null
              - null
              ipv6PrefixRanges:
              - start: 2001:db8:abcd:12::0/64
                end: 2001:db8:abcd:12::0/64
              - start: 2001:db8:abcd:12::0/64
                end: 2001:db8:abcd:12::0/64
              ipDomainList:
              - ipDomainList
              - ipDomainList
              ipv4AddressRanges:
              - start: 198.51.100.1
                end: 198.51.100.1
              - start: 198.51.100.1
                end: 198.51.100.1
          servedAmfInfo:
            key:
              backupInfoAmfRemoval:
              - plmnId:
                  mnc: mnc
                  mcc: mcc
                amfId: amfId
              - plmnId:
                  mnc: mnc
                  mcc: mcc
                amfId: amfId
              guamiList:
              - plmnId:
                  mnc: mnc
                  mcc: mcc
                amfId: amfId
              - plmnId:
                  mnc: mnc
                  mcc: mcc
                amfId: amfId
              taiRangeList:
              - tacRangeList:
                - start: start
                  pattern: pattern
                  end: end
                - start: start
                  pattern: pattern
                  end: end
                plmnId:
                  mnc: mnc
                  mcc: mcc
              - tacRangeList:
                - start: start
                  pattern: pattern
                  end: end
                - start: start
                  pattern: pattern
                  end: end
                plmnId:
                  mnc: mnc
                  mcc: mcc
              backupInfoAmfFailure:
              - plmnId:
                  mnc: mnc
                  mcc: mcc
                amfId: amfId
              - plmnId:
                  mnc: mnc
                  mcc: mcc
                amfId: amfId
              amfSetId: amfSetId
              amfRegionId: amfRegionId
              n2InterfaceAmfInfo:
                ipv4EndpointAddress:
                - 198.51.100.1
                - 198.51.100.1
                amfName: amfName
                ipv6EndpointAddress:
                - 2001:db8:85a3::8a2e:370:7334
                - 2001:db8:85a3::8a2e:370:7334
              taiList:
              - tac: tac
                plmnId:
                  mnc: mnc
                  mcc: mcc
              - tac: tac
                plmnId:
                  mnc: mnc
                  mcc: mcc
          servedUpfInfo:
            key:
              iwkEpsInd: false
              interfaceUpfInfoList:
              - networkInstance: networkInstance
                ipv4EndpointAddresses:
                - 198.51.100.1
                - 198.51.100.1
                ipv6EndpointAddresses:
                - 2001:db8:85a3::8a2e:370:7334
                - 2001:db8:85a3::8a2e:370:7334
                endpointFqdn: endpointFqdn
              - networkInstance: networkInstance
                ipv4EndpointAddresses:
                - 198.51.100.1
                - 198.51.100.1
                ipv6EndpointAddresses:
                - 2001:db8:85a3::8a2e:370:7334
                - 2001:db8:85a3::8a2e:370:7334
                endpointFqdn: endpointFqdn
              smfServingArea:
              - smfServingArea
              - smfServingArea
              sNssaiUpfInfoList:
              - dnnUpfInfoList:
                - dnaiList:
                  - null
                  - null
                  dnn: dnn
                - dnaiList:
                  - null
                  - null
                  dnn: dnn
                sNssai:
                  sd: sd
                  sst: 153
              - dnnUpfInfoList:
                - dnaiList:
                  - null
                  - null
                  dnn: dnn
                - dnaiList:
                  - null
                  - null
                  dnn: dnn
                sNssai:
                  sd: sd
                  sst: 153
        allowedNfTypes:
        - null
        - null
        pcfInfo:
          rxDiamHost: rxDiamHost
          dnnList:
          - null
          - null
          rxDiamRealm: rxDiamRealm
          supiRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
        allowedNfDomains:
        - allowedNfDomains
        - allowedNfDomains
        ipv6Addresses:
        - 2001:db8:85a3::8a2e:370:7334
        - 2001:db8:85a3::8a2e:370:7334
        customInfo: '{}'
        plmnList:
        - mnc: mnc
          mcc: mcc
        - mnc: mnc
          mcc: mcc
        udmInfo:
          routingIndicators:
          - routingIndicators
          - routingIndicators
          groupId: groupId
          externalGroupIdentifiersRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          supiRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          gpsiRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
        capacity: 39072
        nsiList:
        - nsiList
        - nsiList
        load: 56
        nfServices:
        - recoveryTime: 2000-01-23T04:56:07.000+00:00
          allowedNssais:
          - sd: sd
            sst: 153
          - sd: sd
            sst: 153
          supportedFeatures: supportedFeatures
          fqdn: fqdn
          allowedNfTypes:
          - null
          - null
          serviceInstanceId: serviceInstanceId
          allowedNfDomains:
          - allowedNfDomains
          - allowedNfDomains
          priority: 46276
          capacity: 60957
          defaultNotificationSubscriptions:
          - callbackUri: callbackUri
          - callbackUri: callbackUri
          load: 36
          versions:
          - apiFullVersion: apiFullVersion
            apiVersionInUri: apiVersionInUri
            expiry: 2000-01-23T04:56:07.000+00:00
          - apiFullVersion: apiFullVersion
            apiVersionInUri: apiVersionInUri
            expiry: 2000-01-23T04:56:07.000+00:00
          ipEndPoints:
          - ipv6Address: 2001:db8:85a3::8a2e:370:7334
            port: 15087
            ipv4Address: 198.51.100.1
          - ipv6Address: 2001:db8:85a3::8a2e:370:7334
            port: 15087
            ipv4Address: 198.51.100.1
          apiPrefix: apiPrefix
          chfServiceInfo:
            primaryChfServiceInstance: primaryChfServiceInstance
            secondaryChfServiceInstance: secondaryChfServiceInstance
          interPlmnFqdn: interPlmnFqdn
          allowedPlmns:
          - mnc: mnc
            mcc: mcc
          - mnc: mnc
            mcc: mcc
        - recoveryTime: 2000-01-23T04:56:07.000+00:00
          allowedNssais:
          - sd: sd
            sst: 153
          - sd: sd
            sst: 153
          supportedFeatures: supportedFeatures
          fqdn: fqdn
          allowedNfTypes:
          - null
          - null
          serviceInstanceId: serviceInstanceId
          allowedNfDomains:
          - allowedNfDomains
          - allowedNfDomains
          priority: 46276
          capacity: 60957
          defaultNotificationSubscriptions:
          - callbackUri: callbackUri
          - callbackUri: callbackUri
          load: 36
          versions:
          - apiFullVersion: apiFullVersion
            apiVersionInUri: apiVersionInUri
            expiry: 2000-01-23T04:56:07.000+00:00
          - apiFullVersion: apiFullVersion
            apiVersionInUri: apiVersionInUri
            expiry: 2000-01-23T04:56:07.000+00:00
          ipEndPoints:
          - ipv6Address: 2001:db8:85a3::8a2e:370:7334
            port: 15087
            ipv4Address: 198.51.100.1
          - ipv6Address: 2001:db8:85a3::8a2e:370:7334
            port: 15087
            ipv4Address: 198.51.100.1
          apiPrefix: apiPrefix
          chfServiceInfo:
            primaryChfServiceInstance: primaryChfServiceInstance
            secondaryChfServiceInstance: secondaryChfServiceInstance
          interPlmnFqdn: interPlmnFqdn
          allowedPlmns:
          - mnc: mnc
            mcc: mcc
          - mnc: mnc
            mcc: mcc
        udrInfo:
          supportedDataSets:
          - null
          - null
          groupId: groupId
          externalGroupIdentifiersRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          supiRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          gpsiRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
        interPlmnFqdn: interPlmnFqdn
        allowedPlmns:
        - mnc: mnc
          mcc: mcc
        - mnc: mnc
          mcc: mcc
        ausfInfo:
          routingIndicators:
          - routingIndicators
          - routingIndicators
          groupId: groupId
          supiRanges:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
        nfServicePersistence: false
        ipv4Addresses:
        - 198.51.100.1
        - 198.51.100.1
        recoveryTime: 2000-01-23T04:56:07.000+00:00
        nfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowedNssais:
        - sd: sd
          sst: 153
        - sd: sd
          sst: 153
        upfInfo:
          iwkEpsInd: false
          interfaceUpfInfoList:
          - networkInstance: networkInstance
            ipv4EndpointAddresses:
            - 198.51.100.1
            - 198.51.100.1
            ipv6EndpointAddresses:
            - 2001:db8:85a3::8a2e:370:7334
            - 2001:db8:85a3::8a2e:370:7334
            endpointFqdn: endpointFqdn
          - networkInstance: networkInstance
            ipv4EndpointAddresses:
            - 198.51.100.1
            - 198.51.100.1
            ipv6EndpointAddresses:
            - 2001:db8:85a3::8a2e:370:7334
            - 2001:db8:85a3::8a2e:370:7334
            endpointFqdn: endpointFqdn
          smfServingArea:
          - smfServingArea
          - smfServingArea
          sNssaiUpfInfoList:
          - dnnUpfInfoList:
            - dnaiList:
              - null
              - null
              dnn: dnn
            - dnaiList:
              - null
              - null
              dnn: dnn
            sNssai:
              sd: sd
              sst: 153
          - dnnUpfInfoList:
            - dnaiList:
              - null
              - null
              dnn: dnn
            - dnaiList:
              - null
              - null
              dnn: dnn
            sNssai:
              sd: sd
              sst: 153
        bsfInfo:
          dnnList:
          - null
          - null
          ipv6PrefixRanges:
          - start: 2001:db8:abcd:12::0/64
            end: 2001:db8:abcd:12::0/64
          - start: 2001:db8:abcd:12::0/64
            end: 2001:db8:abcd:12::0/64
          ipDomainList:
          - ipDomainList
          - ipDomainList
          ipv4AddressRanges:
          - start: 198.51.100.1
            end: 198.51.100.1
          - start: 198.51.100.1
            end: 198.51.100.1
        fqdn: fqdn
        locality: locality
        priority: 9606
        chfInfo:
          gpsiRangeList:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          plmnRangeList:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          supiRangeList:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
        amfInfo:
          backupInfoAmfRemoval:
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          guamiList:
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          taiRangeList:
          - tacRangeList:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            plmnId:
              mnc: mnc
              mcc: mcc
          - tacRangeList:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            plmnId:
              mnc: mnc
              mcc: mcc
          backupInfoAmfFailure:
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          amfSetId: amfSetId
          amfRegionId: amfRegionId
          n2InterfaceAmfInfo:
            ipv4EndpointAddress:
            - 198.51.100.1
            - 198.51.100.1
            amfName: amfName
            ipv6EndpointAddress:
            - 2001:db8:85a3::8a2e:370:7334
            - 2001:db8:85a3::8a2e:370:7334
          taiList:
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
        smfInfo:
          accessType:
          - null
          - null
          sNssaiSmfInfoList:
          - dnnSmfInfoList:
            - dnn: dnn
            - dnn: dnn
            sNssai:
              sd: sd
              sst: 153
          - dnnSmfInfoList:
            - dnn: dnn
            - dnn: dnn
            sNssai:
              sd: sd
              sst: 153
          taiRangeList:
          - tacRangeList:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            plmnId:
              mnc: mnc
              mcc: mcc
          - tacRangeList:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            plmnId:
              mnc: mnc
              mcc: mcc
          taiList:
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          pgwFqdn: pgwFqdn
        heartBeatTimer: 0
      properties:
        nfInstanceId:
          format: uuid
          type: string
        nfType:
          $ref: '#/components/schemas/NFType'
        nfStatus:
          $ref: '#/components/schemas/NFStatus'
        heartBeatTimer:
          format: int32
          type: integer
        plmnList:
          items:
            $ref: '#/components/schemas/PlmnId'
          minItems: 1
          type: array
        sNssais:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        nsiList:
          items:
            type: string
          minItems: 1
          type: array
        fqdn:
          type: string
        interPlmnFqdn:
          type: string
        ipv4Addresses:
          items:
            $ref: '#/components/schemas/Ipv4Addr'
          minItems: 1
          type: array
        ipv6Addresses:
          items:
            $ref: '#/components/schemas/Ipv6Addr'
          minItems: 1
          type: array
        allowedPlmns:
          items:
            $ref: '#/components/schemas/PlmnId'
          minItems: 1
          type: array
        allowedNfTypes:
          items:
            $ref: '#/components/schemas/NFType'
          minItems: 1
          type: array
        allowedNfDomains:
          items:
            type: string
          minItems: 1
          type: array
        allowedNssais:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        priority:
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        capacity:
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        load:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        locality:
          type: string
        udrInfo:
          $ref: '#/components/schemas/UdrInfo'
        udmInfo:
          $ref: '#/components/schemas/UdmInfo'
        ausfInfo:
          $ref: '#/components/schemas/AusfInfo'
        amfInfo:
          $ref: '#/components/schemas/AmfInfo'
        smfInfo:
          $ref: '#/components/schemas/SmfInfo'
        upfInfo:
          $ref: '#/components/schemas/UpfInfo'
        pcfInfo:
          $ref: '#/components/schemas/PcfInfo'
        bsfInfo:
          $ref: '#/components/schemas/BsfInfo'
        chfInfo:
          $ref: '#/components/schemas/ChfInfo'
        nrfInfo:
          $ref: '#/components/schemas/NrfInfo'
        customInfo:
          type: object
        recoveryTime:
          format: date-time
          type: string
        nfServicePersistence:
          default: false
          type: boolean
        nfServices:
          items:
            $ref: '#/components/schemas/NFService'
          minItems: 1
          type: array
      required:
      - nfInstanceId
      - nfStatus
      - nfType
      type: object
    NFService:
      example:
        recoveryTime: 2000-01-23T04:56:07.000+00:00
        allowedNssais:
        - sd: sd
          sst: 153
        - sd: sd
          sst: 153
        supportedFeatures: supportedFeatures
        fqdn: fqdn
        allowedNfTypes:
        - null
        - null
        serviceInstanceId: serviceInstanceId
        allowedNfDomains:
        - allowedNfDomains
        - allowedNfDomains
        priority: 46276
        capacity: 60957
        defaultNotificationSubscriptions:
        - callbackUri: callbackUri
        - callbackUri: callbackUri
        load: 36
        versions:
        - apiFullVersion: apiFullVersion
          apiVersionInUri: apiVersionInUri
          expiry: 2000-01-23T04:56:07.000+00:00
        - apiFullVersion: apiFullVersion
          apiVersionInUri: apiVersionInUri
          expiry: 2000-01-23T04:56:07.000+00:00
        ipEndPoints:
        - ipv6Address: 2001:db8:85a3::8a2e:370:7334
          port: 15087
          ipv4Address: 198.51.100.1
        - ipv6Address: 2001:db8:85a3::8a2e:370:7334
          port: 15087
          ipv4Address: 198.51.100.1
        apiPrefix: apiPrefix
        chfServiceInfo:
          primaryChfServiceInstance: primaryChfServiceInstance
          secondaryChfServiceInstance: secondaryChfServiceInstance
        interPlmnFqdn: interPlmnFqdn
        allowedPlmns:
        - mnc: mnc
          mcc: mcc
        - mnc: mnc
          mcc: mcc
      properties:
        serviceInstanceId:
          type: string
        serviceName:
          $ref: '#/components/schemas/ServiceName'
        versions:
          items:
            $ref: '#/components/schemas/NFServiceVersion'
          minItems: 1
          type: array
        scheme:
          $ref: '#/components/schemas/UriScheme'
        nfServiceStatus:
          $ref: '#/components/schemas/NFServiceStatus'
        fqdn:
          type: string
        interPlmnFqdn:
          type: string
        ipEndPoints:
          items:
            $ref: '#/components/schemas/IpEndPoint'
          minItems: 1
          type: array
        apiPrefix:
          type: string
        defaultNotificationSubscriptions:
          items:
            $ref: '#/components/schemas/DefaultNotificationSubscription'
          minItems: 1
          type: array
        allowedPlmns:
          items:
            $ref: '#/components/schemas/PlmnId'
          minItems: 1
          type: array
        allowedNfTypes:
          items:
            $ref: '#/components/schemas/NFType'
          minItems: 1
          type: array
        allowedNfDomains:
          items:
            type: string
          minItems: 1
          type: array
        allowedNssais:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        priority:
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        capacity:
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        load:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        recoveryTime:
          format: date-time
          type: string
        chfServiceInfo:
          $ref: '#/components/schemas/ChfServiceInfo'
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - nfServiceStatus
      - scheme
      - serviceInstanceId
      - serviceName
      - versions
      type: object
    NFType:
      enum:
      - NRF
      - UDM
      - AMF
      - SMF
      - AUSF
      - NEF
      - PCF
      - SMSF
      - NSSF
      - UDR
      - LMF
      - GMLC
      - 5G_EIR
      - SEPP
      - UPF
      - N3IWF
      - AF
      - UDSF
      - BSF
      - CHF
      - NWDAF
      type: string
    Fqdn:
      type: string
    IpEndPoint:
      example:
        ipv6Address: 2001:db8:85a3::8a2e:370:7334
        port: 15087
        ipv4Address: 198.51.100.1
      properties:
        ipv4Address:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        ipv6Address:
          $ref: '#/components/schemas/Ipv6Addr'
        transport:
          $ref: '#/components/schemas/TransportProtocol'
        port:
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
      type: object
    SubscriptionData:
      example:
        reqNotifEvents:
        - null
        - null
        validityTime: 2000-01-23T04:56:07.000+00:00
        reqNfFqdn: reqNfFqdn
        nfStatusNotificationUri: nfStatusNotificationUri
        plmnId:
          mnc: mnc
          mcc: mcc
        subscriptionId: subscriptionId
        notifCondition:
          monitoredAttributes:
          - monitoredAttributes
          - monitoredAttributes
          unmonitoredAttributes:
          - unmonitoredAttributes
          - unmonitoredAttributes
        subscrCond: ""
      properties:
        nfStatusNotificationUri:
          type: string
        subscrCond:
          oneOf:
          - $ref: '#/components/schemas/NfInstanceIdCond'
          - $ref: '#/components/schemas/NfTypeCond'
          - $ref: '#/components/schemas/ServiceNameCond'
          - $ref: '#/components/schemas/AmfCond'
          - $ref: '#/components/schemas/GuamiListCond'
          - $ref: '#/components/schemas/NetworkSliceCond'
          - $ref: '#/components/schemas/NfGroupCond'
        subscriptionId:
          pattern: ^([0-9]{5,6}-)?[^-]+$
          readOnly: true
          type: string
        validityTime:
          format: date-time
          type: string
        reqNotifEvents:
          items:
            $ref: '#/components/schemas/NotificationEventType'
          minItems: 1
          type: array
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        notifCondition:
          $ref: '#/components/schemas/NotifCondition'
        reqNfType:
          $ref: '#/components/schemas/NFType'
        reqNfFqdn:
          type: string
      required:
      - nfStatusNotificationUri
      - subscriptionId
      type: object
    NfInstanceIdCond:
      properties:
        nfInstanceId:
          format: uuid
          type: string
      required:
      - nfInstanceId
      type: object
    NfTypeCond:
      properties:
        nfType:
          $ref: '#/components/schemas/NFType'
      required:
      - nfType
      type: object
    ServiceNameCond:
      properties:
        serviceName:
          $ref: '#/components/schemas/ServiceName'
      required:
      - serviceName
      type: object
    AmfCond:
      anyOf:
      - required:
        - amfSetId
      - required:
        - amfRegionId
      properties:
        amfSetId:
          type: string
        amfRegionId:
          type: string
      type: object
    GuamiListCond:
      properties:
        guamiList:
          items:
            $ref: '#/components/schemas/Guami'
          type: array
      required:
      - guamiList
      type: object
    NetworkSliceCond:
      properties:
        snssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          type: array
        nsiList:
          items:
            type: string
          type: array
      required:
      - snssaiList
      type: object
    NfGroupCond:
      properties:
        nfType:
          enum:
          - UDM
          - AUSF
          - UDR
          type: string
        nfGroupId:
          type: string
      required:
      - nfGroupId
      - nfType
      type: object
    NotifCondition:
      example:
        monitoredAttributes:
        - monitoredAttributes
        - monitoredAttributes
        unmonitoredAttributes:
        - unmonitoredAttributes
        - unmonitoredAttributes
      not:
        required:
        - monitoredAttributes
        - unmonitoredAttributes
      properties:
        monitoredAttributes:
          items:
            type: string
          minItems: 1
          type: array
        unmonitoredAttributes:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    UdrInfo:
      example:
        supportedDataSets:
        - null
        - null
        groupId: groupId
        externalGroupIdentifiersRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
        supiRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
        gpsiRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
      properties:
        groupId:
          type: string
        supiRanges:
          items:
            $ref: '#/components/schemas/SupiRange'
          minItems: 1
          type: array
        gpsiRanges:
          items:
            $ref: '#/components/schemas/IdentityRange'
          minItems: 1
          type: array
        externalGroupIdentifiersRanges:
          items:
            $ref: '#/components/schemas/IdentityRange'
          minItems: 1
          type: array
        supportedDataSets:
          items:
            $ref: '#/components/schemas/DataSetId'
          minItems: 1
          type: array
      type: object
    SupiRange:
      example:
        start: start
        pattern: pattern
        end: end
      properties:
        start:
          pattern: ^[0-9]+$
          type: string
        end:
          pattern: ^[0-9]+$
          type: string
        pattern:
          type: string
      type: object
    IdentityRange:
      example:
        start: start
        pattern: pattern
        end: end
      properties:
        start:
          pattern: ^[0-9]+$
          type: string
        end:
          pattern: ^[0-9]+$
          type: string
        pattern:
          type: string
      type: object
    DataSetId:
      enum:
      - SUBSCRIPTION
      - POLICY
      - EXPOSURE
      - APPLICATION
      type: string
    UdmInfo:
      example:
        routingIndicators:
        - routingIndicators
        - routingIndicators
        groupId: groupId
        externalGroupIdentifiersRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
        supiRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
        gpsiRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
      properties:
        groupId:
          type: string
        supiRanges:
          items:
            $ref: '#/components/schemas/SupiRange'
          minItems: 1
          type: array
        gpsiRanges:
          items:
            $ref: '#/components/schemas/IdentityRange'
          minItems: 1
          type: array
        externalGroupIdentifiersRanges:
          items:
            $ref: '#/components/schemas/IdentityRange'
          minItems: 1
          type: array
        routingIndicators:
          items:
            pattern: ^[0-9]{1,4}$
            type: string
          minItems: 1
          type: array
      type: object
    AusfInfo:
      example:
        routingIndicators:
        - routingIndicators
        - routingIndicators
        groupId: groupId
        supiRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
      properties:
        groupId:
          type: string
        supiRanges:
          items:
            $ref: '#/components/schemas/SupiRange'
          minItems: 1
          type: array
        routingIndicators:
          items:
            pattern: ^[0-9]{1,4}$
            type: string
          minItems: 1
          type: array
      type: object
    AmfInfo:
      example:
        backupInfoAmfRemoval:
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        guamiList:
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        taiRangeList:
        - tacRangeList:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          plmnId:
            mnc: mnc
            mcc: mcc
        - tacRangeList:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          plmnId:
            mnc: mnc
            mcc: mcc
        backupInfoAmfFailure:
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        amfSetId: amfSetId
        amfRegionId: amfRegionId
        n2InterfaceAmfInfo:
          ipv4EndpointAddress:
          - 198.51.100.1
          - 198.51.100.1
          amfName: amfName
          ipv6EndpointAddress:
          - 2001:db8:85a3::8a2e:370:7334
          - 2001:db8:85a3::8a2e:370:7334
        taiList:
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
      properties:
        amfSetId:
          type: string
        amfRegionId:
          type: string
        guamiList:
          items:
            $ref: '#/components/schemas/Guami'
          minItems: 1
          type: array
        taiList:
          items:
            $ref: '#/components/schemas/Tai'
          minItems: 1
          type: array
        taiRangeList:
          items:
            $ref: '#/components/schemas/TaiRange'
          minItems: 1
          type: array
        backupInfoAmfFailure:
          items:
            $ref: '#/components/schemas/Guami'
          minItems: 1
          type: array
        backupInfoAmfRemoval:
          items:
            $ref: '#/components/schemas/Guami'
          minItems: 1
          type: array
        n2InterfaceAmfInfo:
          $ref: '#/components/schemas/N2InterfaceAmfInfo'
      required:
      - amfRegionId
      - amfSetId
      - guamiList
      type: object
    SmfInfo:
      example:
        accessType:
        - null
        - null
        sNssaiSmfInfoList:
        - dnnSmfInfoList:
          - dnn: dnn
          - dnn: dnn
          sNssai:
            sd: sd
            sst: 153
        - dnnSmfInfoList:
          - dnn: dnn
          - dnn: dnn
          sNssai:
            sd: sd
            sst: 153
        taiRangeList:
        - tacRangeList:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          plmnId:
            mnc: mnc
            mcc: mcc
        - tacRangeList:
          - start: start
            pattern: pattern
            end: end
          - start: start
            pattern: pattern
            end: end
          plmnId:
            mnc: mnc
            mcc: mcc
        taiList:
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        pgwFqdn: pgwFqdn
      properties:
        sNssaiSmfInfoList:
          items:
            $ref: '#/components/schemas/SnssaiSmfInfoItem'
          minItems: 1
          type: array
        taiList:
          items:
            $ref: '#/components/schemas/Tai'
          minItems: 1
          type: array
        taiRangeList:
          items:
            $ref: '#/components/schemas/TaiRange'
          minItems: 1
          type: array
        pgwFqdn:
          type: string
        accessType:
          items:
            $ref: '#/components/schemas/AccessType'
          minItems: 1
          type: array
      required:
      - sNssaiSmfInfoList
      type: object
    SnssaiSmfInfoItem:
      example:
        dnnSmfInfoList:
        - dnn: dnn
        - dnn: dnn
        sNssai:
          sd: sd
          sst: 153
      properties:
        sNssai:
          $ref: '#/components/schemas/Snssai'
        dnnSmfInfoList:
          items:
            $ref: '#/components/schemas/DnnSmfInfoItem'
          minItems: 1
          type: array
      required:
      - dnnSmfInfoList
      - sNssai
      type: object
    DnnSmfInfoItem:
      example:
        dnn: dnn
      properties:
        dnn:
          type: string
      required:
      - dnn
      type: object
    UpfInfo:
      example:
        iwkEpsInd: false
        interfaceUpfInfoList:
        - networkInstance: networkInstance
          ipv4EndpointAddresses:
          - 198.51.100.1
          - 198.51.100.1
          ipv6EndpointAddresses:
          - 2001:db8:85a3::8a2e:370:7334
          - 2001:db8:85a3::8a2e:370:7334
          endpointFqdn: endpointFqdn
        - networkInstance: networkInstance
          ipv4EndpointAddresses:
          - 198.51.100.1
          - 198.51.100.1
          ipv6EndpointAddresses:
          - 2001:db8:85a3::8a2e:370:7334
          - 2001:db8:85a3::8a2e:370:7334
          endpointFqdn: endpointFqdn
        smfServingArea:
        - smfServingArea
        - smfServingArea
        sNssaiUpfInfoList:
        - dnnUpfInfoList:
          - dnaiList:
            - null
            - null
            dnn: dnn
          - dnaiList:
            - null
            - null
            dnn: dnn
          sNssai:
            sd: sd
            sst: 153
        - dnnUpfInfoList:
          - dnaiList:
            - null
            - null
            dnn: dnn
          - dnaiList:
            - null
            - null
            dnn: dnn
          sNssai:
            sd: sd
            sst: 153
      properties:
        sNssaiUpfInfoList:
          items:
            $ref: '#/components/schemas/SnssaiUpfInfoItem'
          minItems: 1
          type: array
        smfServingArea:
          items:
            type: string
          minItems: 1
          type: array
        interfaceUpfInfoList:
          items:
            $ref: '#/components/schemas/InterfaceUpfInfoItem'
          minItems: 1
          type: array
        iwkEpsInd:
          default: false
          type: boolean
      required:
      - sNssaiUpfInfoList
      type: object
    SnssaiUpfInfoItem:
      example:
        dnnUpfInfoList:
        - dnaiList:
          - null
          - null
          dnn: dnn
        - dnaiList:
          - null
          - null
          dnn: dnn
        sNssai:
          sd: sd
          sst: 153
      properties:
        sNssai:
          $ref: '#/components/schemas/Snssai'
        dnnUpfInfoList:
          items:
            $ref: '#/components/schemas/DnnUpfInfoItem'
          minItems: 1
          type: array
      required:
      - dnnUpfInfoList
      - sNssai
      type: object
    DnnUpfInfoItem:
      example:
        dnaiList:
        - null
        - null
        dnn: dnn
      properties:
        dnn:
          type: string
        dnaiList:
          items:
            $ref: '#/components/schemas/Dnai'
          minItems: 1
          type: array
      required:
      - dnn
      type: object
    InterfaceUpfInfoItem:
      example:
        networkInstance: networkInstance
        ipv4EndpointAddresses:
        - 198.51.100.1
        - 198.51.100.1
        ipv6EndpointAddresses:
        - 2001:db8:85a3::8a2e:370:7334
        - 2001:db8:85a3::8a2e:370:7334
        endpointFqdn: endpointFqdn
      properties:
        interfaceType:
          $ref: '#/components/schemas/UPInterfaceType'
        ipv4EndpointAddresses:
          items:
            $ref: '#/components/schemas/Ipv4Addr'
          minItems: 1
          type: array
        ipv6EndpointAddresses:
          items:
            $ref: '#/components/schemas/Ipv6Addr'
          minItems: 1
          type: array
        endpointFqdn:
          type: string
        networkInstance:
          type: string
      required:
      - interfaceType
      type: object
    UPInterfaceType:
      enum:
      - N3
      - N6
      - N9
      type: string
    PcfInfo:
      example:
        rxDiamHost: rxDiamHost
        dnnList:
        - null
        - null
        rxDiamRealm: rxDiamRealm
        supiRanges:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
      properties:
        dnnList:
          items:
            $ref: '#/components/schemas/Dnn'
          minItems: 1
          type: array
        supiRanges:
          items:
            $ref: '#/components/schemas/SupiRange'
          minItems: 1
          type: array
        rxDiamHost:
          pattern: ^([A-Za-z0-9]+(-[A-Za-z0-9]+).)+[a-z]{2,}$
          type: string
        rxDiamRealm:
          pattern: ^([A-Za-z0-9]+(-[A-Za-z0-9]+).)+[a-z]{2,}$
          type: string
      type: object
    BsfInfo:
      example:
        dnnList:
        - null
        - null
        ipv6PrefixRanges:
        - start: 2001:db8:abcd:12::0/64
          end: 2001:db8:abcd:12::0/64
        - start: 2001:db8:abcd:12::0/64
          end: 2001:db8:abcd:12::0/64
        ipDomainList:
        - ipDomainList
        - ipDomainList
        ipv4AddressRanges:
        - start: 198.51.100.1
          end: 198.51.100.1
        - start: 198.51.100.1
          end: 198.51.100.1
      properties:
        dnnList:
          items:
            $ref: '#/components/schemas/Dnn'
          minItems: 1
          type: array
        ipDomainList:
          items:
            type: string
          minItems: 1
          type: array
        ipv4AddressRanges:
          items:
            $ref: '#/components/schemas/Ipv4AddressRange'
          minItems: 1
          type: array
        ipv6PrefixRanges:
          items:
            $ref: '#/components/schemas/Ipv6PrefixRange'
          minItems: 1
          type: array
      type: object
    ChfInfo:
      example:
        gpsiRangeList:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
        plmnRangeList:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
        supiRangeList:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
      properties:
        supiRangeList:
          items:
            $ref: '#/components/schemas/SupiRange'
          minItems: 1
          type: array
        gpsiRangeList:
          items:
            $ref: '#/components/schemas/IdentityRange'
          minItems: 1
          type: array
        plmnRangeList:
          items:
            $ref: '#/components/schemas/PlmnRange'
          minItems: 1
          type: array
      type: object
    Ipv4AddressRange:
      example:
        start: 198.51.100.1
        end: 198.51.100.1
      properties:
        start:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        end:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
      type: object
    Ipv6PrefixRange:
      example:
        start: 2001:db8:abcd:12::0/64
        end: 2001:db8:abcd:12::0/64
      properties:
        start:
          $ref: '#/components/schemas/Ipv6Prefix'
        end:
          $ref: '#/components/schemas/Ipv6Prefix'
      type: object
    DefaultNotificationSubscription:
      example:
        callbackUri: callbackUri
      properties:
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        callbackUri:
          type: string
        n1MessageClass:
          $ref: '#/components/schemas/N1MessageClass'
        n2InformationClass:
          $ref: '#/components/schemas/N2InformationClass'
      required:
      - callbackUri
      - notificationType
      type: object
    NotificationType:
      enum:
      - N1_MESSAGES
      - N2_INFORMATION
      - LOCATION_NOTIFICATION
      - DATA_REMOVAL_NOTIFICATION
      - DATA_CHANGE_NOTIFICATION
      type: string
    TransportProtocol:
      enum:
      - TCP
      type: string
    NotificationEventType:
      enum:
      - NF_REGISTERED
      - NF_DEREGISTERED
      - NF_PROFILE_CHANGED
      type: string
    NotificationData:
      allOf:
      - anyOf:
        - not:
            properties:
              event:
                enum:
                - NF_PROFILE_CHANGED
                type: string
        - oneOf:
          - required:
            - nfProfile
          - required:
            - profileChanges
      - anyOf:
        - not:
            properties:
              event:
                enum:
                - NF_REGISTERED
                type: string
        - required:
          - nfProfile
      example:
        profileChanges:
        - path: path
          newValue: ""
          from: from
          origValue: ""
        - path: path
          newValue: ""
          from: from
          origValue: ""
        nfProfile: ""
        nfInstanceUri: nfInstanceUri
      properties:
        event:
          $ref: '#/components/schemas/NotificationEventType'
        nfInstanceUri:
          type: string
        nfProfile:
          allOf:
          - $ref: '#/components/schemas/NFProfile'
          - not:
              required:
              - interPlmnFqdn
          - properties:
              nfServices:
                items:
                  allOf:
                  - $ref: '#/components/schemas/NFService'
                  - not:
                      required:
                      - interPlmnFqdn
                  - not:
                      required:
                      - allowedPlmns
                  - not:
                      required:
                      - allowedNfTypes
                  - not:
                      required:
                      - allowedNfDomains
                  - not:
                      required:
                      - allowedNssais
                type: array
        profileChanges:
          items:
            $ref: '#/components/schemas/ChangeItem'
          minItems: 1
          type: array
      required:
      - event
      - nfInstanceUri
      type: object
    NFStatus:
      enum:
      - REGISTERED
      - SUSPENDED
      type: string
    NFServiceVersion:
      example:
        apiFullVersion: apiFullVersion
        apiVersionInUri: apiVersionInUri
        expiry: 2000-01-23T04:56:07.000+00:00
      properties:
        apiVersionInUri:
          type: string
        apiFullVersion:
          type: string
        expiry:
          format: date-time
          type: string
      required:
      - apiFullVersion
      - apiVersionInUri
      type: object
    ServiceName:
      enum:
      - nnrf-nfm
      - nnrf-disc
      - nudm-sdm
      - nudm-uecm
      - nudm-ueau
      - nudm-ee
      - nudm-pp
      - namf-comm
      - namf-evts
      - namf-mt
      - namf-loc
      - nsmf-pdusession
      - nsmf-event-exposure
      - nausf-auth
      - nausf-sorprotection
      - nnef-pfdmanagement
      - npcf-am-policy-control
      - npcf-smpolicycontrol
      - npcf-policyauthorization
      - npcf-bdtpolicycontrol
      - npcf-eventexposure
      - npcf-ue-policy-control
      - nsmsf-sms
      - nnssf-nsselection
      - nnssf-nssaiavailability
      - nudr-dr
      - nlmf-loc
      - n5g-eir-eic
      - nbsf-management
      - nchf-spendinglimitcontrol
      - nchf-convergedcharging
      - nnwdaf-eventssubscription
      - nnwdaf-analyticsinfo
      type: string
    N2InterfaceAmfInfo:
      example:
        ipv4EndpointAddress:
        - 198.51.100.1
        - 198.51.100.1
        amfName: amfName
        ipv6EndpointAddress:
        - 2001:db8:85a3::8a2e:370:7334
        - 2001:db8:85a3::8a2e:370:7334
      properties:
        ipv4EndpointAddress:
          items:
            $ref: '#/components/schemas/Ipv4Addr'
          minItems: 1
          type: array
        ipv6EndpointAddress:
          items:
            $ref: '#/components/schemas/Ipv6Addr'
          minItems: 1
          type: array
        amfName:
          type: string
      type: object
    NFServiceStatus:
      enum:
      - REGISTERED
      - SUSPENDED
      type: string
    TaiRange:
      example:
        tacRangeList:
        - start: start
          pattern: pattern
          end: end
        - start: start
          pattern: pattern
          end: end
        plmnId:
          mnc: mnc
          mcc: mcc
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        tacRangeList:
          items:
            $ref: '#/components/schemas/TacRange'
          minItems: 1
          type: array
      required:
      - plmnId
      - tacRangeList
      type: object
    TacRange:
      example:
        start: start
        pattern: pattern
        end: end
      properties:
        start:
          pattern: ^([A-Fa-f0-9]{4}|[A-Fa-f0-9]{6})$
          type: string
        end:
          pattern: ^([A-Fa-f0-9]{4}|[A-Fa-f0-9]{6})$
          type: string
        pattern:
          type: string
      type: object
    ChfServiceInfo:
      example:
        primaryChfServiceInstance: primaryChfServiceInstance
        secondaryChfServiceInstance: secondaryChfServiceInstance
      not:
        required:
        - primaryChfServiceInstance
        - secondaryChfServiceInstance
      properties:
        primaryChfServiceInstance:
          type: string
        secondaryChfServiceInstance:
          type: string
      type: object
    PlmnRange:
      example:
        start: start
        pattern: pattern
        end: end
      properties:
        start:
          pattern: ^[0-9]{3}[0-9]{2,3}$
          type: string
        end:
          pattern: ^[0-9]{3}[0-9]{2,3}$
          type: string
        pattern:
          type: string
      type: object
    NrfInfo:
      example:
        servedUdrInfo:
          key:
            supportedDataSets:
            - null
            - null
            groupId: groupId
            externalGroupIdentifiersRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            supiRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            gpsiRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
        servedUdmInfo:
          key:
            routingIndicators:
            - routingIndicators
            - routingIndicators
            groupId: groupId
            externalGroupIdentifiersRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            supiRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            gpsiRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
        servedPcfInfo:
          key:
            rxDiamHost: rxDiamHost
            dnnList:
            - null
            - null
            rxDiamRealm: rxDiamRealm
            supiRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
        servedChfInfo:
          key:
            gpsiRangeList:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            plmnRangeList:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
            supiRangeList:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
        servedAusfInfo:
          key:
            routingIndicators:
            - routingIndicators
            - routingIndicators
            groupId: groupId
            supiRanges:
            - start: start
              pattern: pattern
              end: end
            - start: start
              pattern: pattern
              end: end
        servedSmfInfo:
          key:
            accessType:
            - null
            - null
            sNssaiSmfInfoList:
            - dnnSmfInfoList:
              - dnn: dnn
              - dnn: dnn
              sNssai:
                sd: sd
                sst: 153
            - dnnSmfInfoList:
              - dnn: dnn
              - dnn: dnn
              sNssai:
                sd: sd
                sst: 153
            taiRangeList:
            - tacRangeList:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              plmnId:
                mnc: mnc
                mcc: mcc
            - tacRangeList:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              plmnId:
                mnc: mnc
                mcc: mcc
            taiList:
            - tac: tac
              plmnId:
                mnc: mnc
                mcc: mcc
            - tac: tac
              plmnId:
                mnc: mnc
                mcc: mcc
            pgwFqdn: pgwFqdn
        servedBsfInfo:
          key:
            dnnList:
            - null
            - null
            ipv6PrefixRanges:
            - start: 2001:db8:abcd:12::0/64
              end: 2001:db8:abcd:12::0/64
            - start: 2001:db8:abcd:12::0/64
              end: 2001:db8:abcd:12::0/64
            ipDomainList:
            - ipDomainList
            - ipDomainList
            ipv4AddressRanges:
            - start: 198.51.100.1
              end: 198.51.100.1
            - start: 198.51.100.1
              end: 198.51.100.1
        servedAmfInfo:
          key:
            backupInfoAmfRemoval:
            - plmnId:
                mnc: mnc
                mcc: mcc
              amfId: amfId
            - plmnId:
                mnc: mnc
                mcc: mcc
              amfId: amfId
            guamiList:
            - plmnId:
                mnc: mnc
                mcc: mcc
              amfId: amfId
            - plmnId:
                mnc: mnc
                mcc: mcc
              amfId: amfId
            taiRangeList:
            - tacRangeList:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              plmnId:
                mnc: mnc
                mcc: mcc
            - tacRangeList:
              - start: start
                pattern: pattern
                end: end
              - start: start
                pattern: pattern
                end: end
              plmnId:
                mnc: mnc
                mcc: mcc
            backupInfoAmfFailure:
            - plmnId:
                mnc: mnc
                mcc: mcc
              amfId: amfId
            - plmnId:
                mnc: mnc
                mcc: mcc
              amfId: amfId
            amfSetId: amfSetId
            amfRegionId: amfRegionId
            n2InterfaceAmfInfo:
              ipv4EndpointAddress:
              - 198.51.100.1
              - 198.51.100.1
              amfName: amfName
              ipv6EndpointAddress:
              - 2001:db8:85a3::8a2e:370:7334
              - 2001:db8:85a3::8a2e:370:7334
            taiList:
            - tac: tac
              plmnId:
                mnc: mnc
                mcc: mcc
            - tac: tac
              plmnId:
                mnc: mnc
                mcc: mcc
        servedUpfInfo:
          key:
            iwkEpsInd: false
            interfaceUpfInfoList:
            - networkInstance: networkInstance
              ipv4EndpointAddresses:
              - 198.51.100.1
              - 198.51.100.1
              ipv6EndpointAddresses:
              - 2001:db8:85a3::8a2e:370:7334
              - 2001:db8:85a3::8a2e:370:7334
              endpointFqdn: endpointFqdn
            - networkInstance: networkInstance
              ipv4EndpointAddresses:
              - 198.51.100.1
              - 198.51.100.1
              ipv6EndpointAddresses:
              - 2001:db8:85a3::8a2e:370:7334
              - 2001:db8:85a3::8a2e:370:7334
              endpointFqdn: endpointFqdn
            smfServingArea:
            - smfServingArea
            - smfServingArea
            sNssaiUpfInfoList:
            - dnnUpfInfoList:
              - dnaiList:
                - null
                - null
                dnn: dnn
              - dnaiList:
                - null
                - null
                dnn: dnn
              sNssai:
                sd: sd
                sst: 153
            - dnnUpfInfoList:
              - dnaiList:
                - null
                - null
                dnn: dnn
              - dnaiList:
                - null
                - null
                dnn: dnn
              sNssai:
                sd: sd
                sst: 153
      properties:
        servedUdrInfo:
          additionalProperties:
            $ref: '#/components/schemas/UdrInfo'
          minProperties: 1
          type: object
        servedUdmInfo:
          additionalProperties:
            $ref: '#/components/schemas/UdmInfo'
          minProperties: 1
          type: object
        servedAusfInfo:
          additionalProperties:
            $ref: '#/components/schemas/AusfInfo'
          minProperties: 1
          type: object
        servedAmfInfo:
          additionalProperties:
            $ref: '#/components/schemas/AmfInfo'
          minProperties: 1
          type: object
        servedSmfInfo:
          additionalProperties:
            $ref: '#/components/schemas/SmfInfo'
          minProperties: 1
          type: object
        servedUpfInfo:
          additionalProperties:
            $ref: '#/components/schemas/UpfInfo'
          minProperties: 1
          type: object
        servedPcfInfo:
          additionalProperties:
            $ref: '#/components/schemas/PcfInfo'
          minProperties: 1
          type: object
        servedBsfInfo:
          additionalProperties:
            $ref: '#/components/schemas/BsfInfo'
          minProperties: 1
          type: object
        servedChfInfo:
          additionalProperties:
            $ref: '#/components/schemas/ChfInfo'
          minProperties: 1
          type: object
      type: object
    LinksValueSchema:
      oneOf:
      - items:
          $ref: '#/components/schemas/Link'
        minItems: 1
        type: array
      - $ref: '#/components/schemas/Link'
    Link:
      properties:
        href:
          type: string
      type: object
    Uri:
      type: string
    ProblemDetails:
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
        cause:
          type: string
        invalidParams:
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
      type: object
    InvalidParam:
      properties:
        param:
          type: string
        reason:
          type: string
      required:
      - param
      type: object
    NfInstanceId:
      format: uuid
      type: string
    PatchItem:
      properties:
        op:
          $ref: '#/components/schemas/PatchOperation'
        path:
          type: string
        from:
          type: string
        value:
          nullable: true
      required:
      - op
      - path
      type: object
    PatchOperation:
      enum:
      - add
      - copy
      - move
      - remove
      - replace
      - test
      type: string
    PlmnId:
      example:
        mnc: mnc
        mcc: mcc
      properties:
        mcc:
          pattern: ^\d{3}$
          type: string
        mnc:
          pattern: ^\d{2,3}$
          type: string
      required:
      - mcc
      - mnc
      type: object
    Mcc:
      pattern: ^\d{3}$
      type: string
    Mnc:
      pattern: ^\d{2,3}$
      type: string
    Snssai:
      example:
        sd: sd
        sst: 153
      properties:
        sst:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        sd:
          pattern: ^[A-Fa-f0-9]{6}$
          type: string
      required:
      - sst
      type: object
    Ipv4Addr:
      example: 198.51.100.1
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
      type: string
    Ipv6Addr:
      allOf:
      - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$
      - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$
      example: 2001:db8:85a3::8a2e:370:7334
      type: string
    DateTime:
      format: date-time
      type: string
    UriScheme:
      enum:
      - http
      - https
      type: string
    SupportedFeatures:
      pattern: ^[A-Fa-f0-9]*$
      type: string
    Guami:
      example:
        plmnId:
          mnc: mnc
          mcc: mcc
        amfId: amfId
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        amfId:
          pattern: ^[A-Fa-f0-9]{6}$
          type: string
      required:
      - amfId
      - plmnId
      type: object
    AmfId:
      pattern: ^[A-Fa-f0-9]{6}$
      type: string
    NfGroupId:
      type: string
    Tai:
      example:
        tac: tac
        plmnId:
          mnc: mnc
          mcc: mcc
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        tac:
          pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
          type: string
      required:
      - plmnId
      - tac
      type: object
    Tac:
      pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
      type: string
    AccessType:
      enum:
      - 3GPP_ACCESS
      - NON_3GPP_ACCESS
      type: string
    Dnn:
      type: string
    Dnai:
      type: string
    DiameterIdentity:
      pattern: ^([A-Za-z0-9]+(-[A-Za-z0-9]+).)+[a-z]{2,}$
      type: string
    Ipv6Prefix:
      allOf:
      - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$
      - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\/.+)$
      example: 2001:db8:abcd:12::0/64
      type: string
    N1MessageClass:
      enum:
      - 5GMM
      - SM
      - LPP
      - SMS
      - UPDP
      type: string
    N2InformationClass:
      enum:
      - SM
      - NRPPa
      - PWS
      - PWS-BCAL
      - PWS-RF
      - RAN
      type: string
    ChangeItem:
      example:
        path: path
        newValue: ""
        from: from
        origValue: ""
      properties:
        op:
          $ref: '#/components/schemas/ChangeType'
        path:
          type: string
        from:
          type: string
        origValue: {}
        newValue: {}
      required:
      - op
      - path
      type: object
    ChangeType:
      enum:
      - ADD
      - MOVE
      - REMOVE
      - REPLACE
      type: string
    AmfName:
      type: string
    nullnftype:
      enum:
      - NRF
      - UDM
      - AMF
      - SMF
      - AUSF
      - NEF
      - PCF
      - SMSF
      - NSSF
      - UDR
      - LMF
      - GMLC
      - 5G_EIR
      - SEPP
      - UPF
      - N3IWF
      - AF
      - UDSF
      - BSF
      - CHF
      - NWDAF
      type: string
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            nnrf-nfm: Access to the Nnrf_NFManagement API
          tokenUrl: /oauth2/token
      type: oauth2
