openapi: 3.0.0
info:
  description: Unified Data Repository Service
  title: Nudr_DataRepository API OpenAPI file
  version: 1.0.0
externalDocs:
  description: 3GPP TS 29.504 V15.2.0; 5G System; Unified Data Repository Services; Stage 3
  url: http://www.3gpp.org/ftp/Specs/archive/29_series/29.504/
servers:
- description: API root
  url: '{apiRoot}/nudr-dr/v1'
  variables:
    apiRoot:
      default: https://example.com
security:
- {}
- oAuth2ClientCredentials:
  - nudr-dr
paths:
  /subscription-data/{ueId}/authentication-data/authentication-subscription:
    get:
      operationId: QueryAuthSubsData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSubscription'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the authentication subscription data of a UE
      tags:
      - Authentication Data (Document)
    patch:
      operationId: ModifyAuthentication
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        204:
          description: Expected response to a valid request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: modification is rejected
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: modify the authentication subscription data of a UE
      tags:
      - Authentication Data (Document)
  /subscription-data/{ueId}/authentication-data/authentication-status:
    get:
      operationId: QueryAuthenticationStatus
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthEvent'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the Authentication Status of a UE
      tags:
      - AuthEvent (Document)
    put:
      operationId: CreateAuthenticationStatus
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthEvent'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To store the Authentication Status data of a UE
      tags:
      - Authentication Status (Document)
  /subscription-data/{ueId}/ue-update-confirmation-data/sor-data:
    get:
      operationId: QueryAuthSoR
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supportedFeatures
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SorData'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the SoR acknowledgement information of a UE
      tags:
      - Authentication SoR (Document)
    put:
      operationId: CreateAuthenticationSoR
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SorData'
      responses:
        204:
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To store the SoR acknowledgement information of a UE
      tags:
      - Authentication SoR (Document)
  /subscription-data/{ueId}/{servingPlmnId}/provisioned-data:
    get:
      operationId: QueryProvisionedData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PLMN ID
        in: path
        name: servingPlmnId
        required: true
        schema:
          $ref: '#/components/schemas/VarPlmnId'
      - description: List of dataset names
        in: query
        name: dataset-names
        schema:
          $ref: '#/components/schemas/DatasetNames'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedDataSets'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieve multiple provisioned data sets of a UE
      tags:
      - Provisioned Data (Document)
  /subscription-data/{ueId}/{servingPlmnId}/provisioned-data/am-data:
    get:
      operationId: QueryAmData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PLMN ID
        in: path
        name: servingPlmnId
        required: true
        schema:
          $ref: '#/components/schemas/VarPlmnId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessAndMobilitySubscriptionData'
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the access and mobility subscription data of a UE
      tags:
      - Access And Mobility Subscription Data (Document)
  /subscription-data/{ueId}/{servingPlmnId}/provisioned-data/smf-selection-subscription-data:
    get:
      operationId: QuerySmfSelectData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PLMN ID
        in: path
        name: servingPlmnId
        required: true
        schema:
          $ref: '#/components/schemas/VarPlmnId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmfSelectionSubscriptionData'
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the SMF selection subscription data of a UE
      tags:
      - SMF Selection Subscription Data (Document)
  /subscription-data/{ueId}/{servingPlmnId}/provisioned-data/sm-data:
    get:
      operationId: QuerySmData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PLMN ID
        in: path
        name: servingPlmnId
        required: true
        schema:
          $ref: '#/components/schemas/VarPlmnId'
      - description: single NSSAI
        in: query
        name: single-nssai
        required: false
        schema:
          $ref: ./TS29505_Subscription_Data.yaml#/components/schemas/VarSnssai
      - description: DNN
        in: query
        name: dnn
        required: false
        schema:
          $ref: '#/components/schemas/Dnn'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionManagementSubscriptionData'
                minItems: 1
                type: array
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the Session Management subscription data of a UE
      tags:
      - Session Management Subscription Data
  /subscription-data/{ueId}/context-data/amf-3gpp-access:
    get:
      operationId: QueryAmfContext3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amf3GppAccessRegistration'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the AMF context data of a UE using 3gpp access
      tags:
      - AMF 3GPP Access Registration (Document)
    patch:
      operationId: AmfContext3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        204:
          description: Expected response to a valid request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: modification is rejected
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To modify the AMF context data of a UE using 3gpp access in the UDR
      tags:
      - AMF 3GPP Access Registration (Document)
    put:
      operationId: CreateAmfContext3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amf3GppAccessRegistration'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To store the AMF context data of a UE using 3gpp access in the UDR
      tags:
      - AMF 3GPP Access Registration (Document)
  /subscription-data/{ueId}/context-data/amf-non-3gpp-access:
    get:
      operationId: QueryAmfContextNon3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmfNon3GppAccessRegistration'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the AMF context data of a UE using non-3gpp access
      tags:
      - AMF Non-3GPP Access Registration (Document)
    patch:
      operationId: AmfContextNon3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        204:
          description: Expected response to a valid request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: modification is rejected
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To modify the AMF context data of a UE using non 3gpp access in the UDR
      tags:
      - AMF Non-3GPP Access Registration (Document)
    put:
      operationId: CreateAmfContextNon3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmfNon3GppAccessRegistration'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To store the AMF context data of a UE using non-3gpp access in the UDR
      tags:
      - AMF Non-3GPP Access Registration (Document)
  /subscription-data/{ueId}/context-data/smf-registrations:
    get:
      operationId: QuerySmfRegList
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmfRegList'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the SMF registration list of a UE
      tags:
      - SMF Registrations (Collection)
  /subscription-data/{ueId}/context-data/smf-registrations/{pduSessionId}:
    delete:
      operationId: DeleteSmfContext
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PDU session id
        in: path
        name: pduSessionId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Upon success, an empty response body shall be returned.
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To remove an individual SMF context data of a UE the UDR
      tags:
      - SMF Registration (Document)
    get:
      operationId: QuerySmfRegistration
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PDU session id
        in: path
        name: pduSessionId
        required: true
        schema:
          type: string
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmfRegistration'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the individual SMF registration of a UE
      tags:
      - SMF Registration (Document)
    put:
      operationId: CreateSmfContextNon3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PDU session id
        in: path
        name: pduSessionId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmfRegistration'
      responses:
        201:
          description: Upon success, a response body containing a representation of the created Individual SmfRegistration resource shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/nsmf-pdusession/v1/sm-contexts/{smContextRef}/subscription-data/{ueId}/context-data/smf-registrations/{pduSessionId}'
              required: true
              schema:
                type: string
      summary: To create an individual SMF context data of a UE in the UDR
      tags:
      - SMF Registration (Document)
  /subscription-data/{ueId}/operator-specific-data:
    get:
      operationId: QueryOperSpecData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorSpecificDataContainer'
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the operator specific data of a UE
      tags:
      - Operator-Specific Data Container (Document)
    patch:
      operationId: AmfContext3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        204:
          description: Expected response to a valid request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: modification is rejected
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To modify operator specific data of a UE
      tags:
      - Operator-Specific Data Container (Document)
  /subscription-data/{ueId}/context-data/smsf-3gpp-access:
    delete:
      operationId: DeleteSmsfContext3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To remove the SMSF context data of a UE via 3GPP access
      tags:
      - SMSF 3GPP Registration (Document)
    get:
      operationId: QuerySmsfContext3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the SMSF context data of a UE using 3gpp access
      tags:
      - SMSF 3GPP Registration (Document)
    put:
      operationId: CreateSmsfContext3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsfRegistration'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Create the SMSF context data of a UE via 3GPP access
      tags:
      - SMSF 3GPP Registration (Document)
  /subscription-data/{ueId}/context-data/smsf-non-3gpp-access:
    delete:
      operationId: DeleteSmsfContextNon3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: To remove the SMSF context data of a UE via non-3GPP access
      tags:
      - SMSF Non-3GPP Registration (Document)
    get:
      operationId: QuerySmsfContextNon3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          minItems: 1
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsfRegistration'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the SMSF context data of a UE using non-3gpp access
      tags:
      - SMSF Non-3GPP Registration (Document)
    put:
      operationId: CreateSmsfContextNon3gpp
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsfRegistration'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Create the SMSF context data of a UE via non-3GPP access
      tags:
      - SMSF Non-3GPP Registration (Document)
  /subscription-data/{ueId}/{servingPlmnId}/provisioned-data/sms-mng-data:
    get:
      operationId: QuerySmsMngData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PLMN ID
        in: path
        name: servingPlmnId
        required: true
        schema:
          $ref: '#/components/schemas/VarPlmnId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsManagementSubscriptionData'
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the SMS management subscription data of a UE
      tags:
      - SMS Management Subscription Data (Document)
  /subscription-data/{ueId}/{servingPlmnId}/provisioned-data/sms-data:
    get:
      operationId: QuerySmsData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PLMN ID
        in: path
        name: servingPlmnId
        required: true
        schema:
          $ref: '#/components/schemas/VarPlmnId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsSubscriptionData'
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the SMS subscription data of a UE
      tags:
      - SMS Subscription Data (Document)
  /subscription-data/{ueId}/pp-data:
    get:
      operationId: GetppData
      parameters:
      - description: pp data for a UE
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpData'
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Read the profile of a given UE
      tags:
      - Parameter Provision (Document)
    patch:
      operationId: ModifyPpData
      parameters:
      - description: pp data for a UE
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        204:
          description: Expected response to a valid request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: modification is rejected
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: modify the provisioned parameter data
      tags:
      - ProvisionedParameterData (Document)
  /subscription-data/{ueId}/context-data/ee-subscriptions:
    get:
      operationId: Queryeesubscriptions
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EeSubscription'
                type: array
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the ee subscriptions of a UE
      tags:
      - Event Exposure Subscriptions (Collection)
    post:
      operationId: CreateEeSubscriptions
      parameters:
      - description: UE ID
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EeSubscription'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeSubscription'
          description: Expected response to a valid request
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/subscription-data/{ueId}/context-data/ee-subscriptions/{subsId}'
              required: true
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Create individual EE subscription
      tags:
      - Event Exposure Subscriptions (Collection)
  /subscription-data/{ueId}/context-data/ee-subscriptions/{subsId}:
    delete:
      operationId: RemoveeeSubscriptions
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Unique ID of the subscription to remove
        in: path
        name: subsId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Expected response to a successful subscription removal
      summary: Deletes a eeSubscription
      tags:
      - Event Exposure Subscription (Document)
    put:
      operationId: UpdateEesubscriptions
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EeSubscription'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Stores an individual ee subscriptions of a UE
      tags:
      - Event Exposure Subscription (Document)
  /subscription-data/{ueId}/context-data/ee-subscriptions/{subsId}/amf-subscriptions:
    delete:
      operationId: RemoveAmfSubscriptionsInfo
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Expected response to a successful subscription removal
      summary: Deletes AMF Subscription Info for an eeSubscription
      tags:
      - Event AMF Subscription Info (Document)
    get:
      operationId: GetAmfSubscriptionInfo
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AmfSubscriptionInfo'
                minItems: 1
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieve AMF subscription Info
      tags:
      - Query AMF Subscription Info (Document)
    patch:
      operationId: ModifyAmfSubscriptionInfo
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        204:
          description: Expected response to a valid request
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: modification is rejected
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: modify the AMF Subscription Info
      tags:
      - AmfSubscriptionInfo (Document)
    put:
      operationId: Create AMF Subscriptions
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AmfSubscriptionInfo'
              minItems: 1
              type: array
        required: true
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Create AmfSubscriptions for an individual ee subscriptions of a UE
      tags:
      - AMF Subscription Info (Document)
  /subscription-data/group-data/{ueGroupId}/ee-subscriptions:
    get:
      operationId: QueryEeGroupSubscriptions
      parameters:
      - description: Group of UEs or any UE
        in: path
        name: ueGroupId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeGroupId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EeSubscription'
                type: array
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the ee subscriptions of a group of UEs or any UE
      tags:
      - Event Exposure Group Subscriptions (Collection)
    post:
      operationId: CreateEeGroupSubscriptions
      parameters:
      - description: Group of UEs or any UE
        in: path
        name: ueGroupId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeGroupId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EeSubscription'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeSubscription'
          description: Expected response to a valid request
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/nudr-dr/v1/subscription-data/group-data/{ueGroupId}/ee-subscriptions '
              required: true
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Create individual EE subscription for a group of UEs or any UE
      tags:
      - Event Exposure Group Subscriptions (Collection)
  /subscription-data/group-data/{ueGroupId}/ee-subscriptions/{subsId}:
    delete:
      operationId: RemoveEeGroupSubscriptions
      parameters:
      - in: path
        name: ueGroupId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeGroupId'
      - description: Unique ID of the subscription to remove
        in: path
        name: subsId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Expected response to a successful subscription removal
      summary: Deletes a eeSubscription for a group of UEs or any UE
      tags:
      - Event Exposure Subscription (Document)
    put:
      operationId: UpdateEeGroupSubscriptions
      parameters:
      - in: path
        name: ueGroupId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeGroupId'
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EeSubscription'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Stores an individual ee subscription of a group of UEs or any UE
      tags:
      - Event Exposure Subscription (Document)
  /subscription-data/{ueId}/ee-profile-data:
    get:
      operationId: QueryEEData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        explode: false
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Supported Features
        in: query
        name: supportedFeatures
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeProfileData'
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the ee profile data of a UE
      tags:
      - Event Exposure Data (Document)
  /subscription-data/{ueId}/context-data/sdm-subscriptions:
    get:
      operationId: Querysdmsubscriptions
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supported-features
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SdmSubscription'
                type: array
          description: Expected response to a valid request
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieves the sdm subscriptions of a UE
      tags:
      - SDM Subscriptions (Collection)
    post:
      operationId: CreateSdmSubscriptions
      parameters:
      - description: UE ID
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SdmSubscription'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdmSubscription'
          description: Expected response to a valid request
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/subscription-data/{ueId}/context-data/sdm-subscriptions/{subsId}'
              required: true
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Create individual sdm subscription
      tags:
      - SDM Subscriptions (Collection)
  /subscription-data/{ueId}/context-data/sdm-subscriptions/{subsId}:
    delete:
      operationId: RemovesdmSubscriptions
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Unique ID of the subscription to remove
        in: path
        name: subsId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Expected response to a successful subscription removal
      summary: Deletes a sdmsubscriptions
      tags:
      - SDM Subscription (Document)
    put:
      operationId: Updatesdmsubscriptions
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SdmSubscription'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Stores an individual sdm subscriptions of a UE
      tags:
      - SDM Subscription (Document)
  /subscription-data/shared-data:
    get:
      operationId: GetSharedData
      parameters:
      - description: List of shared data ids
        explode: false
        in: query
        name: shared-data-ids
        required: true
        schema:
          $ref: '#/components/schemas/SharedDataIds_2'
        style: form
      - description: Supported Features
        in: query
        name: supportedFeatures
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SharedData'
                minItems: 1
                type: array
          description: Expected response to a valid request
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      summary: retrieve shared data
      tags:
      - Retrieval of shared data
  /subscription-data/subs-to-notify:
    post:
      callbacks:
        onDataChange:
          '{request.body#/callbackReference}':
            post:
              operationId: onDataChange_request_bodyCallbackReferencePost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DataChangeNotify'
                required: true
              responses:
                204:
                  description: Expected response to a valid request
              x-callback-request: true
      operationId: SubscriptionDataSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDataSubscriptions'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDataSubscriptions'
          description: Expected response to a valid request
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/subscription-data/subs-to-notify/{subsId}'
              required: true
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Subscription data subscriptions
      tags:
      - Subs To Nofify (Collection)
  /subscription-data/subs-to-notify/{subsId}:
    delete:
      operationId: RemovesubscriptionDataSubscriptions
      parameters:
      - description: Unique ID of the subscription to remove
        in: path
        name: subsId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Expected response to a successful subscription removal
      summary: Deletes a subscriptionDataSubscriptions
      tags:
      - Subs To Notify (Document)
  /subscription-data/{ueId}/{servingPlmnId}/provisioned-data/trace-data:
    get:
      operationId: QueryTraceData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PLMN ID
        in: path
        name: servingPlmnId
        required: true
        schema:
          $ref: '#/components/schemas/VarPlmnId'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceData'
          description: Expected response to a valid request
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          description: Generic Error
      summary: Retrieves the trace configuration data of a UE
      tags:
      - Trace Data (Document)
  /subscription-data/{ueId}/identity-data:
    get:
      operationId: GetIdentityData
      parameters:
      - description: UE ID
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Validator for conditional requests, as described in RFC 7232, 3.2
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Validator for conditional requests, as described in RFC 7232, 3.3
        in: header
        name: If-Modified-Since
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityData'
          description: OK
          headers:
            Cache-Control:
              description: Cache-Control containing max-age, as described in RFC 7234, 5.2
              schema:
                type: string
            ETag:
              description: Entity Tag, containing a strong validator, as described in RFC 7232, 2.3
              schema:
                type: string
            Last-Modified:
              description: Timestamp for last modification of the resource, as described in RFC 7232, 2.2
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieve identity data by SUPI or GPSI
      tags:
      - Query Identity Data by SUPI or GPSI (Document)
  /subscription-data/{ueId}/operator-determined-barring-data:
    get:
      operationId: GetOdbData
      parameters:
      - description: UE ID
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorDeterminedBarringData'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unexpected error
      summary: Retrieve ODB Data data by SUPI or GPSI
      tags:
      - Query ODB Data by SUPI or GPSI (Document)
  /policy-data/ues/{ueId}/am-data:
    get:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmPolicyData'
          description: Upon success, a response body containing access and mobility policies shall be returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    parameters:
    - in: path
      name: ueId
      required: true
      schema:
        $ref: '#/components/schemas/VarUeId'
  /policy-data/ues/{ueId}/ue-policy-set:
    get:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UePolicySet'
          description: Upon success, a response body containing UE policies shall be returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    parameters:
    - in: path
      name: ueId
      required: true
      schema:
        $ref: '#/components/schemas/VarUeId'
    patch:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/UePolicySet'
      responses:
        204:
          description: Successful case. The resource has been successfully updated and no additional content is to be sent in the response message.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    put:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UePolicySet'
      responses:
        201:
          description: Successful case. The resource has been successfully created and a response body containing a representation of the created UEPolicySet resource shall be returned.
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        204:
          description: Successful case. The resource has been successfully updated and no additional content is to be sent in the response message.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/ues/{ueId}/sm-data:
    get:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: query
        name: snssai
        required: false
        schema:
          $ref: '#/components/schemas/Snssai'
      - in: query
        name: dnn
        required: false
        schema:
          $ref: '#/components/schemas/Dnn_2'
      - description: attributes to be retrieved
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmPolicyData'
          description: Upon success, a response body containing SmPolicyData shall be returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    patch:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/UsageMonData'
              type: object
      responses:
        204:
          description: Successful case. The resource has been successfully uupdated and no additional content is to be sent in the response message.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/ues/{ueId}/sm-data/{usageMonId}:
    delete:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: usageMonId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successful case. The resource has been successfully deleted.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    get:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: usageMonId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageMonData'
          description: Successful case. The usage monitoring data is returned.
        204:
          description: The resource was found but no usage monitoring data is available.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    put:
      parameters:
      - in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - in: path
        name: usageMonId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsageMonData'
      responses:
        201:
          description: Successful case. The resource has been successfully created and a response body is returned containing a representation of the resource.
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/sponsor-connectivity-data/{sponsorId}:
    get:
      parameters:
      - in: path
        name: sponsorId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorConnectivityData'
          description: Upon success, a response body containing Sponsor Connectivity Data shall be returned.
        204:
          description: The resource was found but no Sponsor Connectivity Data is available.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    parameters:
    - in: path
      name: sponsorId
      required: true
      schema:
        type: string
  /policy-data/bdt-data:
    get:
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BdtData'
                type: array
          description: Upon success, a response body containing the BDT data shall be returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/bdt-data/{bdtReferenceId}:
    delete:
      parameters:
      - in: path
        name: bdtReferenceId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successful case. The resource has been successfully deleted.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    get:
      parameters:
      - in: path
        name: bdtReferenceId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BdtData'
          description: Upon success, a response body containing the BDT data shall be returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    parameters:
    - in: path
      name: bdtReferenceId
      required: true
      schema:
        type: string
    put:
      parameters:
      - in: path
        name: bdtReferenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BdtData'
      responses:
        201:
          description: Successful case. The resource has been successfully created.
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/subs-to-notify:
    post:
      callbacks:
        policyDataChangeNotification:
          '{$request.body#/notificationUri}':
            post:
              operationId: policyDataChangeNotification_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      items:
                        $ref: '#/components/schemas/PolicyDataChangeNotification'
                      minItems: 1
                      type: array
                required: true
              responses:
                204:
                  description: No Content, Notification was succesfull
                400:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                401:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                403:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                404:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                411:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                413:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                415:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                429:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                500:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                503:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDataSubscription'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDataSubscription'
          description: Upon success, a response body containing a representation of each Individual subscription resource shall be returned.
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/subs-to-notify/{subsId}:
    delete:
      parameters:
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Upon success, an empty response body shall be returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    parameters:
    - in: path
      name: subsId
      required: true
      schema:
        type: string
    put:
      parameters:
      - in: path
        name: subsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDataSubscription'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDataSubscription'
          description: The individual subscription resource was updated successfully.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/ues/{ueId}/operator-specific-data:
    get:
      parameters:
      - description: UE Id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: attributes to be retrieved
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        200:
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/OperatorSpecificDataContainer_2'
                type: object
          description: Expected response to a valid request
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    patch:
      parameters:
      - description: UE Id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/PatchItem'
              type: array
        required: true
      responses:
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    put:
      parameters:
      - description: UE Id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/OperatorSpecificDataContainer_2'
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorSpecificDataContainer_2'
          description: OK
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /application-data/pfds:
    get:
      parameters:
      - description: Contains the information of the application identifier(s) for the querying PFD Data resource.If none appId is included in the URI, it applies to all application identifier(s) for the querying PFD Data resource.
        in: query
        name: appId
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ApplicationId'
          type: array
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PfdDataForApp'
                type: array
          description: A representation of PFDs for request applications is returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /application-data/pfds/{appId}:
    delete:
      parameters:
      - description: Indicate the application identifier for the request pfd(s).It shall apply the format of Data type ApplicationId.
        in: path
        name: appId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successful case.The Individual PFD Data resource related to the application identifier was deleted.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    get:
      parameters:
      - description: Indicate the application identifier for the request pfd(s).It shall apply the format of Data type ApplicationId.
        in: path
        name: appId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PfdDataForApp'
          description: A representation of PFDs for the request application identified by the application identifier is returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    put:
      parameters:
      - description: Indicate the application identifier for the request pfd(s).It shall apply the format of Data type ApplicationId.
        in: path
        name: appId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PfdDataForApp'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PfdDataForApp'
          description: The creation of an Individual PFD Data resource related to the application-identifier is confirmed and a representation of that resource is returned.
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/nudr-dr/v1/application-data/pfds/{application-identifier}'
              required: true
              schema:
                type: string
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PfdDataForApp'
          description: Successful case.The upgrade of an Individual PFD Data resource related to the application identifier is confirmed and a representation of that resource is returned.
        204:
          description: No content
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /application-data/influenceData:
    get:
      parameters:
      - description: Each element identifies a service.
        in: query
        name: influence-Ids
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Each element identifies a DNN.
        in: query
        name: dnns
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Dnn_2'
          type: array
      - description: Each element identifies a slice.
        in: query
        name: snssais
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Snssai'
          type: array
      - description: Each element identifies a group of users.
        in: query
        name: internal-Group-Ids
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Each element identifies the user.
        in: query
        name: supis
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Supi'
          type: array
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrafficInfluData'
                type: array
          description: The Traffic Influence Data stored in the UDR are returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /application-data/influenceData/{influenceId}:
    delete:
      parameters:
      - description: The Identifier of an Individual Influence Data to be updated.It shall apply the format of Data type string.
        in: path
        name: influenceId
        required: true
        schema:
          type: string
      responses:
        204:
          description: The Individual Influence Data was deleted successfully.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    patch:
      parameters:
      - description: The Identifier of an Individual Influence Data to be updated.It shall apply the format of Data type string.
        in: path
        name: influenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficInfluDataPatch'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfluData'
          description: The update of an Individual Traffic Influence Data resource is confirmed and a response body containing Traffic Influence Data shall be returned.
        204:
          description: No content
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    put:
      parameters:
      - description: The Identifier of an Individual Influence Data to be created or updated.It shall apply the format of Data type string.
        in: path
        name: influenceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficInfluData'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfluData'
          description: The creation of an Individual Traffic Influence Data resource is confirmed and a representation of that resource is returned.
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/nudr-dr/v1/application-data/influenceData/{influenceId}'
              required: true
              schema:
                type: string
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfluData'
          description: The update of an Individual Traffic Influence Data resource is confirmed and a response body containing Traffic Influence Data shall be returned.
        204:
          description: No content
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /policy-data/plmns/{plmnId}/ue-policy-set:
    get:
      parameters:
      - in: path
        name: plmnId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UePolicySet'
          description: Upon success, a response body containing UE policies shall be returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        412:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Precondition Failed
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    parameters:
    - in: path
      name: plmnId
      required: true
      schema:
        type: string
  /application-data/influenceData/subs-to-notify:
    get:
      parameters:
      - description: Identifies a DNN.
        in: query
        name: dnn
        required: false
        schema:
          $ref: '#/components/schemas/Dnn_2'
      - description: Identifies a slice.
        in: query
        name: snssai
        required: false
        schema:
          $ref: '#/components/schemas/Snssai'
      - description: Identifies a group of users.
        in: query
        name: internal-Group-Id
        required: false
        schema:
          $ref: '#/components/schemas/ExternalGroupId'
      - description: Identifies a user.
        in: query
        name: supi
        required: false
        schema:
          $ref: '#/components/schemas/Supi'
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrafficInfluSub'
                minItems: 0
                type: array
          description: The subscription information as request in the request URI query parameter(s) are returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    post:
      callbacks:
        trafficInfluenceDataChangeNotification:
          '{$request.body#/notificationUri}':
            post:
              operationId: trafficInfluenceDataChangeNotification_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      items:
                        $ref: '#/components/schemas/TrafficInfluData'
                      minItems: 1
                      type: array
                required: true
              responses:
                204:
                  description: No Content, Notification was succesfull
                400:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                403:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                404:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                411:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                413:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                415:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                429:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                500:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                503:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficInfluSub'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfluSub'
          description: The subscription was created successfully.
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /application-data/influenceData/subs-to-notify/{subscriptionId}:
    delete:
      parameters:
      - description: String identifying a subscription to the Individual Influence Data Subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        204:
          description: The subscription was terminated successfully.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    get:
      parameters:
      - description: String identifying a subscription to the Individual Influence Data Subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfluSub'
          description: The subscription information is returned.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    put:
      parameters:
      - description: String identifying a subscription to the Individual Influence Data Subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficInfluSub'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfluSub'
          description: The subscription was updated successfully.
        204:
          description: No content
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /exposure-data/{ueId}/access-and-mobility-data:
    delete:
      operationId: DeleteAccessAndMobilityData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Deletes the access and mobility exposure data for a UE
      tags:
      - AccessAndMobilityData
    get:
      operationId: QueryAccessAndMobilityData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: Supported Features
        in: query
        name: supp-feat
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessAndMobilityData'
          description: The response body contains the access and mobility data
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Retrieves the access and mobility exposure data for a UE
      tags:
      - AccessAndMobilityData
    put:
      operationId: CreateAccessAndMobilityData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessAndMobilityData'
      responses:
        201:
          description: Upon success, a response body is returned containing a representation of the access and mobility data
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Creates and updates the access and mobility exposure data for a UE
      tags:
      - AccessAndMobilityData
  /exposure-data/{ueId}/session-management-data/{pduSessionId}:
    delete:
      operationId: DeleteSessionManagementData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PDU session id
        in: path
        name: pduSessionId
        required: true
        schema:
          type: integer
      responses:
        204:
          description: Upon success, an empty response body shall be returned
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Deletes the session management data for a UE and for an individual PDU session
      tags:
      - PduSessionManagementData
    get:
      operationId: QuerySessionManagementData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PDU session id
        in: path
        name: pduSessionId
        required: true
        schema:
          type: integer
      - description: IPv4 Address of the UE
        in: query
        name: ipv4-addr
        schema:
          $ref: '#/components/schemas/Ipv4Addr'
      - description: IPv6 Address Prefix of the UE
        in: query
        name: ipv6-prefix
        schema:
          $ref: '#/components/schemas/Ipv6Prefix'
      - description: DNN of the UE
        in: query
        name: dnn
        schema:
          $ref: '#/components/schemas/Dnn_2'
      - description: attributes to be retrieved
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Supported Features
        in: query
        name: supp-feat
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PduSessionManagementData'
          description: The response body contains the session management data
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        406:
          description: 406 Not Acceptable
        414:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Retrieves the session management data for a UE and for an individual PDU session
      tags:
      - PduSessionManagementData
    put:
      operationId: CreateSessionManagementData
      parameters:
      - description: UE id
        in: path
        name: ueId
        required: true
        schema:
          $ref: '#/components/schemas/VarUeId'
      - description: PDU session id
        in: path
        name: pduSessionId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PduSessionManagementData'
      responses:
        201:
          description: Upon success, a response body is returned containing a representation of the session management data
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Creates and updates the session management data for a UE and for an individual PDU session
      tags:
      - PduSessionManagementData
  /exposure-data/subs-to-notify:
    post:
      callbacks:
        exposureDataChangeNotification:
          '{$request.body#/notificationUri}':
            post:
              operationId: exposureDataChangeNotification_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      items:
                        $ref: '#/components/schemas/ExposureDataChangeNotification'
                      minItems: 1
                      type: array
                required: true
              responses:
                204:
                  description: No Content, Notification was succesfull
                400:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                401:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                403:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                404:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                411:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                413:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                415:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                429:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                500:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                503:
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureDataSubscription'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureDataSubscription'
          description: Created
          headers:
            Location:
              description: Contains the URI of the newly created resource
              required: true
              schema:
                type: string
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /exposure-data/subs-to-notify/{subId}:
    delete:
      parameters:
      - description: Subscription id
        in: path
        name: subId
        required: true
        schema:
          type: string
      responses:
        204:
          description: Resource was succesfully deleted.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Deletes a subcription for notifications
    put:
      parameters:
      - description: Subscription id
        in: path
        name: subId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureDataSubscription'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureDataSubscription'
          description: Resource was succesfully modified.
        400:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        401:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        403:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        404:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        411:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        413:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        415:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        429:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        500:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        503:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: updates a subcription for notifications
components:
  schemas:
    VarUeId:
      pattern: ^(imsi-[0-9]{5,15}|nai-.+|msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$
      type: string
    SupportedFeatures:
      pattern: ^[A-Fa-f0-9]*$
      type: string
    AuthenticationSubscription:
      example:
        authenticationManagementField: authenticationManagementField
        sequenceNumber: sequenceNumber
        opc:
          opcValue: opcValue
          encryptionKey: 9
          encryptionAlgorithm: 3
        permanentKey:
          permanentKeyValue: permanentKeyValue
          encryptionKey: 0
          encryptionAlgorithm: 6
        topc:
          topcValue: topcValue
          encryptionKey: 2
          encryptionAlgorithm: 4
        milenage:
          op:
            encryptionKey: 1
            opValue: opValue
            encryptionAlgorithm: 5
          constants:
            c3: c3
            c4: c4
            c5: c5
            c1: c1
            c2: c2
          rotations:
            r2: r2
            r3: r3
            r4: r4
            r5: r5
            r1: r1
        tuak:
          keccakIterations: 180
          top:
            topValue: topValue
            encryptionKey: 5
            encryptionAlgorithm: 2
        sharedAuthenticationSubscriptionId:
          sharedSmsSubsData:
            sharedSmsSubsDataId:
            - null
            - null
            smsSubscribed: true
          sharedDnnConfigurations:
            key:
              iwkEpsInd: true
              sessionAmbr:
                uplink: uplink
                downlink: downlink
              5gQosProfile:
                priorityLevel: 126
                5qi: 126
                arp:
                  priorityLevel: 8
              upSecurity: {}
              sscModes:
                allowedSscModes:
                - null
                - null
              3gppChargingCharacteristics: 3gppChargingCharacteristics
              pduSessionTypes:
                allowedSessionTypes:
                - null
                - null
              ladnIndicator: true
              staticIpAddress:
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
          sharedAuthenticationSubscription:
            authenticationManagementField: authenticationManagementField
            milenage:
              op:
                encryptionKey: 1
                opValue: opValue
                encryptionAlgorithm: 5
              constants:
                c3: c3
                c4: c4
                c5: c5
                c1: c1
                c2: c2
              rotations:
                r2: r2
                r3: r3
                r4: r4
                r5: r5
                r1: r1
            tuak:
              keccakIterations: 180
              top:
                topValue: topValue
                encryptionKey: 5
                encryptionAlgorithm: 2
          sharedSnssaiInfos:
            key:
              dnnInfos:
              - defaultDnnIndicator: true
                iwkEpsInd: true
                dnn: dnn
                lboRoamingAllowed: true
                ladnIndicator: true
              - defaultDnnIndicator: true
                iwkEpsInd: true
                dnn: dnn
                lboRoamingAllowed: true
                ladnIndicator: true
          sharedDataId: sharedDataId
          sharedTraceData:
            eventList: eventList
            collectionEntityIpv6Addr: 2001:db8:85a3::8a2e:370:7334
            collectionEntityIpv4Addr: 198.51.100.1
            traceRef: traceRef
            interfaceList: interfaceList
            neTypeList: neTypeList
          sharedSmsMngSubsData:
            moSmsBarringAll: true
            supportedFeatures: supportedFeatures
            mtSmsBarringRoaming: true
            mtSmsSubscribed: true
            moSmsBarringRoaming: true
            mtSmsBarringAll: true
            moSmsSubscribed: true
            sharedSmsMngDataIds:
            - null
            - null
          sharedAmData:
            supportedFeatures: supportedFeatures
            mcsPriority: true
            activeTime: 7
            subscribedUeAmbr:
              uplink: uplink
              downlink: downlink
            coreNetworkTypeRestrictions:
            - null
            - null
            sharedAmDataIds:
            - null
            - null
            nssai:
              supportedFeatures: supportedFeatures
              defaultSingleNssais:
              - sd: sd
                sst: 188
              - sd: sd
                sst: 188
              singleNssais:
              - sd: sd
                sst: 188
              - sd: sd
                sst: 188
            dlPacketCount: 0
            gpsis:
            - null
            - null
            rfspIndex: 27
            mpsPriority: true
            forbiddenAreas:
            - areaCodes: areaCodes
              tacs:
              - null
              - null
            - areaCodes: areaCodes
              tacs:
              - null
              - null
            serviceAreaRestriction:
              maxNumOfTAs: 0
              areas:
              - areaCodes: areaCodes
                tacs:
                - null
                - null
              - areaCodes: areaCodes
                tacs:
                - null
                - null
            ratRestrictions:
            - null
            - null
            sorInfo:
              sorMacIausf: sorMacIausf
              countersor: countersor
              ackInd: true
            subsRegTimer: 1
            ueUsageType: 6
            internalGroupIds:
            - null
            - null
            micoAllowed: true
      properties:
        authenticationMethod:
          $ref: '#/components/schemas/AuthMethod'
        permanentKey:
          $ref: '#/components/schemas/PermanentKey'
        sequenceNumber:
          pattern: ^[A-Fa-f0-9]{12}$
          type: string
        authenticationManagementField:
          pattern: ^[A-Fa-f0-9]{4}$
          type: string
        vectorAlgorithm:
          $ref: '#/components/schemas/VectorAlgorithm'
        milenage:
          $ref: '#/components/schemas/Milenage'
        tuak:
          $ref: '#/components/schemas/Tuak'
        opc:
          $ref: '#/components/schemas/Opc'
        topc:
          $ref: '#/components/schemas/Topc'
        sharedAuthenticationSubscriptionId:
          $ref: '#/components/schemas/SharedData_2'
      required:
      - authenticationMethod
      - permanentKey
      - sequenceNumber
      type: object
    AuthMethod:
      enum:
      - 5G_AKA
      - EAP_AKA_PRIME
      type: string
    PermanentKey:
      example:
        permanentKeyValue: permanentKeyValue
        encryptionKey: 0
        encryptionAlgorithm: 6
      properties:
        permanentKeyValue:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        encryptionKey:
          format: int32
          type: integer
        encryptionAlgorithm:
          format: int32
          type: integer
      required:
      - encryptionAlgorithm
      - encryptionKey
      - permanentKeyValue
      type: object
    PermanentKeyValue:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    EncryptionKey:
      format: int32
      type: integer
    EncryptionAlgorithm:
      format: int32
      type: integer
    SequenceNumber:
      pattern: ^[A-Fa-f0-9]{12}$
      type: string
    AuthenticationManagementField:
      pattern: ^[A-Fa-f0-9]{4}$
      type: string
    VectorAlgorithm:
      enum:
      - MILENAGE
      - TUAK
      type: string
    Milenage:
      example:
        op:
          encryptionKey: 1
          opValue: opValue
          encryptionAlgorithm: 5
        constants:
          c3: c3
          c4: c4
          c5: c5
          c1: c1
          c2: c2
        rotations:
          r2: r2
          r3: r3
          r4: r4
          r5: r5
          r1: r1
      properties:
        op:
          $ref: '#/components/schemas/Op'
        rotations:
          $ref: '#/components/schemas/Rotations'
        constants:
          $ref: '#/components/schemas/Constants'
      type: object
    Op:
      example:
        encryptionKey: 1
        opValue: opValue
        encryptionAlgorithm: 5
      properties:
        opValue:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        encryptionKey:
          format: int32
          type: integer
        encryptionAlgorithm:
          format: int32
          type: integer
      required:
      - encryptionAlgorithm
      - encryptionKey
      - opValue
      type: object
    OpValue:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Rotations:
      example:
        r2: r2
        r3: r3
        r4: r4
        r5: r5
        r1: r1
      properties:
        r1:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r2:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r3:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r4:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r5:
          pattern: ^[A-Fa-f0-9]+$
          type: string
      required:
      - r1
      - r2
      - r3
      - r4
      - r5
      type: object
    RValue:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Constants:
      example:
        c3: c3
        c4: c4
        c5: c5
        c1: c1
        c2: c2
      properties:
        c1:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c2:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c3:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c4:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c5:
          pattern: ^[A-Fa-f0-9]+$
          type: string
      required:
      - c1
      - c2
      - c3
      - c4
      - c5
      type: object
    CValue:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Tuak:
      example:
        keccakIterations: 180
        top:
          topValue: topValue
          encryptionKey: 5
          encryptionAlgorithm: 2
      properties:
        top:
          $ref: '#/components/schemas/Top'
        keccakIterations:
          format: int32
          maximum: 255
          minimum: 1
          type: integer
      type: object
    Top:
      example:
        topValue: topValue
        encryptionKey: 5
        encryptionAlgorithm: 2
      properties:
        topValue:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        encryptionKey:
          format: int32
          type: integer
        encryptionAlgorithm:
          format: int32
          type: integer
      required:
      - encryptionAlgorithm
      - encryptionKey
      - topValue
      type: object
    TopValue:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Opc:
      example:
        opcValue: opcValue
        encryptionKey: 9
        encryptionAlgorithm: 3
      properties:
        opcValue:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        encryptionKey:
          format: int32
          type: integer
        encryptionAlgorithm:
          format: int32
          type: integer
      required:
      - encryptionAlgorithm
      - encryptionKey
      - opcValue
      type: object
    OpcValue:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Topc:
      example:
        topcValue: topcValue
        encryptionKey: 2
        encryptionAlgorithm: 4
      properties:
        topcValue:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        encryptionKey:
          format: int32
          type: integer
        encryptionAlgorithm:
          format: int32
          type: integer
      required:
      - encryptionAlgorithm
      - encryptionKey
      - topcValue
      type: object
    TopcValue:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    ProblemDetails:
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
        cause:
          type: string
        invalidParams:
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
      type: object
    Uri:
      type: string
    InvalidParam:
      properties:
        param:
          type: string
        reason:
          type: string
      required:
      - param
      type: object
    PatchItem:
      properties:
        op:
          $ref: '#/components/schemas/PatchOperation'
        path:
          type: string
        from:
          type: string
        value:
          nullable: true
      required:
      - op
      - path
      type: object
    PatchOperation:
      enum:
      - add
      - copy
      - move
      - remove
      - replace
      - test
      type: string
    AuthEvent:
      example:
        timeStamp: 2000-01-23T04:56:07.000+00:00
        nfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        servingNetworkName: servingNetworkName
        success: true
      properties:
        nfInstanceId:
          format: uuid
          type: string
        success:
          type: boolean
        timeStamp:
          format: date-time
          type: string
        authType:
          $ref: '#/components/schemas/AuthType'
        servingNetworkName:
          pattern: ^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$
          type: string
      required:
      - authType
      - nfInstanceId
      - servingNetworkName
      - success
      - timeStamp
      type: object
    Success:
      type: boolean
    AuthType:
      enum:
      - 5G_AKA
      - EAP_AKA_PRIME
      - EAP_TLS
      type: string
    ServingNetworkName:
      pattern: ^5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org$
      type: string
    SorData:
      example:
        sorXmacIue: sorXmacIue
      properties:
        sorXmacIue:
          pattern: ^[A-Fa-f0-9]{32}$
          type: string
      required:
      - sorXmacIue
      type: object
    VarPlmnId:
      pattern: ^[0-9]{5,6}$
      type: string
    DatasetNames:
      items:
        $ref: '#/components/schemas/DataSetName'
      minItems: 1
      type: array
      uniqueItems: true
    DataSetName:
      enum:
      - AM
      - SMF_SEL
      - SMS_SUB
      - SM
      - TRACE
      - SMS_MNG
      type: string
    ProvisionedDataSets:
      example:
        amData:
          supportedFeatures: supportedFeatures
          mcsPriority: true
          activeTime: 7
          subscribedUeAmbr:
            uplink: uplink
            downlink: downlink
          coreNetworkTypeRestrictions:
          - null
          - null
          sharedAmDataIds:
          - null
          - null
          nssai:
            supportedFeatures: supportedFeatures
            defaultSingleNssais:
            - sd: sd
              sst: 188
            - sd: sd
              sst: 188
            singleNssais:
            - sd: sd
              sst: 188
            - sd: sd
              sst: 188
          dlPacketCount: 0
          gpsis:
          - null
          - null
          rfspIndex: 27
          mpsPriority: true
          forbiddenAreas:
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          serviceAreaRestriction:
            maxNumOfTAs: 0
            areas:
            - areaCodes: areaCodes
              tacs:
              - null
              - null
            - areaCodes: areaCodes
              tacs:
              - null
              - null
          ratRestrictions:
          - null
          - null
          sorInfo:
            sorMacIausf: sorMacIausf
            countersor: countersor
            ackInd: true
          subsRegTimer: 1
          ueUsageType: 6
          internalGroupIds:
          - null
          - null
          micoAllowed: true
        smfSelData:
          supportedFeatures: supportedFeatures
          subscribedSnssaiInfos:
            key:
              dnnInfos:
              - defaultDnnIndicator: true
                iwkEpsInd: true
                dnn: dnn
                lboRoamingAllowed: true
                ladnIndicator: true
              - defaultDnnIndicator: true
                iwkEpsInd: true
                dnn: dnn
                lboRoamingAllowed: true
                ladnIndicator: true
          sharedSnssaiInfosId: sharedSnssaiInfosId
        smData:
        - dnnConfigurations:
            key:
              iwkEpsInd: true
              sessionAmbr:
                uplink: uplink
                downlink: downlink
              5gQosProfile:
                priorityLevel: 126
                5qi: 126
                arp:
                  priorityLevel: 8
              upSecurity: {}
              sscModes:
                allowedSscModes:
                - null
                - null
              3gppChargingCharacteristics: 3gppChargingCharacteristics
              pduSessionTypes:
                allowedSessionTypes:
                - null
                - null
              ladnIndicator: true
              staticIpAddress:
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
          sharedDnnConfigurationsIds: sharedDnnConfigurationsIds
          singleNssai:
            sd: sd
            sst: 188
          internalGroupIds:
          - null
          - null
        - dnnConfigurations:
            key:
              iwkEpsInd: true
              sessionAmbr:
                uplink: uplink
                downlink: downlink
              5gQosProfile:
                priorityLevel: 126
                5qi: 126
                arp:
                  priorityLevel: 8
              upSecurity: {}
              sscModes:
                allowedSscModes:
                - null
                - null
              3gppChargingCharacteristics: 3gppChargingCharacteristics
              pduSessionTypes:
                allowedSessionTypes:
                - null
                - null
              ladnIndicator: true
              staticIpAddress:
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
          sharedDnnConfigurationsIds: sharedDnnConfigurationsIds
          singleNssai:
            sd: sd
            sst: 188
          internalGroupIds:
          - null
          - null
        traceData:
          eventList: eventList
          collectionEntityIpv6Addr: 2001:db8:85a3::8a2e:370:7334
          collectionEntityIpv4Addr: 198.51.100.1
          traceRef: traceRef
          interfaceList: interfaceList
          neTypeList: neTypeList
        smsSubsData:
          sharedSmsSubsDataId:
          - null
          - null
          smsSubscribed: true
        smsMngData:
          moSmsBarringAll: true
          supportedFeatures: supportedFeatures
          mtSmsBarringRoaming: true
          mtSmsSubscribed: true
          moSmsBarringRoaming: true
          mtSmsBarringAll: true
          moSmsSubscribed: true
          sharedSmsMngDataIds:
          - null
          - null
      properties:
        amData:
          $ref: '#/components/schemas/AccessAndMobilitySubscriptionData'
        smfSelData:
          $ref: '#/components/schemas/SmfSelectionSubscriptionData'
        smsSubsData:
          $ref: '#/components/schemas/SmsSubscriptionData'
        smData:
          items:
            $ref: '#/components/schemas/SessionManagementSubscriptionData'
          type: array
        traceData:
          $ref: '#/components/schemas/TraceData_2'
        smsMngData:
          $ref: '#/components/schemas/SmsManagementSubscriptionData'
      type: object
    AccessAndMobilitySubscriptionData:
      example:
        supportedFeatures: supportedFeatures
        mcsPriority: true
        activeTime: 7
        subscribedUeAmbr:
          uplink: uplink
          downlink: downlink
        coreNetworkTypeRestrictions:
        - null
        - null
        sharedAmDataIds:
        - null
        - null
        nssai:
          supportedFeatures: supportedFeatures
          defaultSingleNssais:
          - sd: sd
            sst: 188
          - sd: sd
            sst: 188
          singleNssais:
          - sd: sd
            sst: 188
          - sd: sd
            sst: 188
        dlPacketCount: 0
        gpsis:
        - null
        - null
        rfspIndex: 27
        mpsPriority: true
        forbiddenAreas:
        - areaCodes: areaCodes
          tacs:
          - null
          - null
        - areaCodes: areaCodes
          tacs:
          - null
          - null
        serviceAreaRestriction:
          maxNumOfTAs: 0
          areas:
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          - areaCodes: areaCodes
            tacs:
            - null
            - null
        ratRestrictions:
        - null
        - null
        sorInfo:
          sorMacIausf: sorMacIausf
          countersor: countersor
          ackInd: true
        subsRegTimer: 1
        ueUsageType: 6
        internalGroupIds:
        - null
        - null
        micoAllowed: true
      properties:
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        gpsis:
          items:
            $ref: '#/components/schemas/Gpsi'
          type: array
        internalGroupIds:
          items:
            $ref: '#/components/schemas/GroupId'
          minItems: 1
          type: array
        subscribedUeAmbr:
          $ref: '#/components/schemas/AmbrRm'
        nssai:
          $ref: '#/components/schemas/Nssai'
        ratRestrictions:
          items:
            $ref: '#/components/schemas/RatType'
          type: array
        forbiddenAreas:
          items:
            $ref: '#/components/schemas/Area'
          type: array
        serviceAreaRestriction:
          $ref: '#/components/schemas/ServiceAreaRestriction'
        coreNetworkTypeRestrictions:
          items:
            $ref: '#/components/schemas/CoreNetworkType'
          type: array
        rfspIndex:
          format: int32
          maximum: 256
          minimum: 1
          nullable: true
          type: integer
        subsRegTimer:
          format: int32
          nullable: true
          type: integer
        ueUsageType:
          format: int32
          type: integer
        mpsPriority:
          type: boolean
        mcsPriority:
          type: boolean
        activeTime:
          format: int32
          nullable: true
          type: integer
        dlPacketCount:
          format: int32
          minimum: -1
          type: integer
        sorInfo:
          $ref: '#/components/schemas/SorInfo'
        micoAllowed:
          type: boolean
        sharedAmDataIds:
          items:
            $ref: '#/components/schemas/SharedDataId'
          minItems: 1
          type: array
        odbPacketServices:
          $ref: '#/components/schemas/OdbPacketServices'
      type: object
    Nssai:
      example:
        supportedFeatures: supportedFeatures
        defaultSingleNssais:
        - sd: sd
          sst: 188
        - sd: sd
          sst: 188
        singleNssais:
        - sd: sd
          sst: 188
        - sd: sd
          sst: 188
      nullable: true
      properties:
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        defaultSingleNssais:
          items:
            $ref: '#/components/schemas/Snssai_2'
          minItems: 1
          type: array
        singleNssais:
          items:
            $ref: '#/components/schemas/Snssai_2'
          minItems: 1
          type: array
      required:
      - defaultSingleNssais
      type: object
    UeUsageType:
      format: int32
      type: integer
    MpsPriorityIndicator:
      type: boolean
    McsPriorityIndicator:
      type: boolean
    DlPacketCount:
      format: int32
      minimum: -1
      type: integer
    SorInfo:
      example:
        sorMacIausf: sorMacIausf
        countersor: countersor
        ackInd: true
      properties:
        steeringContainer:
          $ref: '#/components/schemas/SteeringContainer'
        ackInd:
          type: boolean
        sorMacIausf:
          pattern: ^[A-Fa-f0-9]{32}$
          type: string
        countersor:
          pattern: ^[A-Fa-f0-9]{4}$
          type: string
      required:
      - ackInd
      - countersor
      - sorMacIausf
      type: object
    SteeringContainer:
      oneOf:
      - items:
          $ref: '#/components/schemas/SteeringInfo'
        minItems: 1
        type: array
      - $ref: '#/components/schemas/SecuredPacket'
    SecuredPacket:
      format: base64
      type: string
    MicoAllowed:
      type: boolean
    SharedDataId:
      pattern: ^[0-9]{5,6}-.+$
      type: string
    SmfSelectionSubscriptionData:
      example:
        supportedFeatures: supportedFeatures
        subscribedSnssaiInfos:
          key:
            dnnInfos:
            - defaultDnnIndicator: true
              iwkEpsInd: true
              dnn: dnn
              lboRoamingAllowed: true
              ladnIndicator: true
            - defaultDnnIndicator: true
              iwkEpsInd: true
              dnn: dnn
              lboRoamingAllowed: true
              ladnIndicator: true
        sharedSnssaiInfosId: sharedSnssaiInfosId
      properties:
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        subscribedSnssaiInfos:
          additionalProperties:
            $ref: '#/components/schemas/SnssaiInfo'
          type: object
        sharedSnssaiInfosId:
          pattern: ^[0-9]{5,6}-.+$
          type: string
      type: object
    SnssaiInfo:
      example:
        dnnInfos:
        - defaultDnnIndicator: true
          iwkEpsInd: true
          dnn: dnn
          lboRoamingAllowed: true
          ladnIndicator: true
        - defaultDnnIndicator: true
          iwkEpsInd: true
          dnn: dnn
          lboRoamingAllowed: true
          ladnIndicator: true
      properties:
        dnnInfos:
          items:
            $ref: '#/components/schemas/DnnInfo'
          minItems: 1
          type: array
      required:
      - dnnInfos
      type: object
    DnnInfo:
      example:
        defaultDnnIndicator: true
        iwkEpsInd: true
        dnn: dnn
        lboRoamingAllowed: true
        ladnIndicator: true
      properties:
        dnn:
          type: string
        defaultDnnIndicator:
          type: boolean
        lboRoamingAllowed:
          type: boolean
        iwkEpsInd:
          type: boolean
        ladnIndicator:
          type: boolean
      required:
      - dnn
      type: object
    DnnIndicator:
      type: boolean
    LboRoamingAllowed:
      type: boolean
    IwkEpsInd:
      type: boolean
    LadnIndicator:
      type: boolean
    SmsSubscriptionData:
      example:
        sharedSmsSubsDataId:
        - null
        - null
        smsSubscribed: true
      properties:
        smsSubscribed:
          type: boolean
        sharedSmsSubsDataId:
          items:
            $ref: '#/components/schemas/SharedDataId'
          type: array
      type: object
    SmsSubscribed:
      type: boolean
    SharedDataIds:
      items:
        $ref: '#/components/schemas/SharedDataId'
      type: array
    SessionManagementSubscriptionData:
      example:
        dnnConfigurations:
          key:
            iwkEpsInd: true
            sessionAmbr:
              uplink: uplink
              downlink: downlink
            5gQosProfile:
              priorityLevel: 126
              5qi: 126
              arp:
                priorityLevel: 8
            upSecurity: {}
            sscModes:
              allowedSscModes:
              - null
              - null
            3gppChargingCharacteristics: 3gppChargingCharacteristics
            pduSessionTypes:
              allowedSessionTypes:
              - null
              - null
            ladnIndicator: true
            staticIpAddress:
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
        sharedDnnConfigurationsIds: sharedDnnConfigurationsIds
        singleNssai:
          sd: sd
          sst: 188
        internalGroupIds:
        - null
        - null
      properties:
        singleNssai:
          $ref: '#/components/schemas/Snssai_2'
        dnnConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/DnnConfiguration'
          description: A map (list of key-value pairs where Dnn serves as key) of DnnConfigurations
          type: object
        internalGroupIds:
          items:
            $ref: '#/components/schemas/GroupId'
          minItems: 1
          type: array
        sharedDnnConfigurationsIds:
          pattern: ^[0-9]{5,6}-.+$
          type: string
      required:
      - singleNssai
      type: object
    DnnConfiguration:
      example:
        iwkEpsInd: true
        sessionAmbr:
          uplink: uplink
          downlink: downlink
        5gQosProfile:
          priorityLevel: 126
          5qi: 126
          arp:
            priorityLevel: 8
        upSecurity: {}
        sscModes:
          allowedSscModes:
          - null
          - null
        3gppChargingCharacteristics: 3gppChargingCharacteristics
        pduSessionTypes:
          allowedSessionTypes:
          - null
          - null
        ladnIndicator: true
        staticIpAddress:
        - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          ipv6Prefix: 2001:db8:abcd:12::0/64
        - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          ipv6Prefix: 2001:db8:abcd:12::0/64
      properties:
        pduSessionTypes:
          $ref: '#/components/schemas/PduSessionTypes'
        sscModes:
          $ref: '#/components/schemas/SscModes'
        iwkEpsInd:
          type: boolean
        ladnIndicator:
          type: boolean
        5gQosProfile:
          $ref: '#/components/schemas/SubscribedDefaultQos'
        sessionAmbr:
          $ref: '#/components/schemas/Ambr'
        3gppChargingCharacteristics:
          type: string
        staticIpAddress:
          items:
            $ref: '#/components/schemas/IpAddress'
          maxItems: 2
          minItems: 1
          type: array
        upSecurity:
          $ref: '#/components/schemas/UpSecurity'
      required:
      - pduSessionTypes
      - sscModes
      type: object
    PduSessionTypes:
      example:
        allowedSessionTypes:
        - null
        - null
      properties:
        defaultSessionType:
          $ref: '#/components/schemas/PduSessionType'
        allowedSessionTypes:
          items:
            $ref: '#/components/schemas/PduSessionType'
          minItems: 1
          type: array
      required:
      - defaultSessionType
      type: object
    SscModes:
      example:
        allowedSscModes:
        - null
        - null
      properties:
        defaultSscMode:
          $ref: '#/components/schemas/SscMode'
        allowedSscModes:
          items:
            $ref: '#/components/schemas/SscMode'
          maxItems: 2
          minItems: 1
          type: array
      required:
      - defaultSscMode
      type: object
    3GppChargingCharacteristics:
      type: string
    IpAddress:
      example:
        ipv6Addr: 2001:db8:85a3::8a2e:370:7334
        ipv4Addr: 198.51.100.1
        ipv6Prefix: 2001:db8:abcd:12::0/64
      oneOf:
      - required:
        - ipv4Address
      - required:
        - ipv6Address
      - required:
        - ipv6Prefix
      properties:
        ipv4Addr:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        ipv6Addr:
          $ref: '#/components/schemas/Ipv6Addr_2'
        ipv6Prefix:
          $ref: '#/components/schemas/Ipv6Prefix_2'
      type: object
    SmsManagementSubscriptionData:
      example:
        moSmsBarringAll: true
        supportedFeatures: supportedFeatures
        mtSmsBarringRoaming: true
        mtSmsSubscribed: true
        moSmsBarringRoaming: true
        mtSmsBarringAll: true
        moSmsSubscribed: true
        sharedSmsMngDataIds:
        - null
        - null
      properties:
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        mtSmsSubscribed:
          type: boolean
        mtSmsBarringAll:
          type: boolean
        mtSmsBarringRoaming:
          type: boolean
        moSmsSubscribed:
          type: boolean
        moSmsBarringAll:
          type: boolean
        moSmsBarringRoaming:
          type: boolean
        sharedSmsMngDataIds:
          items:
            $ref: '#/components/schemas/SharedDataId'
          minItems: 1
          type: array
      type: object
    Dnn:
      type: string
    Amf3GppAccessRegistration:
      example:
        deregCallbackUri: deregCallbackUri
        supportedFeatures: supportedFeatures
        purgeFlag: true
        guami:
          plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        pei: pei
        drFlag: true
        amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pcscfRestorationCallbackUri: pcscfRestorationCallbackUri
        initialRegistrationInd: true
        backupAmfInfo:
        - backupAmf: backupAmf
          guamiList:
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
        - backupAmf: backupAmf
          guamiList:
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
      properties:
        amfInstanceId:
          format: uuid
          type: string
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        purgeFlag:
          type: boolean
        pei:
          pattern: ^(imei-[0-9]{15}|imeisv-[0-9]{16}|.+)$
          type: string
        imsVoPs:
          $ref: '#/components/schemas/ImsVoPs'
        deregCallbackUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        amfServiceNameDereg:
          $ref: '#/components/schemas/ServiceName'
        pcscfRestorationCallbackUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        amfServiceNamePcscfRest:
          $ref: '#/components/schemas/ServiceName'
        initialRegistrationInd:
          type: boolean
        guami:
          $ref: '#/components/schemas/Guami'
        backupAmfInfo:
          items:
            $ref: '#/components/schemas/BackupAmfInfo'
          minItems: 1
          type: array
        drFlag:
          type: boolean
        ratType:
          $ref: '#/components/schemas/RatType'
      required:
      - amfInstanceId
      - deregCallbackUri
      - guami
      - ratType
      type: object
    PurgeFlag:
      type: boolean
    ImsVoPs:
      enum:
      - HOMOGENEOUS_SUPPORT
      - HOMOGENEOUS_NON_SUPPORT
      - NON_HOMOGENEOUS_OR_UNKNOWN
      type: string
    DualRegistrationFlag:
      type: boolean
    AmfNon3GppAccessRegistration:
      example:
        deregCallbackUri: deregCallbackUri
        supportedFeatures: supportedFeatures
        purgeFlag: true
        pei: pei
        amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pcscfRestorationCallbackUri: pcscfRestorationCallbackUri
        guami:
          plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        backupAmfInfo:
        - backupAmf: backupAmf
          guamiList:
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
        - backupAmf: backupAmf
          guamiList:
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
          - plmnId:
              mnc: mnc
              mcc: mcc
            amfId: amfId
      properties:
        amfInstanceId:
          format: uuid
          type: string
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        purgeFlag:
          type: boolean
        pei:
          pattern: ^(imei-[0-9]{15}|imeisv-[0-9]{16}|.+)$
          type: string
        imsVoPs:
          $ref: '#/components/schemas/ImsVoPs'
        deregCallbackUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        amfServiceNameDereg:
          $ref: '#/components/schemas/ServiceName'
        pcscfRestorationCallbackUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        amfServiceNamePcscfRest:
          $ref: '#/components/schemas/ServiceName'
        guami:
          $ref: '#/components/schemas/Guami'
        backupAmfInfo:
          items:
            $ref: '#/components/schemas/BackupAmfInfo'
          minItems: 1
          type: array
        ratType:
          $ref: '#/components/schemas/RatType'
      required:
      - amfInstanceId
      - deregCallbackUri
      - guami
      - imsVoPs
      - ratType
      type: object
    SmfRegList:
      items:
        $ref: '#/components/schemas/SmfRegistration'
      type: array
    SmfRegistration:
      example:
        supportedFeatures: supportedFeatures
        dnn: dnn
        singleNssai:
          sd: sd
          sst: 188
        smfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pcscfRestorationCallbackUri: pcscfRestorationCallbackUri
        pduSessionId: 20
        plmnId:
          mnc: mnc
          mcc: mcc
        pgwFqdn: pgwFqdn
      properties:
        smfInstanceId:
          format: uuid
          type: string
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        pduSessionId:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        singleNssai:
          $ref: '#/components/schemas/Snssai_2'
        dnn:
          type: string
        pcscfRestorationCallbackUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        pgwFqdn:
          type: string
      required:
      - dnn
      - pduSessionId
      - plmnId
      - singleNssai
      - smfInstanceId
      type: object
    OperatorSpecificDataContainer:
      example:
        NumberTypeElements:
          key: 6.027456183070403
        IntegerTypeElements:
          key: 0
        StringTypeElements:
          key: StringTypeElements
        BooleanTypeElements:
          key: true
      properties:
        StringTypeElements:
          additionalProperties:
            type: string
          type: object
        IntegerTypeElements:
          additionalProperties:
            format: int32
            type: integer
          type: object
        NumberTypeElements:
          additionalProperties:
            type: number
          type: object
        BooleanTypeElements:
          additionalProperties:
            type: boolean
          type: object
      type: object
    SmsfRegistration:
      example:
        smsfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        supportedFeatures: supportedFeatures
        smsfMAPAddress: smsfMAPAddress
        plmnId:
          mnc: mnc
          mcc: mcc
        smsfDiameterAddress:
          name: name
          realm: realm
      properties:
        smsfInstanceId:
          format: uuid
          type: string
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        smsfMAPAddress:
          pattern: ^[0-9]{1,15}$
          type: string
        smsfDiameterAddress:
          $ref: '#/components/schemas/NetworkNodeDiameterAddress'
      required:
      - plmnId
      - smsfInstanceId
      type: object
    E164Number:
      pattern: ^[0-9]{1,15}$
      type: string
    NetworkNodeDiameterAddress:
      example:
        name: name
        realm: realm
      properties:
        name:
          pattern: ^([A-Za-z0-9]+(-[A-Za-z0-9]+).)+[a-z]{2,}$
          type: string
        realm:
          pattern: ^([A-Za-z0-9]+(-[A-Za-z0-9]+).)+[a-z]{2,}$
          type: string
      required:
      - name
      - realm
      type: object
    PpData:
      example:
        supportedFeatures: supportedFeatures
        communicationCharacteristics:
          ppSubsRegTimer:
            afInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            subsRegTimer: 0
            referenceId: 6
          ppDlPacketCount: 5
          ppActiveTime:
            afInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            activeTime: 1
            referenceId: 5
      properties:
        communicationCharacteristics:
          $ref: '#/components/schemas/CommunicationCharacteristics'
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      type: object
    CommunicationCharacteristics:
      example:
        ppSubsRegTimer:
          afInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          subsRegTimer: 0
          referenceId: 6
        ppDlPacketCount: 5
        ppActiveTime:
          afInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          activeTime: 1
          referenceId: 5
      properties:
        ppSubsRegTimer:
          $ref: '#/components/schemas/PpSubsRegTimer'
        ppActiveTime:
          $ref: '#/components/schemas/PpActiveTime'
        ppDlPacketCount:
          format: int32
          nullable: true
          type: integer
      type: object
    PpSubsRegTimer:
      example:
        afInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        subsRegTimer: 0
        referenceId: 6
      nullable: true
      properties:
        subsRegTimer:
          format: int32
          type: integer
        afInstanceId:
          format: uuid
          type: string
        referenceId:
          format: int32
          type: integer
      required:
      - afInstanceId
      - referenceId
      - subsRegTimer
      type: object
    ReferenceId:
      format: int32
      type: integer
    PpActiveTime:
      example:
        afInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        activeTime: 1
        referenceId: 5
      nullable: true
      properties:
        activeTime:
          format: int32
          type: integer
        afInstanceId:
          format: uuid
          type: string
        referenceId:
          format: int32
          type: integer
      required:
      - activeTime
      - afInstanceId
      - referenceId
      type: object
    PpDlPacketCount:
      format: int32
      nullable: true
      type: integer
    EeSubscription:
      example:
        supportedFeatures: supportedFeatures
        callbackReference: callbackReference
        monitoringConfigurations:
          key:
            locationReportingConfiguration:
              oneTime: true
              currentLocation: true
            immediateFlag: true
        reportingOptions:
          expiry: 2000-01-23T04:56:07.000+00:00
          maxNumOfReports: 0
      properties:
        callbackReference:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        monitoringConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/MonitoringConfiguration'
          description: A map (list of key-value pairs where ReferenceId serves as key) of MonitoringConfigurations
          minProperties: 1
          type: object
        reportingOptions:
          $ref: '#/components/schemas/ReportingOptions'
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - callbackReference
      - monitoringConfigurations
      type: object
    MonitoringConfiguration:
      example:
        locationReportingConfiguration:
          oneTime: true
          currentLocation: true
        immediateFlag: true
      properties:
        eventType:
          $ref: '#/components/schemas/EventType'
        immediateFlag:
          type: boolean
        locationReportingConfiguration:
          $ref: '#/components/schemas/LocationReportingConfiguration'
      required:
      - eventType
      type: object
    EventType:
      enum:
      - LOSS_OF_CONNECTIVITY
      - UE_REACHABILITY_FOR_DATA
      - UE_REACHABILITY_FOR_SMS
      - LOCATION_REPORTING
      - CHANGE_OF_SUPI_PEI_ASSOCIATION
      - ROAMING_STATUS
      - COMMUNICATION_FAILURE
      - AVAILABILITY_AFTER_DNN_FAILURE
      type: string
    LocationReportingConfiguration:
      example:
        oneTime: true
        currentLocation: true
      properties:
        currentLocation:
          type: boolean
        oneTime:
          type: boolean
        accuracy:
          $ref: '#/components/schemas/LocationAccuracy'
      required:
      - currentLocation
      type: object
    LocationAccuracy:
      enum:
      - CELL_LEVEL
      - TA_LEVEL
      type: string
    ReportingOptions:
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        maxNumOfReports: 0
      properties:
        maxNumOfReports:
          format: int32
          type: integer
        expiry:
          format: date-time
          type: string
      type: object
    MaxNumOfReports:
      format: int32
      type: integer
    AmfSubscriptionInfo:
      example:
        amfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        subscriptionId: subscriptionId
        subsChangeNotifyCorrelationId: subsChangeNotifyCorrelationId
      properties:
        amfInstanceId:
          format: uuid
          type: string
        subscriptionId:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        subsChangeNotifyCorrelationId:
          type: string
      required:
      - amfInstanceId
      - subscriptionId
      type: object
    VarUeGroupId:
      pattern: ^(extgroupid-[^@]+@[^@]+|anyUE)$
      type: string
    EeProfileData:
      example:
        supportedFeatures: supportedFeatures
        restrictedEventTypes:
        - null
        - null
      properties:
        restrictedEventTypes:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      type: object
    SdmSubscription:
      example:
        nfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expires: 2000-01-23T04:56:07.000+00:00
        implicitUnsubscribe: true
        dnn: dnn
        callbackReference: callbackReference
        singleNssai:
          sd: sd
          sst: 188
        monitoredResourceUris:
        - null
        - null
      properties:
        nfInstanceId:
          format: uuid
          type: string
        implicitUnsubscribe:
          type: boolean
        expires:
          format: date-time
          type: string
        callbackReference:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        amfServiceName:
          $ref: '#/components/schemas/ServiceName'
        monitoredResourceUris:
          items:
            $ref: '#/components/schemas/Uri_2'
          minItems: 1
          type: array
        singleNssai:
          $ref: '#/components/schemas/Snssai_2'
        dnn:
          type: string
      required:
      - callbackUri
      - monitoredResourceUri
      - nfInstanceId
      type: object
    SharedDataIds_2:
      items:
        $ref: '#/components/schemas/SharedDataId_2'
      type: array
    SharedDataId_2:
      pattern: ^[0-9]{5,6}-.+$
      type: string
    SharedData:
      example:
        sharedSmsSubsData:
          sharedSmsSubsDataId:
          - null
          - null
          smsSubscribed: true
        sharedDnnConfigurations:
          key:
            iwkEpsInd: true
            sessionAmbr:
              uplink: uplink
              downlink: downlink
            5gQosProfile:
              priorityLevel: 26
              5qi: 237
              arp:
                priorityLevel: 6
            upSecurity: {}
            sscModes:
              allowedSscModes:
              - null
              - null
            3gppChargingCharacteristics: 3gppChargingCharacteristics
            pduSessionTypes:
              allowedSessionTypes:
              - null
              - null
            ladnIndicator: true
            staticIpAddress:
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
        sharedAuthenticationSubscription:
          authenticationManagementField: authenticationManagementField
          milenage:
            op:
              encryptionKey: 4
              opValue: opValue
              encryptionAlgorithm: 7
            constants:
              c3: c3
              c4: c4
              c5: c5
              c1: c1
              c2: c2
            rotations:
              r2: r2
              r3: r3
              r4: r4
              r5: r5
              r1: r1
          tuak:
            keccakIterations: 38
            top:
              topValue: topValue
              encryptionKey: 1
              encryptionAlgorithm: 1
        sharedSnssaiInfos:
          key:
            dnnInfos:
            - defaultDnnIndicator: true
              iwkEpsInd: true
              dnn: dnn
              lboRoamingAllowed: true
              ladnIndicator: true
            - defaultDnnIndicator: true
              iwkEpsInd: true
              dnn: dnn
              lboRoamingAllowed: true
              ladnIndicator: true
        sharedDataId: sharedDataId
        sharedTraceData:
          eventList: eventList
          collectionEntityIpv6Addr: 2001:db8:85a3::8a2e:370:7334
          collectionEntityIpv4Addr: 198.51.100.1
          traceRef: traceRef
          interfaceList: interfaceList
          neTypeList: neTypeList
        sharedSmsMngSubsData:
          moSmsBarringAll: true
          supportedFeatures: supportedFeatures
          mtSmsBarringRoaming: true
          mtSmsSubscribed: true
          moSmsBarringRoaming: true
          mtSmsBarringAll: true
          moSmsSubscribed: true
          sharedSmsMngDataIds:
          - null
          - null
        sharedAmData:
          supportedFeatures: supportedFeatures
          mcsPriority: true
          activeTime: 2
          subscribedUeAmbr:
            uplink: uplink
            downlink: downlink
          coreNetworkTypeRestrictions:
          - null
          - null
          sharedAmDataIds:
          - null
          - null
          nssai:
            supportedFeatures: supportedFeatures
            defaultSingleNssais:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
            singleNssais:
            - sd: sd
              sst: 20
            - sd: sd
              sst: 20
          dlPacketCount: 0
          gpsis:
          - null
          - null
          rfspIndex: 38
          mpsPriority: true
          forbiddenAreas:
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          serviceAreaRestriction:
            maxNumOfTAs: 0
            areas:
            - areaCodes: areaCodes
              tacs:
              - null
              - null
            - areaCodes: areaCodes
              tacs:
              - null
              - null
          ratRestrictions:
          - null
          - null
          sorInfo:
            sorMacIausf: sorMacIausf
            countersor: countersor
            ackInd: true
          subsRegTimer: 5
          ueUsageType: 5
          internalGroupIds:
          - null
          - null
          micoAllowed: true
      properties:
        sharedDataId:
          pattern: ^[0-9]{5,6}-.+$
          type: string
        sharedAmData:
          $ref: '#/components/schemas/AccessAndMobilitySubscriptionData_2'
        sharedSmsSubsData:
          $ref: '#/components/schemas/SmsSubscriptionData_2'
        sharedSmsMngSubsData:
          $ref: '#/components/schemas/SmsManagementSubscriptionData_2'
        sharedDnnConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/DnnConfiguration_2'
          type: object
        sharedTraceData:
          $ref: '#/components/schemas/TraceData'
        sharedSnssaiInfos:
          additionalProperties:
            $ref: '#/components/schemas/SnssaiInfo_2'
          type: object
        sharedAuthenticationSubscription:
          $ref: '#/components/schemas/SharedAuthenticationSubscription'
      required:
      - sharedDataId
      type: object
    AccessAndMobilitySubscriptionData_2:
      example:
        supportedFeatures: supportedFeatures
        mcsPriority: true
        activeTime: 2
        subscribedUeAmbr:
          uplink: uplink
          downlink: downlink
        coreNetworkTypeRestrictions:
        - null
        - null
        sharedAmDataIds:
        - null
        - null
        nssai:
          supportedFeatures: supportedFeatures
          defaultSingleNssais:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
          singleNssais:
          - sd: sd
            sst: 20
          - sd: sd
            sst: 20
        dlPacketCount: 0
        gpsis:
        - null
        - null
        rfspIndex: 38
        mpsPriority: true
        forbiddenAreas:
        - areaCodes: areaCodes
          tacs:
          - null
          - null
        - areaCodes: areaCodes
          tacs:
          - null
          - null
        serviceAreaRestriction:
          maxNumOfTAs: 0
          areas:
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          - areaCodes: areaCodes
            tacs:
            - null
            - null
        ratRestrictions:
        - null
        - null
        sorInfo:
          sorMacIausf: sorMacIausf
          countersor: countersor
          ackInd: true
        subsRegTimer: 5
        ueUsageType: 5
        internalGroupIds:
        - null
        - null
        micoAllowed: true
      properties:
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        gpsis:
          items:
            $ref: '#/components/schemas/Gpsi_2'
          type: array
        internalGroupIds:
          items:
            $ref: '#/components/schemas/GroupId_2'
          minItems: 1
          type: array
        subscribedUeAmbr:
          $ref: '#/components/schemas/AmbrRm_2'
        nssai:
          $ref: '#/components/schemas/Nssai_2'
        ratRestrictions:
          items:
            $ref: '#/components/schemas/RatType_2'
          type: array
        forbiddenAreas:
          items:
            $ref: '#/components/schemas/Area_2'
          type: array
        serviceAreaRestriction:
          $ref: '#/components/schemas/ServiceAreaRestriction_2'
        coreNetworkTypeRestrictions:
          items:
            $ref: '#/components/schemas/CoreNetworkType_2'
          type: array
        rfspIndex:
          format: int32
          maximum: 256
          minimum: 1
          nullable: true
          type: integer
        subsRegTimer:
          format: int32
          nullable: true
          type: integer
        ueUsageType:
          format: int32
          type: integer
        mpsPriority:
          type: boolean
        mcsPriority:
          type: boolean
        activeTime:
          format: int32
          nullable: true
          type: integer
        dlPacketCount:
          format: int32
          minimum: -1
          type: integer
        sorInfo:
          $ref: '#/components/schemas/SorInfo_2'
        micoAllowed:
          type: boolean
        sharedAmDataIds:
          items:
            $ref: '#/components/schemas/SharedDataId_2'
          minItems: 1
          type: array
        odbPacketServices:
          $ref: '#/components/schemas/OdbPacketServices_2'
      type: object
    Nssai_2:
      example:
        supportedFeatures: supportedFeatures
        defaultSingleNssais:
        - sd: sd
          sst: 20
        - sd: sd
          sst: 20
        singleNssais:
        - sd: sd
          sst: 20
        - sd: sd
          sst: 20
      nullable: true
      properties:
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        defaultSingleNssais:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        singleNssais:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
      required:
      - defaultSingleNssais
      type: object
    UeUsageType_2:
      format: int32
      type: integer
    MpsPriorityIndicator_2:
      type: boolean
    McsPriorityIndicator_2:
      type: boolean
    DlPacketCount_2:
      format: int32
      minimum: -1
      type: integer
    SorInfo_2:
      example:
        sorMacIausf: sorMacIausf
        countersor: countersor
        ackInd: true
      properties:
        steeringContainer:
          $ref: '#/components/schemas/SteeringContainer_2'
        ackInd:
          type: boolean
        sorMacIausf:
          pattern: ^[A-Fa-f0-9]{32}$
          type: string
        countersor:
          pattern: ^[A-Fa-f0-9]{4}$
          type: string
      required:
      - ackInd
      - countersor
      - sorMacIausf
      type: object
    SteeringContainer_2:
      oneOf:
      - items:
          $ref: '#/components/schemas/SteeringInfo'
        minItems: 1
        type: array
      - $ref: '#/components/schemas/SecuredPacket_2'
    SecuredPacket_2:
      format: base64
      type: string
    MicoAllowed_2:
      type: boolean
    SmsSubscriptionData_2:
      example:
        sharedSmsSubsDataId:
        - null
        - null
        smsSubscribed: true
      properties:
        smsSubscribed:
          type: boolean
        sharedSmsSubsDataId:
          items:
            $ref: '#/components/schemas/SharedDataId_2'
          type: array
      type: object
    SmsSubscribed_2:
      type: boolean
    SmsManagementSubscriptionData_2:
      example:
        moSmsBarringAll: true
        supportedFeatures: supportedFeatures
        mtSmsBarringRoaming: true
        mtSmsSubscribed: true
        moSmsBarringRoaming: true
        mtSmsBarringAll: true
        moSmsSubscribed: true
        sharedSmsMngDataIds:
        - null
        - null
      properties:
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
        mtSmsSubscribed:
          type: boolean
        mtSmsBarringAll:
          type: boolean
        mtSmsBarringRoaming:
          type: boolean
        moSmsSubscribed:
          type: boolean
        moSmsBarringAll:
          type: boolean
        moSmsBarringRoaming:
          type: boolean
        sharedSmsMngDataIds:
          items:
            $ref: '#/components/schemas/SharedDataId_2'
          minItems: 1
          type: array
      type: object
    DnnConfiguration_2:
      example:
        iwkEpsInd: true
        sessionAmbr:
          uplink: uplink
          downlink: downlink
        5gQosProfile:
          priorityLevel: 26
          5qi: 237
          arp:
            priorityLevel: 6
        upSecurity: {}
        sscModes:
          allowedSscModes:
          - null
          - null
        3gppChargingCharacteristics: 3gppChargingCharacteristics
        pduSessionTypes:
          allowedSessionTypes:
          - null
          - null
        ladnIndicator: true
        staticIpAddress:
        - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          ipv6Prefix: 2001:db8:abcd:12::0/64
        - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          ipv6Prefix: 2001:db8:abcd:12::0/64
      properties:
        pduSessionTypes:
          $ref: '#/components/schemas/PduSessionTypes_2'
        sscModes:
          $ref: '#/components/schemas/SscModes_2'
        iwkEpsInd:
          type: boolean
        ladnIndicator:
          type: boolean
        5gQosProfile:
          $ref: '#/components/schemas/SubscribedDefaultQos_2'
        sessionAmbr:
          $ref: '#/components/schemas/Ambr_2'
        3gppChargingCharacteristics:
          type: string
        staticIpAddress:
          items:
            $ref: '#/components/schemas/IpAddress_2'
          maxItems: 2
          minItems: 1
          type: array
        upSecurity:
          $ref: '#/components/schemas/UpSecurity_2'
      required:
      - pduSessionTypes
      - sscModes
      type: object
    PduSessionTypes_2:
      example:
        allowedSessionTypes:
        - null
        - null
      properties:
        defaultSessionType:
          $ref: '#/components/schemas/PduSessionType_2'
        allowedSessionTypes:
          items:
            $ref: '#/components/schemas/PduSessionType_2'
          minItems: 1
          type: array
      required:
      - defaultSessionType
      type: object
    SscModes_2:
      example:
        allowedSscModes:
        - null
        - null
      properties:
        defaultSscMode:
          $ref: '#/components/schemas/SscMode_2'
        allowedSscModes:
          items:
            $ref: '#/components/schemas/SscMode_2'
          maxItems: 2
          minItems: 1
          type: array
      required:
      - defaultSscMode
      type: object
    IwkEpsInd_2:
      type: boolean
    LadnIndicator_2:
      type: boolean
    3GppChargingCharacteristics_2:
      type: string
    IpAddress_2:
      example:
        ipv6Addr: 2001:db8:85a3::8a2e:370:7334
        ipv4Addr: 198.51.100.1
        ipv6Prefix: 2001:db8:abcd:12::0/64
      oneOf:
      - required:
        - ipv4Address
      - required:
        - ipv6Address
      - required:
        - ipv6Prefix
      properties:
        ipv4Addr:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        ipv6Addr:
          $ref: '#/components/schemas/Ipv6Addr'
        ipv6Prefix:
          $ref: '#/components/schemas/Ipv6Prefix'
      type: object
    SnssaiInfo_2:
      example:
        dnnInfos:
        - defaultDnnIndicator: true
          iwkEpsInd: true
          dnn: dnn
          lboRoamingAllowed: true
          ladnIndicator: true
        - defaultDnnIndicator: true
          iwkEpsInd: true
          dnn: dnn
          lboRoamingAllowed: true
          ladnIndicator: true
      properties:
        dnnInfos:
          items:
            $ref: '#/components/schemas/DnnInfo_2'
          minItems: 1
          type: array
      required:
      - dnnInfos
      type: object
    DnnInfo_2:
      example:
        defaultDnnIndicator: true
        iwkEpsInd: true
        dnn: dnn
        lboRoamingAllowed: true
        ladnIndicator: true
      properties:
        dnn:
          type: string
        defaultDnnIndicator:
          type: boolean
        lboRoamingAllowed:
          type: boolean
        iwkEpsInd:
          type: boolean
        ladnIndicator:
          type: boolean
      required:
      - dnn
      type: object
    DnnIndicator_2:
      type: boolean
    LboRoamingAllowed_2:
      type: boolean
    SubscriptionDataSubscriptions:
      example:
        callbackReference: callbackReference
        supported-features: supported-features
        originalCallbackReference: originalCallbackReference
        expiry: 2000-01-23T04:56:07.000+00:00
        ueId: ueId
        monitoredResourceUri:
        - null
        - null
      properties:
        ueId:
          pattern: ^(imsi-[0-9]{5,15}|nai-.+|msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$
          type: string
        callbackReference:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        originalCallbackReference:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        monitoredResourceUri:
          items:
            $ref: '#/components/schemas/Uri_2'
          type: array
        expiry:
          format: date-time
          type: string
        supported-features:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - callbackReference
      - originalCallbackReference
      - supported-features
      - ueId
      type: object
    DataChangeNotify:
      example:
        originalCallbackReference:
        - null
        - null
        notifyItems:
        - resourceId: resourceId
          changes:
          - path: path
            newValue: ""
            from: from
            origValue: ""
          - path: path
            newValue: ""
            from: from
            origValue: ""
        - resourceId: resourceId
          changes:
          - path: path
            newValue: ""
            from: from
            origValue: ""
          - path: path
            newValue: ""
            from: from
            origValue: ""
        ueId: ueId
      properties:
        originalCallbackReference:
          items:
            $ref: '#/components/schemas/Uri_2'
          minItems: 1
          type: array
        ueId:
          pattern: ^(imsi-[0-9]{5,15}|nai-.+|msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$
          type: string
        notifyItems:
          items:
            $ref: '#/components/schemas/NotifyItem'
          minItems: 1
          type: array
      type: object
    TraceData:
      example:
        eventList: eventList
        collectionEntityIpv6Addr: 2001:db8:85a3::8a2e:370:7334
        collectionEntityIpv4Addr: 198.51.100.1
        traceRef: traceRef
        interfaceList: interfaceList
        neTypeList: neTypeList
      nullable: true
      properties:
        traceRef:
          pattern: ^[0-9]{3}[0-9]{2,3}-[A-Fa-f0-9]{6}$
          type: string
        traceDepth:
          $ref: '#/components/schemas/TraceDepth'
        neTypeList:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        eventList:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        collectionEntityIpv4Addr:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        collectionEntityIpv6Addr:
          $ref: '#/components/schemas/Ipv6Addr'
        interfaceList:
          pattern: ^[A-Fa-f0-9]+$
          type: string
      required:
      - eventList
      - neTypeList
      - traceDepth
      - traceRef
      type: object
    TraceDepth:
      enum:
      - MINIMUM
      - MEDIUM
      - MAXIMUM
      - MINIMUM_WO_VENDOR_EXTENSION
      - MEDIUM_WO_VENDOR_EXTENSION
      - MAXIMUM_WO_VENDOR_EXTENSION
      type: string
    Ipv4Addr:
      example: 198.51.100.1
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
      type: string
    Ipv6Addr:
      allOf:
      - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$
      - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$
      example: 2001:db8:85a3::8a2e:370:7334
      type: string
    IdentityData:
      example:
        gpsiList:
        - null
        - null
        supiList:
        - null
        - null
      properties:
        supiList:
          items:
            $ref: '#/components/schemas/Supi_2'
          maxItems: 2
          minItems: 1
          type: array
        gpsiList:
          items:
            $ref: '#/components/schemas/Gpsi'
          minItems: 1
          type: array
      type: object
    OperatorDeterminedBarringData:
      $ref: '#/components/schemas/OdbData'
    OdbData:
      example: {}
      properties:
        roamingOdb:
          $ref: '#/components/schemas/RoamingOdb'
        odbPacketServices:
          $ref: '#/components/schemas/OdbPacketServices'
      type: object
    RoamingOdb:
      enum:
      - OUTSIDE_HOME_PLMN
      - OUTSIDE_HOME_PLMN_COUNTRY
      type: string
    OdbPacketServices:
      enum:
      - ALL_PACKET_SERVICES
      - ROAMER_ACCESS_HPLMN_AP
      - ROAMER_ACCESS_VPLMN_AP
      type: string
    AmPolicyData:
      description: Contains the AM policy data for a given subscriber.
      example:
        subscCats:
        - subscCats
        - subscCats
      properties:
        subscCats:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    UePolicySet:
      description: Contains the UE policy data for a given subscriber.
      example:
        uePolicySections:
          key:
            uePolicySectionInfo: uePolicySectionInfo
            upsi: upsi
        subscCats:
        - subscCats
        - subscCats
        upsis:
        - upsis
        - upsis
      properties:
        subscCats:
          items:
            type: string
          minItems: 1
          type: array
        uePolicySections:
          additionalProperties:
            $ref: '#/components/schemas/UePolicySection'
          minProperties: 1
          type: object
        upsis:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    UePolicySection:
      description: Contains the UE policy section.
      example:
        uePolicySectionInfo: uePolicySectionInfo
        upsi: upsi
      properties:
        uePolicySectionInfo:
          format: byte
          type: string
        upsi:
          type: string
      required:
      - uePolicySectionInfo
      - upsi
      type: object
    Snssai:
      example:
        sd: sd
        sst: 20
      properties:
        sst:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        sd:
          pattern: ^[A-Fa-f0-9]{6}$
          type: string
      required:
      - sst
      type: object
    Dnn_2:
      type: string
    SmPolicyData:
      description: Contains the SM policy data for a given subscriber.
      example:
        umData:
          key:
            allowedUsage:
              duration: 0
              totalVolume: 0
              downlinkVolume: 0
              uplinkVolume: 0
            limitId: limitId
            scopes:
              key:
                snssai:
                  sd: sd
                  sst: 188
                dnn:
                - null
                - null
            resetTime:
              maxNumPeriod: 0
        umDataLimits:
          key:
            resetPeriod: 2000-01-23T04:56:07.000+00:00
            endDate: 2000-01-23T04:56:07.000+00:00
            usageLimit:
              duration: 0
              totalVolume: 0
              downlinkVolume: 0
              uplinkVolume: 0
            limitId: limitId
            scopes:
              key:
                snssai:
                  sd: sd
                  sst: 188
                dnn:
                - null
                - null
            startDate: 2000-01-23T04:56:07.000+00:00
        smPolicySnssaiData:
          key:
            smPolicyDnnData:
              key:
                adcSupport: true
                dnn: dnn
                ipv4Index: 0
                gbrDl: gbrDl
                subscSpendingLimits: true
                chfInfo:
                  secondaryChfAddress: secondaryChfAddress
                  primaryChfAddress: primaryChfAddress
                refUmDataLimitIds:
                  key:
                    monkey:
                    - monkey
                    - monkey
                    limitId: limitId
                offline: true
                allowedServices:
                - allowedServices
                - allowedServices
                mpsPriority: true
                imsSignallingPrio: true
                subscCats:
                - subscCats
                - subscCats
                gbrUl: gbrUl
                ipv6Index: 6
                online: true
                mpsPriorityLevel: 1
            snssai:
              sd: sd
              sst: 188
      properties:
        smPolicySnssaiData:
          additionalProperties:
            $ref: '#/components/schemas/SmPolicySnssaiData'
          minProperties: 1
          type: object
        umDataLimits:
          additionalProperties:
            $ref: '#/components/schemas/UsageMonDataLimit'
          minProperties: 1
          type: object
        umData:
          additionalProperties:
            $ref: '#/components/schemas/UsageMonData'
          minProperties: 1
          type: object
      required:
      - smPolicySnssaiData
      type: object
    SmPolicySnssaiData:
      description: Contains the SM policy data for a given subscriber and S-NSSAI.
      example:
        smPolicyDnnData:
          key:
            adcSupport: true
            dnn: dnn
            ipv4Index: 0
            gbrDl: gbrDl
            subscSpendingLimits: true
            chfInfo:
              secondaryChfAddress: secondaryChfAddress
              primaryChfAddress: primaryChfAddress
            refUmDataLimitIds:
              key:
                monkey:
                - monkey
                - monkey
                limitId: limitId
            offline: true
            allowedServices:
            - allowedServices
            - allowedServices
            mpsPriority: true
            imsSignallingPrio: true
            subscCats:
            - subscCats
            - subscCats
            gbrUl: gbrUl
            ipv6Index: 6
            online: true
            mpsPriorityLevel: 1
        snssai:
          sd: sd
          sst: 188
      properties:
        snssai:
          $ref: '#/components/schemas/Snssai_2'
        smPolicyDnnData:
          additionalProperties:
            $ref: '#/components/schemas/SmPolicyDnnData'
          minProperties: 1
          type: object
      required:
      - snssai
      type: object
    SmPolicyDnnData:
      description: Contains the SM policy data for a given DNN (and S-NSSAI).
      example:
        adcSupport: true
        dnn: dnn
        ipv4Index: 0
        gbrDl: gbrDl
        subscSpendingLimits: true
        chfInfo:
          secondaryChfAddress: secondaryChfAddress
          primaryChfAddress: primaryChfAddress
        refUmDataLimitIds:
          key:
            monkey:
            - monkey
            - monkey
            limitId: limitId
        offline: true
        allowedServices:
        - allowedServices
        - allowedServices
        mpsPriority: true
        imsSignallingPrio: true
        subscCats:
        - subscCats
        - subscCats
        gbrUl: gbrUl
        ipv6Index: 6
        online: true
        mpsPriorityLevel: 1
      properties:
        dnn:
          type: string
        allowedServices:
          items:
            type: string
          minItems: 1
          type: array
        subscCats:
          items:
            type: string
          minItems: 1
          type: array
        gbrUl:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        gbrDl:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        adcSupport:
          type: boolean
        subscSpendingLimits:
          type: boolean
        ipv4Index:
          format: int32
          type: integer
        ipv6Index:
          format: int32
          type: integer
        offline:
          type: boolean
        online:
          type: boolean
        chfInfo:
          $ref: '#/components/schemas/ChargingInformation'
        refUmDataLimitIds:
          additionalProperties:
            $ref: '#/components/schemas/LimitIdToMonitoringKey'
          minProperties: 1
          type: object
        mpsPriority:
          type: boolean
        imsSignallingPrio:
          type: boolean
        mpsPriorityLevel:
          format: int32
          type: integer
      required:
      - dnn
      type: object
    IpIndex:
      format: int32
      type: integer
    LimitIdToMonitoringKey:
      description: Contains the limit identifier and the corresponding monitoring key for a given S-NSSAI and DNN.
      example:
        monkey:
        - monkey
        - monkey
        limitId: limitId
      properties:
        limitId:
          type: string
        monkey:
          items:
            type: string
          minItems: 1
          type: array
      required:
      - limitId
      type: object
    UsageMonDataLimit:
      description: Contains usage monitoring control data for a subscriber.
      example:
        resetPeriod: 2000-01-23T04:56:07.000+00:00
        endDate: 2000-01-23T04:56:07.000+00:00
        usageLimit:
          duration: 0
          totalVolume: 0
          downlinkVolume: 0
          uplinkVolume: 0
        limitId: limitId
        scopes:
          key:
            snssai:
              sd: sd
              sst: 188
            dnn:
            - null
            - null
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        limitId:
          type: string
        scopes:
          additionalProperties:
            $ref: '#/components/schemas/UsageMonDataScope'
          minProperties: 1
          type: object
        umLevel:
          $ref: '#/components/schemas/UsageMonLevel'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        usageLimit:
          $ref: '#/components/schemas/UsageThreshold'
        resetPeriod:
          format: date-time
          type: string
      required:
      - limitId
      type: object
    UsageMonDataScope:
      description: Contains a SNSSAI and DNN combinations to which the UsageMonData instance belongs to.
      example:
        snssai:
          sd: sd
          sst: 188
        dnn:
        - null
        - null
      properties:
        snssai:
          $ref: '#/components/schemas/Snssai_2'
        dnn:
          items:
            $ref: '#/components/schemas/Dnn'
          minItems: 1
          type: array
      required:
      - snssai
      type: object
    UsageMonLevel:
      enum:
      - SESSION_LEVEL
      - SERVICE_LEVEL
      type: string
    UsageMonData:
      description: Contains remain allowed usage data for a subscriber.
      example:
        allowedUsage:
          duration: 0
          totalVolume: 0
          downlinkVolume: 0
          uplinkVolume: 0
        limitId: limitId
        scopes:
          key:
            snssai:
              sd: sd
              sst: 188
            dnn:
            - null
            - null
        resetTime:
          maxNumPeriod: 0
      properties:
        limitId:
          type: string
        scopes:
          additionalProperties:
            $ref: '#/components/schemas/UsageMonDataScope'
          minProperties: 1
          type: object
        umLevel:
          $ref: '#/components/schemas/UsageMonLevel'
        allowedUsage:
          $ref: '#/components/schemas/UsageThreshold'
        resetTime:
          $ref: '#/components/schemas/TimePeriod'
      required:
      - limitId
      type: object
    TimePeriod:
      description: Contains the periodicity for the defined usage monitoring data limits.
      example:
        maxNumPeriod: 0
      properties:
        period:
          $ref: '#/components/schemas/Periodicity'
        maxNumPeriod:
          format: int32
          minimum: 0
          type: integer
      required:
      - period
      type: object
    Periodicity:
      enum:
      - YEARLY
      - MONTHLY
      - WEEKLY
      - DAILY
      - HOURLY
      type: string
    SponsorConnectivityData:
      description: Contains the sponsored data connectivity related information for a sponsor identifier.
      example:
        aspIds:
        - aspIds
        - aspIds
      properties:
        aspIds:
          items:
            type: string
          type: array
      required:
      - aspIds
      type: object
    BdtData:
      description: Contains the background data transfer data.
      example:
        nwAreaInfo:
          ncgis:
          - plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          - plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          tais:
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          gRanNodeIds:
          - gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          - gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          ecgis:
          - eutraCellId: eutraCellId
            plmnId:
              mnc: mnc
              mcc: mcc
          - eutraCellId: eutraCellId
            plmnId:
              mnc: mnc
              mcc: mcc
        aspId: aspId
        transPolicy:
          maxBitRateDl: maxBitRateDl
          maxBitRateUl: maxBitRateUl
          ratingGroup: 0
          transPolicyId: 6
          recTimeInt:
            startTime: 2000-01-23T04:56:07.000+00:00
            stopTime: 2000-01-23T04:56:07.000+00:00
        bdtRefId: bdtRefId
      properties:
        aspId:
          type: string
        transPolicy:
          $ref: '#/components/schemas/TransferPolicy'
        bdtRefId:
          type: string
        nwAreaInfo:
          $ref: '#/components/schemas/NetworkAreaInfo'
      required:
      - aspIds
      - transPolicy
      type: object
    PolicyDataSubscription:
      description: Identifies a subscription to policy data change notification.
      example:
        supportedFeatures: supportedFeatures
        notificationUri: notificationUri
        monitoredResourceUris:
        - null
        - null
      properties:
        notificationUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        monitoredResourceUris:
          items:
            $ref: '#/components/schemas/Uri_2'
          type: array
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - monitoredResourceUris
      - notificationUri
      type: object
    PolicyDataChangeNotification:
      description: Contains changed policy data for which notification was requested.
      properties:
        amPolicyData:
          $ref: '#/components/schemas/AmPolicyData'
        uePolicySet:
          $ref: '#/components/schemas/UePolicySet'
        smPolicyData:
          $ref: '#/components/schemas/SmPolicyData'
        usageMonData:
          $ref: '#/components/schemas/UsageMonData'
        SponsorConnectivityData:
          $ref: '#/components/schemas/SponsorConnectivityData'
        bdtData:
          $ref: '#/components/schemas/BdtData'
      type: object
    OperatorSpecificDataContainer_2:
      example:
        NumberTypeElements:
          key: 6.027456183070403
        IntegerTypeElements:
          key: 0
        StringTypeElements:
          key: StringTypeElements
        BooleanTypeElements:
          key: true
      properties:
        StringTypeElements:
          additionalProperties:
            type: string
          type: object
        IntegerTypeElements:
          additionalProperties:
            format: int32
            type: integer
          type: object
        NumberTypeElements:
          additionalProperties:
            type: number
          type: object
        BooleanTypeElements:
          additionalProperties:
            type: boolean
          type: object
      type: object
    ApplicationId:
      type: string
    PfdDataForApp:
      example:
        cachingTime: 2000-01-23T04:56:07.000+00:00
        pfds:
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          urls:
          - urls
          - urls
          pfdId: pfdId
          domainNames:
          - domainNames
          - domainNames
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          urls:
          - urls
          - urls
          pfdId: pfdId
          domainNames:
          - domainNames
          - domainNames
        applicationId: applicationId
      properties:
        applicationId:
          type: string
        pfds:
          items:
            $ref: '#/components/schemas/PfdContent'
          minItems: 1
          type: array
        cachingTime:
          format: date-time
          type: string
      required:
      - applicationId
      - pfds
      type: object
    PfdContent:
      example:
        flowDescriptions:
        - flowDescriptions
        - flowDescriptions
        urls:
        - urls
        - urls
        pfdId: pfdId
        domainNames:
        - domainNames
        - domainNames
      properties:
        pfdId:
          description: Identifies a PDF of an application identifier.
          type: string
        flowDescriptions:
          description: Represents a 3-tuple with protocol, server ip and server port for UL/DL application traffic.
          items:
            type: string
          minItems: 1
          type: array
        urls:
          description: Indicates a URL or a regular expression which is used to match the significant parts of the URL.
          items:
            type: string
          minItems: 1
          type: array
        domainNames:
          description: Indicates an FQDN or a regular expression as a domain name matching criteria.
          items:
            type: string
          minItems: 1
          type: array
      type: object
    Supi:
      pattern: ^(imsi-[0-9]{5,15}|nai-.+|.+)$
      type: string
    TrafficInfluData:
      allOf:
      - oneOf:
        - required:
          - afAppId
        - required:
          - trafficFilters
        - required:
          - ethTrafficFilters
      - oneOf:
        - required:
          - supi
        - required:
          - interGroupId
      example:
        nwAreaInfo:
          ncgis:
          - plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          - plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          tais:
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          gRanNodeIds:
          - gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          - gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          ecgis:
          - eutraCellId: eutraCellId
            plmnId:
              mnc: mnc
              mcc: mcc
          - eutraCellId: eutraCellId
            plmnId:
              mnc: mnc
              mcc: mcc
        snssai:
          sd: sd
          sst: 188
        afAppId: afAppId
        validStartTime: 2000-01-23T04:56:07.000+00:00
        dnn: dnn
        trafficFilters:
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          flowId: 0
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          flowId: 0
        trafficRoutes:
        - dnai: dnai
          routeInfo:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            portNumber: 0
          routeProfId: routeProfId
        - dnai: dnai
          routeInfo:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            portNumber: 0
          routeProfId: routeProfId
        appReloInd: true
        supi: supi
        upPathChgNotifCorreId: upPathChgNotifCorreId
        validEndTime: 2000-01-23T04:56:07.000+00:00
        upPathChgNotifUri: upPathChgNotifUri
        ethTrafficFilters:
        - destMacAddr: destMacAddr
          sourceMacAddr: sourceMacAddr
          ethType: ethType
          fDesc: fDesc
          vlanTags:
          - vlanTags
          - vlanTags
        - destMacAddr: destMacAddr
          sourceMacAddr: sourceMacAddr
          ethType: ethType
          fDesc: fDesc
          vlanTags:
          - vlanTags
          - vlanTags
        interGroupId: interGroupId
      properties:
        upPathChgNotifCorreId:
          description: Contains the Notification Correlation Id allocated by the NEF for the UP path change notification.
          type: string
        appReloInd:
          description: Identifies whether an application can be relocated once a location of the application has been selected.
          type: boolean
        afAppId:
          description: Identifies an application.
          type: string
        dnn:
          type: string
        ethTrafficFilters:
          description: Identifies Ethernet packet filters.Either "trafficFilters" or "ethTrafficFilters" shall be included if applicable.
          items:
            $ref: '#/components/schemas/EthFlowDescription'
          minItems: 1
          type: array
        snssai:
          $ref: '#/components/schemas/Snssai_2'
        interGroupId:
          description: Identifies a group of users.
          type: string
        supi:
          pattern: ^(imsi-[0-9]{5,15}|nai-.+|.+)$
          type: string
        trafficFilters:
          description: Identifies IP packet filters.Either "trafficFilters" or "ethTrafficFilters" shall be included if applicable.
          items:
            $ref: '#/components/schemas/FlowInfo'
          minItems: 1
          type: array
        trafficRoutes:
          description: Identifies the N6 traffic routing requirement.
          items:
            $ref: '#/components/schemas/RouteToLocation'
          minItems: 1
          type: array
        validStartTime:
          format: date-time
          type: string
        validEndTime:
          format: date-time
          type: string
        nwAreaInfo:
          $ref: '#/components/schemas/NetworkAreaInfo'
        upPathChgNotifUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
      required:
      - trafficRoutes
      type: object
    TrafficInfluDataPatch:
      example:
        nwAreaInfo:
          ncgis:
          - plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          - plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          tais:
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          - tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          gRanNodeIds:
          - gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          - gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          ecgis:
          - eutraCellId: eutraCellId
            plmnId:
              mnc: mnc
              mcc: mcc
          - eutraCellId: eutraCellId
            plmnId:
              mnc: mnc
              mcc: mcc
        snssai:
          sd: sd
          sst: 188
        validStartTime: 2000-01-23T04:56:07.000+00:00
        dnn: dnn
        trafficFilters:
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          flowId: 0
        - flowDescriptions:
          - flowDescriptions
          - flowDescriptions
          flowId: 0
        trafficRoutes:
        - dnai: dnai
          routeInfo:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            portNumber: 0
          routeProfId: routeProfId
        - dnai: dnai
          routeInfo:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            portNumber: 0
          routeProfId: routeProfId
        appReloInd: true
        supi: supi
        upPathChgNotifCorreId: upPathChgNotifCorreId
        internalGroupId: internalGroupId
        validEndTime: 2000-01-23T04:56:07.000+00:00
        upPathChgNotifUri: upPathChgNotifUri
        ethTrafficFilters:
        - destMacAddr: destMacAddr
          sourceMacAddr: sourceMacAddr
          ethType: ethType
          fDesc: fDesc
          vlanTags:
          - vlanTags
          - vlanTags
        - destMacAddr: destMacAddr
          sourceMacAddr: sourceMacAddr
          ethType: ethType
          fDesc: fDesc
          vlanTags:
          - vlanTags
          - vlanTags
      properties:
        upPathChgNotifCorreId:
          description: Contains the Notification Correlation Id allocated by the NEF for the UP path change notification.
          type: string
        appReloInd:
          description: Identifies whether an application can be relocated once a location of the application has been selected.
          type: boolean
        dnn:
          type: string
        ethTrafficFilters:
          description: Identifies Ethernet packet filters.Either "trafficFilters" or "ethTrafficFilters" shall be included if applicable.
          items:
            $ref: '#/components/schemas/EthFlowDescription'
          minItems: 1
          type: array
        snssai:
          $ref: '#/components/schemas/Snssai_2'
        internalGroupId:
          description: Identifies a group of users.
          type: string
        supi:
          pattern: ^(imsi-[0-9]{5,15}|nai-.+|.+)$
          type: string
        trafficFilters:
          description: Identifies IP packet filters.Either "trafficFilters" or "ethTrafficFilters" shall be included if applicable.
          items:
            $ref: '#/components/schemas/FlowInfo'
          minItems: 1
          type: array
        trafficRoutes:
          description: Identifies the N6 traffic routing requirement.
          items:
            $ref: '#/components/schemas/RouteToLocation'
          minItems: 1
          type: array
        validStartTime:
          format: date-time
          type: string
        validEndTime:
          format: date-time
          type: string
        nwAreaInfo:
          $ref: '#/components/schemas/NetworkAreaInfo'
        upPathChgNotifUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
      type: object
    ExternalGroupId:
      description: string containing a local identifier followed by "@" and a domain identifier. Both the local identifier and the domain identifier shall be encoded as strings that do not contain any "@" characters. See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more information.
      type: string
    TrafficInfluSub:
      example:
        dnns:
        - null
        - null
        supis:
        - null
        - null
        supportedFeatures: supportedFeatures
        notificationUri: notificationUri
        snssais:
        - sd: sd
          sst: 188
        - sd: sd
          sst: 188
        internalGroupIds:
        - internalGroupIds
        - internalGroupIds
      oneOf:
      - required:
        - dnns
      - required:
        - snssais
      - required:
        - internalGroupIds
      - required:
        - supis
      properties:
        dnns:
          description: Each element identifies a DNN.
          items:
            $ref: '#/components/schemas/Dnn'
          minItems: 1
          type: array
        snssais:
          description: Each element identifies a slice.
          items:
            $ref: '#/components/schemas/Snssai_2'
          minItems: 1
          type: array
        internalGroupIds:
          description: Each element identifies a group of users.
          items:
            type: string
          minItems: 1
          type: array
        supis:
          description: Each element identifies the user.
          items:
            $ref: '#/components/schemas/Supi_2'
          minItems: 1
          type: array
        notificationUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - notificationUri
      type: object
    ProblemDetails_2:
      properties:
        type:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        title:
          description: A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem.
          type: string
        status:
          description: The HTTP status code for this occurrence of the problem.
          format: int32
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
        instance:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        cause:
          description: A machine-readable application error cause specific to this occurrence of the problem. This IE should be present and provide application-related error information, if available.
          type: string
        invalidParams:
          description: Description of invalid parameters, for a request rejected due to invalid parameters.
          items:
            $ref: '#/components/schemas/InvalidParam_2'
          minItems: 1
          type: array
      type: object
    Uri_2:
      description: string providing an URI formatted according to IETF RFC 3986.
      type: string
    InvalidParam_2:
      properties:
        param:
          description: Attribute's name encoded as a JSON Pointer, or header's name.
          type: string
        reason:
          description: A human-readable reason, e.g. "must be a positive integer".
          type: string
      required:
      - param
      type: object
    AccessAndMobilityData:
      example:
        currentPlmn:
          mnc: mnc
          mcc: mcc
        ratType:
        - null
        - null
        timeZone: timeZone
        timeZoneTs: 2000-01-23T04:56:07.000+00:00
        roamingStatusTs: 2000-01-23T04:56:07.000+00:00
        smsOverNasStatusTs: 2000-01-23T04:56:07.000+00:00
        currentPlmnTs: 2000-01-23T04:56:07.000+00:00
        locationTs: 2000-01-23T04:56:07.000+00:00
        regStates:
        - {}
        - {}
        connStatesTs: 2000-01-23T04:56:07.000+00:00
        regStatesTs: 2000-01-23T04:56:07.000+00:00
        reachabilityStatusTs: 2000-01-23T04:56:07.000+00:00
        roamingStatus: true
        ratTypesTs: 2000-01-23T04:56:07.000+00:00
        location:
          eutraLocation:
            geographicalInformation: geographicalInformation
            globalNgenbId:
              gNbId:
                bitLength: 23
                gNBValue: gNBValue
              plmnId:
                mnc: mnc
                mcc: mcc
              n3IwfId: n3IwfId
              ngeNbId: ngeNbId
            ageOfLocationInformation: 2624
            tai:
              tac: tac
              plmnId:
                mnc: mnc
                mcc: mcc
            ueLocationTimestamp: 2000-01-23T04:56:07.000+00:00
            geodeticInformation: geodeticInformation
            ecgi:
              eutraCellId: eutraCellId
              plmnId:
                mnc: mnc
                mcc: mcc
          nrLocation:
            geographicalInformation: geographicalInformation
            globalGnbId:
              gNbId:
                bitLength: 23
                gNBValue: gNBValue
              plmnId:
                mnc: mnc
                mcc: mcc
              n3IwfId: n3IwfId
              ngeNbId: ngeNbId
            ageOfLocationInformation: 19750
            ncgi:
              plmnId:
                mnc: mnc
                mcc: mcc
              nrCellId: nrCellId
            tai:
              tac: tac
              plmnId:
                mnc: mnc
                mcc: mcc
            ueLocationTimestamp: 2000-01-23T04:56:07.000+00:00
            geodeticInformation: geodeticInformation
          n3gaLocation:
            ueIpv4Addr: 198.51.100.1
            n3gppTai:
              tac: tac
              plmnId:
                mnc: mnc
                mcc: mcc
            ueIpv6Addr: 2001:db8:85a3::8a2e:370:7334
            n3IwfId: n3IwfId
            portNumber: 0
        connStates:
        - {}
        - {}
      properties:
        location:
          $ref: '#/components/schemas/UserLocation'
        locationTs:
          format: date-time
          type: string
        timeZone:
          type: string
        timeZoneTs:
          format: date-time
          type: string
        accessType:
          $ref: '#/components/schemas/AccessType'
        regStates:
          items:
            $ref: '#/components/schemas/RmInfo'
          type: array
        regStatesTs:
          format: date-time
          type: string
        connStates:
          items:
            $ref: '#/components/schemas/CmInfo'
          type: array
        connStatesTs:
          format: date-time
          type: string
        reachabilityStatus:
          $ref: '#/components/schemas/UeReachability'
        reachabilityStatusTs:
          format: date-time
          type: string
        smsOverNasStatus:
          $ref: '#/components/schemas/SmsSupport'
        smsOverNasStatusTs:
          format: date-time
          type: string
        roamingStatus:
          description: True  The serving PLMN of the UE is different from the HPLMN of the UE; False  The serving PLMN of the UE is the HPLMN of the UE.
          type: boolean
        roamingStatusTs:
          format: date-time
          type: string
        currentPlmn:
          $ref: '#/components/schemas/PlmnId'
        currentPlmnTs:
          format: date-time
          type: string
        ratType:
          items:
            $ref: '#/components/schemas/RatType'
          type: array
        ratTypesTs:
          format: date-time
          type: string
      type: object
    Ipv6Prefix:
      allOf:
      - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$
      - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\/.+)$
      example: 2001:db8:abcd:12::0/64
      type: string
    PduSessionManagementData:
      example:
        pduSessionStatusTs: 2000-01-23T04:56:07.000+00:00
        dnaiTs: 2000-01-23T04:56:07.000+00:00
        n6TrafficRoutingInfoTs: 2000-01-23T04:56:07.000+00:00
        dnn: dnn
        n6TrafficRoutingInfo:
        - dnai: dnai
          routeInfo:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            portNumber: 0
          routeProfId: routeProfId
        - dnai: dnai
          routeInfo:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            portNumber: 0
          routeProfId: routeProfId
        ipAddrTs: 2000-01-23T04:56:07.000+00:00
        ipv4Addr: 198.51.100.1
        dnai: dnai
        ipv6Prefix:
        - 2001:db8:abcd:12::0/64
        - 2001:db8:abcd:12::0/64
      properties:
        pduSessionStatus:
          $ref: '#/components/schemas/PduSessionStatus'
        pduSessionStatusTs:
          format: date-time
          type: string
        dnai:
          type: string
        dnaiTs:
          format: date-time
          type: string
        n6TrafficRoutingInfo:
          items:
            $ref: '#/components/schemas/RouteToLocation'
          type: array
        n6TrafficRoutingInfoTs:
          format: date-time
          type: string
        ipv4Addr:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        ipv6Prefix:
          description: UE IPv6 prefix.
          items:
            $ref: '#/components/schemas/Ipv6Prefix_2'
          minItems: 1
          type: array
        ipAddrTs:
          format: date-time
          type: string
        dnn:
          type: string
      type: object
    PduSessionStatus:
      enum:
      - ACTIVE
      - RELEASED
      type: string
    ExposureDataSubscription:
      example:
        supportedFeatures: supportedFeatures
        notificationUri: notificationUri
        monitoredResourceUris:
        - null
        - null
      properties:
        notificationUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        monitoredResourceUris:
          items:
            $ref: '#/components/schemas/Uri_2'
          minItems: 1
          type: array
        supportedFeatures:
          pattern: ^[A-Fa-f0-9]*$
          type: string
      required:
      - monitoredResourceUris
      - notificationUri
      type: object
    ExposureDataChangeNotification:
      properties:
        ueId:
          pattern: ^(imsi-[0-9]{5,15}|nai-.+|msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$
          type: string
        accessAndMobilityData:
          $ref: '#/components/schemas/AccessAndMobilityData'
        pduSessionManagementData:
          items:
            $ref: '#/components/schemas/PduSessionManagementData'
          minItems: 1
          type: array
      type: object
    SharedData_2:
      example:
        sharedSmsSubsData:
          sharedSmsSubsDataId:
          - null
          - null
          smsSubscribed: true
        sharedDnnConfigurations:
          key:
            iwkEpsInd: true
            sessionAmbr:
              uplink: uplink
              downlink: downlink
            5gQosProfile:
              priorityLevel: 126
              5qi: 126
              arp:
                priorityLevel: 8
            upSecurity: {}
            sscModes:
              allowedSscModes:
              - null
              - null
            3gppChargingCharacteristics: 3gppChargingCharacteristics
            pduSessionTypes:
              allowedSessionTypes:
              - null
              - null
            ladnIndicator: true
            staticIpAddress:
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
        sharedAuthenticationSubscription:
          authenticationManagementField: authenticationManagementField
          milenage:
            op:
              encryptionKey: 1
              opValue: opValue
              encryptionAlgorithm: 5
            constants:
              c3: c3
              c4: c4
              c5: c5
              c1: c1
              c2: c2
            rotations:
              r2: r2
              r3: r3
              r4: r4
              r5: r5
              r1: r1
          tuak:
            keccakIterations: 180
            top:
              topValue: topValue
              encryptionKey: 5
              encryptionAlgorithm: 2
        sharedSnssaiInfos:
          key:
            dnnInfos:
            - defaultDnnIndicator: true
              iwkEpsInd: true
              dnn: dnn
              lboRoamingAllowed: true
              ladnIndicator: true
            - defaultDnnIndicator: true
              iwkEpsInd: true
              dnn: dnn
              lboRoamingAllowed: true
              ladnIndicator: true
        sharedDataId: sharedDataId
        sharedTraceData:
          eventList: eventList
          collectionEntityIpv6Addr: 2001:db8:85a3::8a2e:370:7334
          collectionEntityIpv4Addr: 198.51.100.1
          traceRef: traceRef
          interfaceList: interfaceList
          neTypeList: neTypeList
        sharedSmsMngSubsData:
          moSmsBarringAll: true
          supportedFeatures: supportedFeatures
          mtSmsBarringRoaming: true
          mtSmsSubscribed: true
          moSmsBarringRoaming: true
          mtSmsBarringAll: true
          moSmsSubscribed: true
          sharedSmsMngDataIds:
          - null
          - null
        sharedAmData:
          supportedFeatures: supportedFeatures
          mcsPriority: true
          activeTime: 7
          subscribedUeAmbr:
            uplink: uplink
            downlink: downlink
          coreNetworkTypeRestrictions:
          - null
          - null
          sharedAmDataIds:
          - null
          - null
          nssai:
            supportedFeatures: supportedFeatures
            defaultSingleNssais:
            - sd: sd
              sst: 188
            - sd: sd
              sst: 188
            singleNssais:
            - sd: sd
              sst: 188
            - sd: sd
              sst: 188
          dlPacketCount: 0
          gpsis:
          - null
          - null
          rfspIndex: 27
          mpsPriority: true
          forbiddenAreas:
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          - areaCodes: areaCodes
            tacs:
            - null
            - null
          serviceAreaRestriction:
            maxNumOfTAs: 0
            areas:
            - areaCodes: areaCodes
              tacs:
              - null
              - null
            - areaCodes: areaCodes
              tacs:
              - null
              - null
          ratRestrictions:
          - null
          - null
          sorInfo:
            sorMacIausf: sorMacIausf
            countersor: countersor
            ackInd: true
          subsRegTimer: 1
          ueUsageType: 6
          internalGroupIds:
          - null
          - null
          micoAllowed: true
      properties:
        sharedDataId:
          pattern: ^[0-9]{5,6}-.+$
          type: string
        sharedAmData:
          $ref: '#/components/schemas/AccessAndMobilitySubscriptionData'
        sharedSmsSubsData:
          $ref: '#/components/schemas/SmsSubscriptionData'
        sharedSmsMngSubsData:
          $ref: '#/components/schemas/SmsManagementSubscriptionData'
        sharedDnnConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/DnnConfiguration'
          type: object
        sharedTraceData:
          $ref: '#/components/schemas/TraceData_2'
        sharedSnssaiInfos:
          additionalProperties:
            $ref: '#/components/schemas/SnssaiInfo'
          type: object
        sharedAuthenticationSubscription:
          $ref: '#/components/schemas/SharedAuthenticationSubscription_2'
      required:
      - sharedDataId
      type: object
    NfInstanceId:
      format: uuid
      type: string
    DateTime:
      format: date-time
      type: string
    SorMac:
      pattern: ^[A-Fa-f0-9]{32}$
      type: string
    TraceData_2:
      example:
        eventList: eventList
        collectionEntityIpv6Addr: 2001:db8:85a3::8a2e:370:7334
        collectionEntityIpv4Addr: 198.51.100.1
        traceRef: traceRef
        interfaceList: interfaceList
        neTypeList: neTypeList
      nullable: true
      properties:
        traceRef:
          pattern: ^[0-9]{3}[0-9]{2,3}-[A-Fa-f0-9]{6}$
          type: string
        traceDepth:
          $ref: '#/components/schemas/TraceDepth_2'
        neTypeList:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        eventList:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        collectionEntityIpv4Addr:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        collectionEntityIpv6Addr:
          $ref: '#/components/schemas/Ipv6Addr_2'
        interfaceList:
          pattern: ^[A-Fa-f0-9]+$
          type: string
      required:
      - eventList
      - neTypeList
      - traceDepth
      - traceRef
      type: object
    TraceDepth_2:
      enum:
      - MINIMUM
      - MEDIUM
      - MAXIMUM
      - MINIMUM_WO_VENDOR_EXTENSION
      - MEDIUM_WO_VENDOR_EXTENSION
      - MAXIMUM_WO_VENDOR_EXTENSION
      type: string
    Ipv4Addr_2:
      example: 198.51.100.1
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
      type: string
    Ipv6Addr_2:
      allOf:
      - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$
      - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$
      example: 2001:db8:85a3::8a2e:370:7334
      type: string
    SupportedFeatures_2:
      pattern: ^[A-Fa-f0-9]*$
      type: string
    Gpsi:
      pattern: ^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$
      type: string
    GroupId:
      pattern: ^[A-Fa-f0-9]{8}-[0-9]{3}-[0-9]{2,3}-([A-Fa-f0-9][A-Fa-f0-9]){1,10}$
      type: string
    AmbrRm:
      example:
        uplink: uplink
        downlink: downlink
      nullable: true
      properties:
        uplink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        downlink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
      required:
      - downlink
      - uplink
      type: object
    BitRate:
      pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
      type: string
    RatType:
      enum:
      - NR
      - EUTRA
      - WLAN
      - VIRTUAL
      type: string
    Area:
      example:
        areaCodes: areaCodes
        tacs:
        - null
        - null
      oneOf:
      - required:
        - tacs
      - required:
        - areaCode
      properties:
        tacs:
          items:
            $ref: '#/components/schemas/Tac'
          minItems: 1
          type: array
        areaCodes:
          type: string
      type: object
    Tac:
      pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
      type: string
    AreaCode:
      type: string
    ServiceAreaRestriction:
      allOf:
      - oneOf:
        - not:
            required:
            - restrictionType
        - required:
          - areas
      - anyOf:
        - not:
            properties:
              restrictionType:
                enum:
                - NOT_ALLOWED_AREAS
                type: string
            required:
            - restrictionType
        - not:
            required:
            - maxNumOfTAs
      example:
        maxNumOfTAs: 0
        areas:
        - areaCodes: areaCodes
          tacs:
          - null
          - null
        - areaCodes: areaCodes
          tacs:
          - null
          - null
      properties:
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        areas:
          items:
            $ref: '#/components/schemas/Area'
          type: array
        maxNumOfTAs:
          format: int32
          minimum: 0
          type: integer
      type: object
    RestrictionType:
      enum:
      - ALLOWED_AREAS
      - NOT_ALLOWED_AREAS
      type: string
    Uinteger:
      format: int32
      minimum: 0
      type: integer
    CoreNetworkType:
      enum:
      - 5GC
      - EPC
      type: string
    RfspIndexRm:
      format: int32
      maximum: 256
      minimum: 1
      nullable: true
      type: integer
    DurationSecRm:
      format: int32
      nullable: true
      type: integer
    Snssai_2:
      example:
        sd: sd
        sst: 188
      properties:
        sst:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        sd:
          pattern: ^[A-Fa-f0-9]{6}$
          type: string
      required:
      - sst
      type: object
    AckInd:
      type: boolean
    CounterSor:
      pattern: ^[A-Fa-f0-9]{4}$
      type: string
    SteeringInfo:
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        accessTechList:
          items:
            $ref: '#/components/schemas/AccessTech'
          minItems: 1
          type: array
      required:
      - plmnId
      type: object
    AccessTech:
      enum:
      - NR
      - EUTRAN_IN_WBS1_MODE_AND_NBS1_MODE
      - EUTRAN_IN_NBS1_MODE_ONLY
      - EUTRAN_IN_WBS1_MODE_ONLY
      - UTRAN
      - GSM_AND_ECGSM_IoT
      - GSM_WITHOUT_ECGSM_IoT
      - ECGSM_IoT_ONLY
      - CDMA_1xRTT
      - CDMA_HRPD
      - GSM_COMPACT
      type: string
    SubscribedDefaultQos:
      example:
        priorityLevel: 126
        5qi: 126
        arp:
          priorityLevel: 8
      properties:
        5qi:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        arp:
          $ref: '#/components/schemas/Arp'
        priorityLevel:
          format: int32
          maximum: 127
          minimum: 1
          type: integer
      required:
      - 5qi
      - arp
      type: object
    5Qi:
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    Arp:
      example:
        priorityLevel: 8
      properties:
        priorityLevel:
          format: int32
          maximum: 15
          minimum: 1
          nullable: true
          type: integer
        preemptCap:
          $ref: '#/components/schemas/PreemptionCapability'
        preemptVuln:
          $ref: '#/components/schemas/PreemptionVulnerability'
      required:
      - preemptCap
      - preemptVuln
      - priorityLevel
      type: object
    ArpPriorityLevel:
      format: int32
      maximum: 15
      minimum: 1
      nullable: true
      type: integer
    PreemptionCapability:
      enum:
      - NOT_PREEMPT
      - MAY_PREEMPT
      type: string
    PreemptionVulnerability:
      enum:
      - NOT_PREEMPTABLE
      - PREEMPTABLE
      type: string
    5QiPriorityLevel:
      format: int32
      maximum: 127
      minimum: 1
      type: integer
    Ambr:
      example:
        uplink: uplink
        downlink: downlink
      properties:
        uplink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        downlink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
      required:
      - downlink
      - uplink
      type: object
    UpSecurity:
      example: {}
      properties:
        upIntegr:
          $ref: '#/components/schemas/UpIntegrity'
        upConfid:
          $ref: '#/components/schemas/UpConfidentiality'
      required:
      - upConfid
      - upIntegr
      type: object
    UpIntegrity:
      enum:
      - REQUIRED
      - PREFERRED
      - NOT_NEEDED
      type: string
    UpConfidentiality:
      enum:
      - REQUIRED
      - PREFERRED
      - NOT_NEEDED
      type: string
    PduSessionType:
      enum:
      - IPV4
      - IPV6
      - IPV4V6
      - UNSTRUCTURED
      - ETHERNET
      type: string
    SscMode:
      enum:
      - SSC_MODE_1
      - SSC_MODE_2
      - SSC_MODE_3
      type: string
    Ipv6Prefix_2:
      allOf:
      - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$
      - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\/.+)$
      example: 2001:db8:abcd:12::0/64
      type: string
    NfInstanceId_2:
      format: uuid
      type: string
    Pei:
      pattern: ^(imei-[0-9]{15}|imeisv-[0-9]{16}|.+)$
      type: string
    ServiceName:
      enum:
      - nnrf-nfm
      - nnrf-disc
      - nudm-sdm
      - nudm-uecm
      - nudm-ueau
      - nudm-ee
      - nudm-pp
      - namf-comm
      - namf-evts
      - namf-mt
      - namf-loc
      - nsmf-pdusession
      - nsmf-event-exposure
      - nausf-auth
      - nausf-sorprotection
      - nnef-pfdmanagement
      - npcf-am-policy-control
      - npcf-smpolicycontrol
      - npcf-policyauthorization
      - npcf-bdtpolicycontrol
      - npcf-eventexposure
      - npcf-ue-policy-control
      - nsmsf-sms
      - nnssf-nsselection
      - nnssf-nssaiavailability
      - nudr-dr
      - nlmf-loc
      - n5g-eir-eic
      - nbsf-management
      - nchf-spendinglimitcontrol
      - nchf-convergedcharging
      - nnwdaf-eventssubscription
      - nnwdaf-analyticsinfo
      type: string
    Guami:
      example:
        plmnId:
          mnc: mnc
          mcc: mcc
        amfId: amfId
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        amfId:
          pattern: ^[A-Fa-f0-9]{6}$
          type: string
      required:
      - amfId
      - plmnId
      type: object
    PlmnId:
      example:
        mnc: mnc
        mcc: mcc
      properties:
        mcc:
          pattern: ^\d{3}$
          type: string
        mnc:
          pattern: ^\d{2,3}$
          type: string
      required:
      - mcc
      - mnc
      type: object
    Mcc:
      pattern: ^\d{3}$
      type: string
    Mnc:
      pattern: ^\d{2,3}$
      type: string
    AmfId:
      pattern: ^[A-Fa-f0-9]{6}$
      type: string
    BackupAmfInfo:
      example:
        backupAmf: backupAmf
        guamiList:
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
        - plmnId:
            mnc: mnc
            mcc: mcc
          amfId: amfId
      properties:
        backupAmf:
          type: string
        guamiList:
          items:
            $ref: '#/components/schemas/Guami'
          minItems: 1
          type: array
      required:
      - backupAmf
      type: object
    AmfName:
      type: string
    PduSessionId:
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    DiameterIdentity:
      pattern: ^([A-Za-z0-9]+(-[A-Za-z0-9]+).)+[a-z]{2,}$
      type: string
    DurationSec:
      format: int32
      type: integer
    DateTime_2:
      format: date-time
      type: string
    SharedAuthenticationSubscription:
      example:
        authenticationManagementField: authenticationManagementField
        milenage:
          op:
            encryptionKey: 4
            opValue: opValue
            encryptionAlgorithm: 7
          constants:
            c3: c3
            c4: c4
            c5: c5
            c1: c1
            c2: c2
          rotations:
            r2: r2
            r3: r3
            r4: r4
            r5: r5
            r1: r1
        tuak:
          keccakIterations: 38
          top:
            topValue: topValue
            encryptionKey: 1
            encryptionAlgorithm: 1
      properties:
        authenticationManagementField:
          pattern: ^[A-Fa-f0-9]{4}$
          type: string
        vectorAlgorithm:
          $ref: '#/components/schemas/VectorAlgorithm_2'
        milenage:
          $ref: '#/components/schemas/Milenage_2'
        tuak:
          $ref: '#/components/schemas/Tuak_2'
      required:
      - authenticationMethod
      - vectorAlgorithm
      type: object
    AuthenticationManagementField_2:
      pattern: ^[A-Fa-f0-9]{4}$
      type: string
    VectorAlgorithm_2:
      enum:
      - MILENAGE
      - TUAK
      type: string
    Milenage_2:
      example:
        op:
          encryptionKey: 4
          opValue: opValue
          encryptionAlgorithm: 7
        constants:
          c3: c3
          c4: c4
          c5: c5
          c1: c1
          c2: c2
        rotations:
          r2: r2
          r3: r3
          r4: r4
          r5: r5
          r1: r1
      properties:
        op:
          $ref: '#/components/schemas/Op_2'
        rotations:
          $ref: '#/components/schemas/Rotations_2'
        constants:
          $ref: '#/components/schemas/Constants_2'
      type: object
    Op_2:
      example:
        encryptionKey: 4
        opValue: opValue
        encryptionAlgorithm: 7
      properties:
        opValue:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        encryptionKey:
          format: int32
          type: integer
        encryptionAlgorithm:
          format: int32
          type: integer
      required:
      - encryptionAlgorithm
      - encryptionKey
      - opValue
      type: object
    OpValue_2:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    EncryptionKey_2:
      format: int32
      type: integer
    EncryptionAlgorithm_2:
      format: int32
      type: integer
    Rotations_2:
      example:
        r2: r2
        r3: r3
        r4: r4
        r5: r5
        r1: r1
      properties:
        r1:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r2:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r3:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r4:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        r5:
          pattern: ^[A-Fa-f0-9]+$
          type: string
      required:
      - r1
      - r2
      - r3
      - r4
      - r5
      type: object
    RValue_2:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Constants_2:
      example:
        c3: c3
        c4: c4
        c5: c5
        c1: c1
        c2: c2
      properties:
        c1:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c2:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c3:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c4:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        c5:
          pattern: ^[A-Fa-f0-9]+$
          type: string
      required:
      - c1
      - c2
      - c3
      - c4
      - c5
      type: object
    CValue_2:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Tuak_2:
      example:
        keccakIterations: 38
        top:
          topValue: topValue
          encryptionKey: 1
          encryptionAlgorithm: 1
      properties:
        top:
          $ref: '#/components/schemas/Top_2'
        keccakIterations:
          format: int32
          maximum: 255
          minimum: 1
          type: integer
      type: object
    Top_2:
      example:
        topValue: topValue
        encryptionKey: 1
        encryptionAlgorithm: 1
      properties:
        topValue:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        encryptionKey:
          format: int32
          type: integer
        encryptionAlgorithm:
          format: int32
          type: integer
      required:
      - encryptionAlgorithm
      - encryptionKey
      - topValue
      type: object
    TopValue_2:
      pattern: ^[A-Fa-f0-9]+$
      type: string
    Gpsi_2:
      pattern: ^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$
      type: string
    GroupId_2:
      pattern: ^[A-Fa-f0-9]{8}-[0-9]{3}-[0-9]{2,3}-([A-Fa-f0-9][A-Fa-f0-9]){1,10}$
      type: string
    AmbrRm_2:
      example:
        uplink: uplink
        downlink: downlink
      nullable: true
      properties:
        uplink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        downlink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
      required:
      - downlink
      - uplink
      type: object
    BitRate_2:
      pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
      type: string
    RatType_2:
      enum:
      - NR
      - EUTRA
      - WLAN
      - VIRTUAL
      type: string
    Area_2:
      example:
        areaCodes: areaCodes
        tacs:
        - null
        - null
      oneOf:
      - required:
        - tacs
      - required:
        - areaCode
      properties:
        tacs:
          items:
            $ref: '#/components/schemas/Tac_2'
          minItems: 1
          type: array
        areaCodes:
          type: string
      type: object
    Tac_2:
      pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
      type: string
    AreaCode_2:
      type: string
    ServiceAreaRestriction_2:
      allOf:
      - oneOf:
        - not:
            required:
            - restrictionType
        - required:
          - areas
      - anyOf:
        - not:
            properties:
              restrictionType:
                enum:
                - NOT_ALLOWED_AREAS
                type: string
            required:
            - restrictionType
        - not:
            required:
            - maxNumOfTAs
      example:
        maxNumOfTAs: 0
        areas:
        - areaCodes: areaCodes
          tacs:
          - null
          - null
        - areaCodes: areaCodes
          tacs:
          - null
          - null
      properties:
        restrictionType:
          $ref: '#/components/schemas/RestrictionType_2'
        areas:
          items:
            $ref: '#/components/schemas/Area_2'
          type: array
        maxNumOfTAs:
          format: int32
          minimum: 0
          type: integer
      type: object
    RestrictionType_2:
      enum:
      - ALLOWED_AREAS
      - NOT_ALLOWED_AREAS
      type: string
    Uinteger_2:
      format: int32
      minimum: 0
      type: integer
    CoreNetworkType_2:
      enum:
      - 5GC
      - EPC
      type: string
    RfspIndexRm_2:
      format: int32
      maximum: 256
      minimum: 1
      nullable: true
      type: integer
    DurationSecRm_2:
      format: int32
      nullable: true
      type: integer
    OdbPacketServices_2:
      enum:
      - ALL_PACKET_SERVICES
      - ROAMER_ACCESS_HPLMN_AP
      - ROAMER_ACCESS_VPLMN_AP
      type: string
    AckInd_2:
      type: boolean
    SorMac_2:
      pattern: ^[A-Fa-f0-9]{32}$
      type: string
    CounterSor_2:
      pattern: ^[A-Fa-f0-9]{4}$
      type: string
    SubscribedDefaultQos_2:
      example:
        priorityLevel: 26
        5qi: 237
        arp:
          priorityLevel: 6
      properties:
        5qi:
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        arp:
          $ref: '#/components/schemas/Arp_2'
        priorityLevel:
          format: int32
          maximum: 127
          minimum: 1
          type: integer
      required:
      - 5qi
      - arp
      type: object
    5Qi_2:
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    Arp_2:
      example:
        priorityLevel: 6
      properties:
        priorityLevel:
          format: int32
          maximum: 15
          minimum: 1
          nullable: true
          type: integer
        preemptCap:
          $ref: '#/components/schemas/PreemptionCapability_2'
        preemptVuln:
          $ref: '#/components/schemas/PreemptionVulnerability_2'
      required:
      - preemptCap
      - preemptVuln
      - priorityLevel
      type: object
    ArpPriorityLevel_2:
      format: int32
      maximum: 15
      minimum: 1
      nullable: true
      type: integer
    PreemptionCapability_2:
      enum:
      - NOT_PREEMPT
      - MAY_PREEMPT
      type: string
    PreemptionVulnerability_2:
      enum:
      - NOT_PREEMPTABLE
      - PREEMPTABLE
      type: string
    5QiPriorityLevel_2:
      format: int32
      maximum: 127
      minimum: 1
      type: integer
    Ambr_2:
      example:
        uplink: uplink
        downlink: downlink
      properties:
        uplink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        downlink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
      required:
      - downlink
      - uplink
      type: object
    UpSecurity_2:
      example: {}
      properties:
        upIntegr:
          $ref: '#/components/schemas/UpIntegrity_2'
        upConfid:
          $ref: '#/components/schemas/UpConfidentiality_2'
      required:
      - upConfid
      - upIntegr
      type: object
    UpIntegrity_2:
      enum:
      - REQUIRED
      - PREFERRED
      - NOT_NEEDED
      type: string
    UpConfidentiality_2:
      enum:
      - REQUIRED
      - PREFERRED
      - NOT_NEEDED
      type: string
    PduSessionType_2:
      enum:
      - IPV4
      - IPV6
      - IPV4V6
      - UNSTRUCTURED
      - ETHERNET
      type: string
    SscMode_2:
      enum:
      - SSC_MODE_1
      - SSC_MODE_2
      - SSC_MODE_3
      type: string
    VarUeId_2:
      pattern: ^(imsi-[0-9]{5,15}|nai-.+|msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$
      type: string
    NotifyItem:
      example:
        resourceId: resourceId
        changes:
        - path: path
          newValue: ""
          from: from
          origValue: ""
        - path: path
          newValue: ""
          from: from
          origValue: ""
      properties:
        resourceId:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        changes:
          items:
            $ref: '#/components/schemas/ChangeItem'
          minItems: 1
          type: array
      type: object
    ChangeItem:
      example:
        path: path
        newValue: ""
        from: from
        origValue: ""
      properties:
        op:
          $ref: '#/components/schemas/ChangeType'
        path:
          type: string
        from:
          type: string
        origValue: {}
        newValue: {}
      required:
      - op
      - path
      type: object
    ChangeType:
      enum:
      - ADD
      - MOVE
      - REMOVE
      - REPLACE
      type: string
    Supi_2:
      pattern: ^(imsi-[0-9]{5,15}|nai-.+|.+)$
      type: string
    Bytes:
      format: byte
      type: string
    ChargingInformation:
      example:
        secondaryChfAddress: secondaryChfAddress
        primaryChfAddress: primaryChfAddress
      properties:
        primaryChfAddress:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        secondaryChfAddress:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
      required:
      - primaryChfAddress
      - secondaryChfAddress
      type: object
    UsageThreshold:
      example:
        duration: 0
        totalVolume: 0
        downlinkVolume: 0
        uplinkVolume: 0
      properties:
        duration:
          description: Unsigned integer identifying a period of time in units of seconds.
          format: int32
          minimum: 0
          type: integer
        totalVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        downlinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        uplinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
      type: object
    DurationSec_2:
      description: Unsigned integer identifying a period of time in units of seconds.
      format: int32
      minimum: 0
      type: integer
    Volume:
      description: Unsigned integer identifying a volume in units of bytes.
      format: int64
      minimum: 0
      type: integer
    TransferPolicy:
      description: Describes a transfer policy.
      example:
        maxBitRateDl: maxBitRateDl
        maxBitRateUl: maxBitRateUl
        ratingGroup: 0
        transPolicyId: 6
        recTimeInt:
          startTime: 2000-01-23T04:56:07.000+00:00
          stopTime: 2000-01-23T04:56:07.000+00:00
      properties:
        maxBitRateDl:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        maxBitRateUl:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        ratingGroup:
          description: Indicates a rating group for the recommended time window.
          format: int32
          type: integer
        recTimeInt:
          $ref: '#/components/schemas/TimeWindow'
        transPolicyId:
          description: Contains an identity of a transfer policy.
          format: int32
          type: integer
      required:
      - ratingGroup
      - recTimeInt
      - transPolicyId
      type: object
    NetworkAreaInfo:
      description: Describes a network area information in which the NF service consumer requests the number of UEs.
      example:
        ncgis:
        - plmnId:
            mnc: mnc
            mcc: mcc
          nrCellId: nrCellId
        - plmnId:
            mnc: mnc
            mcc: mcc
          nrCellId: nrCellId
        tais:
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        - tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        gRanNodeIds:
        - gNbId:
            bitLength: 23
            gNBValue: gNBValue
          plmnId:
            mnc: mnc
            mcc: mcc
          n3IwfId: n3IwfId
          ngeNbId: ngeNbId
        - gNbId:
            bitLength: 23
            gNBValue: gNBValue
          plmnId:
            mnc: mnc
            mcc: mcc
          n3IwfId: n3IwfId
          ngeNbId: ngeNbId
        ecgis:
        - eutraCellId: eutraCellId
          plmnId:
            mnc: mnc
            mcc: mcc
        - eutraCellId: eutraCellId
          plmnId:
            mnc: mnc
            mcc: mcc
      properties:
        ecgis:
          description: Contains a list of E-UTRA cell identities.
          items:
            $ref: '#/components/schemas/Ecgi'
          minItems: 1
          type: array
        ncgis:
          description: Contains a list of NR cell identities.
          items:
            $ref: '#/components/schemas/Ncgi'
          minItems: 1
          type: array
        gRanNodeIds:
          description: Contains a list of NG RAN nodes.
          items:
            $ref: '#/components/schemas/GlobalRanNodeId'
          minItems: 1
          type: array
        tais:
          description: Contains a list of tracking area identities.
          items:
            $ref: '#/components/schemas/Tai'
          minItems: 1
          type: array
      type: object
    EthFlowDescription:
      description: Identifies an Ethernet flow
      example:
        destMacAddr: destMacAddr
        sourceMacAddr: sourceMacAddr
        ethType: ethType
        fDesc: fDesc
        vlanTags:
        - vlanTags
        - vlanTags
      properties:
        destMacAddr:
          pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
          type: string
        ethType:
          type: string
        fDesc:
          description: Defines a packet filter of an IP flow.
          type: string
        fDir:
          $ref: '#/components/schemas/FlowDirection'
        sourceMacAddr:
          pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
          type: string
        vlanTags:
          items:
            type: string
          maxItems: 2
          minItems: 1
          type: array
      required:
      - ethType
      type: object
    FlowDescription:
      description: Defines a packet filter of an IP flow.
      type: string
    FlowInfo:
      example:
        flowDescriptions:
        - flowDescriptions
        - flowDescriptions
        flowId: 0
      properties:
        flowId:
          description: Indicates the IP flow.
          format: int32
          type: integer
        flowDescriptions:
          description: Indicates the packet filters of the IP flow. Refer to subclause 5.3.8 of 3GPP TS 29.214 for encoding. It shall contain UL and/or DL IP flow description.
          items:
            type: string
          maxItems: 2
          minItems: 1
          type: array
      required:
      - flowId
      type: object
    RouteToLocation:
      example:
        dnai: dnai
        routeInfo:
          ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          portNumber: 0
        routeProfId: routeProfId
      nullable: true
      properties:
        dnai:
          type: string
        routeInfo:
          $ref: '#/components/schemas/RouteInformation'
        routeProfId:
          nullable: true
          type: string
      required:
      - dnai
      type: object
    Dnai:
      type: string
    RouteInformation:
      example:
        ipv6Addr: 2001:db8:85a3::8a2e:370:7334
        ipv4Addr: 198.51.100.1
        portNumber: 0
      nullable: true
      properties:
        ipv4Addr:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        ipv6Addr:
          $ref: '#/components/schemas/Ipv6Addr_2'
        portNumber:
          format: int32
          minimum: 0
          type: integer
      required:
      - portNumber
      type: object
    UserLocation:
      example:
        eutraLocation:
          geographicalInformation: geographicalInformation
          globalNgenbId:
            gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          ageOfLocationInformation: 2624
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          ueLocationTimestamp: 2000-01-23T04:56:07.000+00:00
          geodeticInformation: geodeticInformation
          ecgi:
            eutraCellId: eutraCellId
            plmnId:
              mnc: mnc
              mcc: mcc
        nrLocation:
          geographicalInformation: geographicalInformation
          globalGnbId:
            gNbId:
              bitLength: 23
              gNBValue: gNBValue
            plmnId:
              mnc: mnc
              mcc: mcc
            n3IwfId: n3IwfId
            ngeNbId: ngeNbId
          ageOfLocationInformation: 19750
          ncgi:
            plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          tai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          ueLocationTimestamp: 2000-01-23T04:56:07.000+00:00
          geodeticInformation: geodeticInformation
        n3gaLocation:
          ueIpv4Addr: 198.51.100.1
          n3gppTai:
            tac: tac
            plmnId:
              mnc: mnc
              mcc: mcc
          ueIpv6Addr: 2001:db8:85a3::8a2e:370:7334
          n3IwfId: n3IwfId
          portNumber: 0
      properties:
        eutraLocation:
          $ref: '#/components/schemas/EutraLocation'
        nrLocation:
          $ref: '#/components/schemas/NrLocation'
        n3gaLocation:
          $ref: '#/components/schemas/N3gaLocation'
      type: object
    EutraLocation:
      example:
        geographicalInformation: geographicalInformation
        globalNgenbId:
          gNbId:
            bitLength: 23
            gNBValue: gNBValue
          plmnId:
            mnc: mnc
            mcc: mcc
          n3IwfId: n3IwfId
          ngeNbId: ngeNbId
        ageOfLocationInformation: 2624
        tai:
          tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        ueLocationTimestamp: 2000-01-23T04:56:07.000+00:00
        geodeticInformation: geodeticInformation
        ecgi:
          eutraCellId: eutraCellId
          plmnId:
            mnc: mnc
            mcc: mcc
      properties:
        tai:
          $ref: '#/components/schemas/Tai'
        ecgi:
          $ref: '#/components/schemas/Ecgi'
        ageOfLocationInformation:
          format: int32
          maximum: 32767
          minimum: 0
          type: integer
        ueLocationTimestamp:
          format: date-time
          type: string
        geographicalInformation:
          pattern: ^[0-9A-F]{16}$
          type: string
        geodeticInformation:
          pattern: ^[0-9A-F]{20}$
          type: string
        globalNgenbId:
          $ref: '#/components/schemas/GlobalRanNodeId'
      required:
      - ecgi
      - tai
      type: object
    Tai:
      example:
        tac: tac
        plmnId:
          mnc: mnc
          mcc: mcc
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        tac:
          pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
          type: string
      required:
      - plmnId
      - tac
      type: object
    Ecgi:
      example:
        eutraCellId: eutraCellId
        plmnId:
          mnc: mnc
          mcc: mcc
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        eutraCellId:
          pattern: ^[A-Fa-f0-9]{7}$
          type: string
      required:
      - eutraCellId
      - plmnId
      type: object
    EutraCellId:
      pattern: ^[A-Fa-f0-9]{7}$
      type: string
    GlobalRanNodeId:
      example:
        gNbId:
          bitLength: 23
          gNBValue: gNBValue
        plmnId:
          mnc: mnc
          mcc: mcc
        n3IwfId: n3IwfId
        ngeNbId: ngeNbId
      oneOf:
      - required:
        - n3IwfId
      - required:
        - gNbId
      - required:
        - ngeNbId
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        n3IwfId:
          type: string
        gNbId:
          $ref: '#/components/schemas/GNbId'
        ngeNbId:
          pattern: ^(MacroNGeNB-[A-Fa-f0-9]{5}|LMacroNGeNB-[A-Fa-f0-9]{6}|SMacroNGeNB-[A-Fa-f0-9]{5})$
          type: string
      required:
      - plmnId
      type: object
    N3IwfId:
      type: string
    GNbId:
      example:
        bitLength: 23
        gNBValue: gNBValue
      properties:
        bitLength:
          format: int32
          maximum: 32
          minimum: 22
          type: integer
        gNBValue:
          pattern: ^[A-Fa-f0-9]{6,8}$
          type: string
      required:
      - bitLength
      - gNBValue
      type: object
    NgeNbId:
      pattern: ^(MacroNGeNB-[A-Fa-f0-9]{5}|LMacroNGeNB-[A-Fa-f0-9]{6}|SMacroNGeNB-[A-Fa-f0-9]{5})$
      type: string
    NrLocation:
      example:
        geographicalInformation: geographicalInformation
        globalGnbId:
          gNbId:
            bitLength: 23
            gNBValue: gNBValue
          plmnId:
            mnc: mnc
            mcc: mcc
          n3IwfId: n3IwfId
          ngeNbId: ngeNbId
        ageOfLocationInformation: 19750
        ncgi:
          plmnId:
            mnc: mnc
            mcc: mcc
          nrCellId: nrCellId
        tai:
          tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        ueLocationTimestamp: 2000-01-23T04:56:07.000+00:00
        geodeticInformation: geodeticInformation
      properties:
        tai:
          $ref: '#/components/schemas/Tai'
        ncgi:
          $ref: '#/components/schemas/Ncgi'
        ageOfLocationInformation:
          format: int32
          maximum: 32767
          minimum: 0
          type: integer
        ueLocationTimestamp:
          format: date-time
          type: string
        geographicalInformation:
          pattern: ^[0-9A-F]{16}$
          type: string
        geodeticInformation:
          pattern: ^[0-9A-F]{20}$
          type: string
        globalGnbId:
          $ref: '#/components/schemas/GlobalRanNodeId'
      required:
      - ncgi
      - tai
      type: object
    Ncgi:
      example:
        plmnId:
          mnc: mnc
          mcc: mcc
        nrCellId: nrCellId
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        nrCellId:
          pattern: ^[A-Fa-f0-9]{9}$
          type: string
      required:
      - nrCellId
      - plmnId
      type: object
    NrCellId:
      pattern: ^[A-Fa-f0-9]{9}$
      type: string
    N3gaLocation:
      example:
        ueIpv4Addr: 198.51.100.1
        n3gppTai:
          tac: tac
          plmnId:
            mnc: mnc
            mcc: mcc
        ueIpv6Addr: 2001:db8:85a3::8a2e:370:7334
        n3IwfId: n3IwfId
        portNumber: 0
      properties:
        n3gppTai:
          $ref: '#/components/schemas/Tai'
        n3IwfId:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        ueIpv4Addr:
          example: 198.51.100.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
          type: string
        ueIpv6Addr:
          $ref: '#/components/schemas/Ipv6Addr_2'
        portNumber:
          format: int32
          minimum: 0
          type: integer
      type: object
    TimeZone:
      type: string
    AccessType:
      enum:
      - 3GPP_ACCESS
      - NON_3GPP_ACCESS
      type: string
    RmInfo:
      example: {}
      properties:
        rmState:
          $ref: '#/components/schemas/RmState'
        accessType:
          $ref: '#/components/schemas/AccessType'
      required:
      - accessType
      - rmState
      type: object
    RmState:
      enum:
      - REGISTERED
      - DEREGISTERED
      type: string
    CmInfo:
      example: {}
      properties:
        cmState:
          $ref: '#/components/schemas/CmState'
        accessType:
          $ref: '#/components/schemas/AccessType'
      required:
      - accessType
      - cmState
      type: object
    CmState:
      enum:
      - IDLE
      - CONNECTED
      type: string
    UeReachability:
      enum:
      - UNREACHABLE
      - REACHABLE
      - REGULATORY_ONLY
      type: string
    SmsSupport:
      enum:
      - 3GPP
      - NON_3GPP
      - BOTH
      - NONE
      type: string
    SharedAuthenticationSubscription_2:
      example:
        authenticationManagementField: authenticationManagementField
        milenage:
          op:
            encryptionKey: 1
            opValue: opValue
            encryptionAlgorithm: 5
          constants:
            c3: c3
            c4: c4
            c5: c5
            c1: c1
            c2: c2
          rotations:
            r2: r2
            r3: r3
            r4: r4
            r5: r5
            r1: r1
        tuak:
          keccakIterations: 180
          top:
            topValue: topValue
            encryptionKey: 5
            encryptionAlgorithm: 2
      properties:
        authenticationManagementField:
          pattern: ^[A-Fa-f0-9]{4}$
          type: string
        vectorAlgorithm:
          $ref: '#/components/schemas/VectorAlgorithm'
        milenage:
          $ref: '#/components/schemas/Milenage'
        tuak:
          $ref: '#/components/schemas/Tuak'
      required:
      - authenticationMethod
      - vectorAlgorithm
      type: object
    TimeWindow:
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        stopTime: 2000-01-23T04:56:07.000+00:00
      properties:
        startTime:
          format: date-time
          type: string
        stopTime:
          format: date-time
          type: string
      required:
      - startTime
      - stopTime
      type: object
    MacAddr48:
      pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
      type: string
    FlowDirection:
      enum:
      - DOWNLINK
      - UPLINK
      - BIDIRECTIONAL
      - UNSPECIFIED
      type: string
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            nudr-dr: Access to the Nudr_DataRepository API
          tokenUrl: '{nrfApiRoot}/oauth2/token'
      type: oauth2
