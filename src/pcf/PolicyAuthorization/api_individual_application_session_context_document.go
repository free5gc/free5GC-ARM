/*
 * Npcf_PolicyAuthorization Service API
 *
 * This is the Policy Authorization Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package PolicyAuthorization

import (
	"free5gc/lib/http_wrapper"
	"free5gc/lib/openapi/models"
	"free5gc/src/pcf/pcf_handler/pcf_message"

	"github.com/gin-gonic/gin"
)

// DeleteAppSession - Deletes an existing Individual Application Session Context
func DeleteAppSession(c *gin.Context) {

	req := http_wrapper.NewRequest(c.Request, nil)
	req.Params["appSessionId"], _ = c.Params.Get("appSessionId")
	channelMsg := pcf_message.NewHttpChannelMessage(pcf_message.EventDeleteAppSession, req)

	pcf_message.SendMessage(channelMsg)
	recvMsg := <-channelMsg.HttpChannel

	HTTPResponse := recvMsg.HTTPResponse
	c.JSON(HTTPResponse.Status, HTTPResponse.Body)
}

// GetAppSession - Reads an existing Individual Application Session Context
func GetAppSession(c *gin.Context) {

	req := http_wrapper.NewRequest(c.Request, nil)
	req.Params["appSessionId"], _ = c.Params.Get("appSessionId")
	channelMsg := pcf_message.NewHttpChannelMessage(pcf_message.EventGetAppSession, req)

	pcf_message.SendMessage(channelMsg)
	recvMsg := <-channelMsg.HttpChannel

	HTTPResponse := recvMsg.HTTPResponse
	c.JSON(HTTPResponse.Status, HTTPResponse.Body)
}

// ModAppSession - Modifies an existing Individual Application Session Context
func ModAppSession(c *gin.Context) {
	var appSessionContextUpdateData models.AppSessionContextUpdateData
	c.BindJSON(&appSessionContextUpdateData)

	req := http_wrapper.NewRequest(c.Request, appSessionContextUpdateData)
	req.Params["appSessionId"], _ = c.Params.Get("appSessionId")
	channelMsg := pcf_message.NewHttpChannelMessage(pcf_message.EventModAppSession, req)

	pcf_message.SendMessage(channelMsg)
	recvMsg := <-channelMsg.HttpChannel

	HTTPResponse := recvMsg.HTTPResponse
	c.JSON(HTTPResponse.Status, HTTPResponse.Body)

}
