/*
 * Nudm_EE
 *
 * Nudm Event Exposure Service
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package EventExposure_test

import (
	"testing"
)

// CreateEeSubscription - Subscribe
func TestCreateEeSubscription(t *testing.T) {
	/*go udm_handler.Handle()
	go func() { // udm server
		router := gin.Default()
		Nudm_EE_Server.AddService(router)

		udmLogPath := path_util.Gofree5gcPath("free5gc/udmsslkey.log")
		udmPemPath := path_util.Gofree5gcPath("free5gc/support/TLS/udm.pem")
		udmKeyPath := path_util.Gofree5gcPath("free5gc/support/TLS/udm.key")
		server, err := http2_util.NewServer(":29503", udmLogPath, router)
		if err == nil && server != nil {
			logger.InitLog.Infoln(server.ListenAndServeTLS(udmPemPath, udmKeyPath))
			assert.True(t, err == nil)
		}
	}()

	go func() { // fake udr server
		router := gin.Default()

		router.POST("/nudr-dr/v1/:ueIdentity/ee-subscriptions", func(c *gin.Context) {
			ueIdentity := c.Param("ueIdentity")
			fmt.Println("==========CreateEeSubscription - Subscribe==========")
			fmt.Println("ueIdentity: ", ueIdentity)
			var testCreatedEeSubscription models.CreatedEeSubscription
			testCreatedEeSubscription.NumberOfUes = 2
			c.JSON(http.StatusCreated, testCreatedEeSubscription)
		})

		udrLogPath := path_util.Gofree5gcPath("free5gc/udrsslkey.log")
		udrPemPath := path_util.Gofree5gcPath("free5gc/support/TLS/udr.pem")
		udrKeyPath := path_util.Gofree5gcPath("free5gc/support/TLS/udr.key")

		server, err := http2_util.NewServer(":29504", udrLogPath, router)
		if err == nil && server != nil {
			logger.InitLog.Infoln(server.ListenAndServeTLS(udrPemPath, udrKeyPath))
			assert.True(t, err == nil)
		}
	}()

	udm_context.Init()
	cfg := Nudm_EE_Client.NewConfiguration()
	cfg.SetBasePath("https://localhost:29503")
	clientAPI := Nudm_EE_Client.NewAPIClient(cfg)

	var eeSubscription models.EeSubscription
	eeSubscription.SupportedFeatures = "Test001"
	ueIdentity := "SDM1234"
	createdEeSubscription, resp, err := clientAPI.CreateEESubscriptionApi.CreateEeSubscription(context.Background(), ueIdentity, eeSubscription)

	if err != nil {
		fmt.Println(err.Error())
	} else {
		fmt.Println("resp: ", resp)
		fmt.Println("createdEeSubscription: ", createdEeSubscription)
	}
	*/
}
