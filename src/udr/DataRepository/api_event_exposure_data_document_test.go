/*
 * Nudr_DataRepository API OpenAPI file
 *
 * Unified Data Repository Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package DataRepository_test

import (
	"context"
	"go.mongodb.org/mongo-driver/bson"
	"free5gc/src/udr/logger"
	"net/http"
	"testing"

	"free5gc/lib/Nudr_DataRepository"
	"free5gc/lib/openapi/models"

	"github.com/google/go-cmp/cmp"
)

// QueryEEData - Retrieves the ee profile data of a UE
func TestQueryEEData(t *testing.T) {
	runTestServer(t)

	connectMongoDB(t)

	// Drop old data
	collection := Client.Database("free5gc").Collection("subscriptionData.eeProfileData")
	collection.DeleteOne(context.TODO(), bson.M{"ueId": "imsi-0123456789"})

	// Set client and set url
	client := setTestClient(t)

	// Set test data
	ueId := "imsi-0123456789"
	testData := models.EeProfileData{
		RestrictedEventTypes: []models.EventType{models.EventType_LOSS_OF_CONNECTIVITY, models.EventType_UE_REACHABILITY_FOR_DATA},
	}
	insertTestData := toBsonM(testData)
	insertTestData["ueId"] = ueId
	collection.InsertOne(context.TODO(), insertTestData)

	{
		// Check test data (Use RESTful GET)
		var queryEEDataParamOpts Nudr_DataRepository.QueryEEDataParamOpts
		eeProfileData, res, err := client.EventExposureDataDocumentApi.QueryEEData(context.TODO(), ueId, &queryEEDataParamOpts)
		if err != nil {
			logger.AppLog.Panic(err)
		}

		if status := res.StatusCode; status != http.StatusOK {
			t.Errorf("handler returned wrong status code: got %v want %v",
				status, http.StatusOK)
		}

		if cmp.Equal(testData, eeProfileData, Opt) != true {
			t.Errorf("handler returned unexpected body: got %v want %v",
				eeProfileData, testData)
		}
	}

	// Clean test data
	collection.DeleteOne(context.TODO(), bson.M{"ueId": "imsi-0123456789"})

	// TEST END
}
